var searchIndex = {};
searchIndex["parity"] = {"doc":"Ethcore client application.","items":[[11,"new","json_ipc_server::nix","New server",0,{"inputs":[{"name":"str"},{"name":"arc"}],"output":{"name":"result"}}],[11,"run","","Run server (in current thread)",0,null],[11,"poll","","Poll server requests (for manual async scenarios)",0,null],[11,"run_async","","Run server (in separate thread)",0,null],[11,"stop_async","","",0,null],[11,"stop","","",0,null],[11,"fmt","","",1,null],[11,"from","","",1,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"drop","","",0,null],[11,"addr","jsonrpc_http_server","Returns address of this server",2,null],[11,"empty","jsonrpc_http_server::request_response","Create empty `Request`",3,{"inputs":[],"output":{"name":"request"}}],[11,"empty","","Create response with empty body and 200 OK status code.",4,{"inputs":[],"output":{"name":"response"}}],[11,"ok","","Create response with given body and 200 OK status code.",4,{"inputs":[{"name":"string"}],"output":{"name":"response"}}],[11,"host_not_allowed","","Create response for not allowed hosts.",4,{"inputs":[],"output":{"name":"response"}}],[11,"unsupported_content_type","","Create response for unsupported content type.",4,{"inputs":[],"output":{"name":"response"}}],[11,"method_not_allowed","","Create response for disallowed method used.",4,{"inputs":[],"output":{"name":"response"}}],[11,"drop","jsonrpc_http_server::handler","",5,null],[11,"new","","Create new request handler.",5,{"inputs":[{"name":"arc"},{"name":"option"},{"name":"option"},{"name":"panichandler"}],"output":{"name":"serverhandler"}}],[11,"on_request","","",5,null],[11,"on_request_readable","","This event occurs each time the `Request` is ready to be read from.",5,null],[11,"on_response","","This event occurs after the first time this handled signals `Next::write()`.",5,null],[11,"on_response_writable","","This event occurs each time the `Response` is ready to be written to.",5,null],[11,"fmt","jsonrpc_http_server","",6,null],[11,"from","","",6,{"inputs":[{"name":"error"}],"output":{"name":"rpcservererror"}}],[11,"into","","",7,null],[11,"from","","",7,{"inputs":[{"name":"option"}],"output":{"name":"domainsvalidation"}}],[11,"new","","Creates new `ServerBuilder` with specified `IoHandler`.",8,{"inputs":[{"name":"arc"}],"output":{"name":"serverbuilder"}}],[11,"panic_handler","","Sets handler invoked in case of server panic.",8,null],[11,"cors","","Configures a list of allowed CORS origins.",8,null],[11,"allow_only_bind_host","","Allow connections only with `Host` header set to binding address.",8,null],[11,"allowed_hosts","","Specify a list of valid `Host` headers. Binding address is allowed automatically.",8,null],[11,"start_http","","Start this JSON-RPC HTTP server trying to bind to specified `SocketAddr`.",8,null],[11,"drop","","",2,null],[11,"set_panic_handler","ethcore_dapps","Set callback for panics.",9,null],[11,"add_delegate","","",10,null],[11,"new","","Construct new dapps server",10,{"inputs":[{"name":"string"}],"output":{"name":"serverbuilder"}}],[11,"start_unsecure_http","","Asynchronously start server with no authentication,\nreturns result with `Server` handle on success or an error.",10,null],[11,"start_basic_auth_http","","Asynchronously start server with `HTTP Basic Authentication`,\nreturn result with `Server` handle on success or an error.",10,null],[11,"drop","","",9,null],[11,"fmt","","",11,null],[11,"from","","",11,{"inputs":[{"name":"error"}],"output":{"name":"servererror"}}],[11,"default","ethcore_signer::authcode_store","",12,{"inputs":[],"output":{"name":"defaulttimeprovider"}}],[11,"now","","",12,null],[11,"from_file","","Reads `AuthCodes` from file and creates new instance using `DefaultTimeProvider`.",13,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"to_file","","Writes all `AuthCodes` to a disk.",13,null],[11,"new","","Creates a new `AuthCodes` store with given `TimeProvider`.",13,{"inputs":[{"name":"vec"},{"name":"t"}],"output":{"name":"authcodes"}}],[11,"is_valid","","Checks if given hash is correct identifier of `SignerUI`",13,null],[11,"generate_new","","Generates and returns a new code that can be used by `SignerUIs`",13,null],[11,"fmt","ethcore_signer::ws_server","",14,null],[11,"from","","",14,{"inputs":[{"name":"error"}],"output":{"name":"servererror"}}],[11,"add_delegate","","",15,null],[11,"new","","Creates new `ServerBuilder`",15,{"inputs":[{"name":"arc"},{"name":"pathbuf"}],"output":{"name":"serverbuilder"}}],[11,"skip_origin_validation","","If set to `true` server will not verify Origin of incoming requests.\nNot recommended. Use only for development.",15,null],[11,"start","","Starts a new `WebSocket` server in separate thread.\nReturns a `Server` handle which closes the server when droped.",15,null],[11,"on_panic","","",16,null],[11,"drop","","",16,null],[11,"start_listening","ethcore_rpc::v1::helpers::signing_queue","Blocks the thread and starts listening for notifications regarding all actions in the queue.\nFor each event, `listener` callback will be invoked.\nThis method can be used only once (only single consumer of events can exist).",17,null],[11,"finish","","Notifies consumer that the communcation is over.\nNo more events will be sent after this function is invoked.",17,null],[11,"new","ethcore_rpc::v1::impls::web3","Creates new Web3Client.",18,{"inputs":[],"output":{"name":"web3client"}}],[11,"client_version","","",18,null],[11,"sha3","","",18,null],[11,"default","ethcore_rpc::v1::impls::eth","",19,{"inputs":[],"output":{"name":"ethclientoptions"}}],[11,"new","","Creates new EthClient.",20,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"ethclientoptions"}],"output":{"name":"ethclient"}}],[11,"protocol_version","","",20,null],[11,"syncing","","",20,null],[11,"author","","",20,null],[11,"is_mining","","",20,null],[11,"hashrate","","",20,null],[11,"gas_price","","",20,null],[11,"accounts","","",20,null],[11,"block_number","","",20,null],[11,"balance","","",20,null],[11,"storage_at","","",20,null],[11,"transaction_count","","",20,null],[11,"block_transaction_count_by_hash","","",20,null],[11,"block_transaction_count_by_number","","",20,null],[11,"block_uncles_count_by_hash","","",20,null],[11,"block_uncles_count_by_number","","",20,null],[11,"code_at","","",20,null],[11,"block_by_hash","","",20,null],[11,"block_by_number","","",20,null],[11,"transaction_by_hash","","",20,null],[11,"transaction_by_block_hash_and_index","","",20,null],[11,"transaction_by_block_number_and_index","","",20,null],[11,"transaction_receipt","","",20,null],[11,"uncle_by_block_hash_and_index","","",20,null],[11,"uncle_by_block_number_and_index","","",20,null],[11,"compilers","","",20,null],[11,"logs","","",20,null],[11,"work","","",20,null],[11,"submit_work","","",20,null],[11,"submit_hashrate","","",20,null],[11,"send_raw_transaction","","",20,null],[11,"call","","",20,null],[11,"estimate_gas","","",20,null],[11,"compile_lll","","",20,null],[11,"compile_serpent","","",20,null],[11,"compile_solidity","","",20,null],[11,"new","ethcore_rpc::v1::impls::eth_filter","Creates new Eth filter client.",21,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"ethfilterclient"}}],[11,"new_filter","","",21,null],[11,"new_block_filter","","",21,null],[11,"new_pending_transaction_filter","","",21,null],[11,"filter_changes","","",21,null],[11,"filter_logs","","",21,null],[11,"uninstall_filter","","",21,null],[11,"new","ethcore_rpc::v1::impls::eth_signing","Creates a new signing queue client given shared signing queue.",22,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"}],"output":{"name":"ethsigningqueueclient"}}],[11,"sign","","",22,null],[11,"post_sign","","",22,null],[11,"send_transaction","","",22,null],[11,"post_transaction","","",22,null],[11,"check_request","","",22,null],[11,"new","","Creates new EthClient.",23,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"}],"output":{"name":"ethsigningunsafeclient"}}],[11,"sign","","",23,null],[11,"send_transaction","","",23,null],[11,"post_sign","","",23,null],[11,"post_transaction","","",23,null],[11,"check_request","","",23,null],[11,"new","ethcore_rpc::v1::impls::net","Creates new NetClient.",24,{"inputs":[{"name":"arc"}],"output":{"name":"netclient"}}],[11,"version","","",24,null],[11,"peer_count","","",24,null],[11,"is_listening","","",24,null],[11,"new","ethcore_rpc::v1::impls::personal","Creates new PersonalClient",25,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"option"},{"name":"bool"}],"output":{"name":"personalclient"}}],[11,"signer_enabled","","",25,null],[11,"accounts","","",25,null],[11,"new_account","","",25,null],[11,"unlock_account","","",25,null],[11,"sign_and_send_transaction","","",25,null],[11,"set_account_name","","",25,null],[11,"set_account_meta","","",25,null],[11,"accounts_info","","",25,null],[11,"new","ethcore_rpc::v1::impls::personal_signer","Create new instance of signer client.",26,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"}],"output":{"name":"signerclient"}}],[11,"requests_to_confirm","","",26,null],[11,"confirm_request","","",26,null],[11,"reject_request","","",26,null],[11,"new","ethcore_rpc::v1::impls::ethcore","Creates new `EthcoreClient`.",27,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"option"}],"output":{"name":"ethcoreclient"}}],[11,"transactions_limit","","",27,null],[11,"min_gas_price","","",27,null],[11,"extra_data","","",27,null],[11,"gas_floor_target","","",27,null],[11,"gas_ceil_target","","",27,null],[11,"dev_logs","","",27,null],[11,"dev_logs_levels","","",27,null],[11,"net_chain","","",27,null],[11,"net_max_peers","","",27,null],[11,"net_port","","",27,null],[11,"node_name","","",27,null],[11,"rpc_settings","","",27,null],[11,"default_extra_data","","",27,null],[11,"gas_price_statistics","","",27,null],[11,"unsigned_transactions_count","","",27,null],[11,"new","ethcore_rpc::v1::impls::ethcore_set","Creates new `EthcoreSetClient`.",28,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"}],"output":{"name":"ethcoresetclient"}}],[11,"set_min_gas_price","","",28,null],[11,"set_gas_floor_target","","",28,null],[11,"set_gas_ceil_target","","",28,null],[11,"set_extra_data","","",28,null],[11,"set_author","","",28,null],[11,"set_transactions_limit","","",28,null],[11,"set_tx_gas_limit","","",28,null],[11,"add_reserved_peer","","",28,null],[11,"remove_reserved_peer","","",28,null],[11,"drop_non_reserved_peers","","",28,null],[11,"accept_non_reserved_peers","","",28,null],[11,"start_network","","",28,null],[11,"stop_network","","",28,null],[11,"new","ethcore_rpc::v1::impls::traces","Creates new Traces client.",29,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"tracesclient"}}],[11,"filter","","",29,null],[11,"block_traces","","",29,null],[11,"transaction_traces","","",29,null],[11,"trace","","",29,null],[11,"call","","",29,null],[11,"raw_transaction","","",29,null],[11,"replay_transaction","","",29,null],[11,"new","ethcore_rpc::v1::impls::rpc","Creates new `RpcClient`.",30,{"inputs":[{"name":"btreemap"}],"output":{"name":"rpcclient"}}],[11,"rpc_modules","","",30,null],[11,"modules","","",30,null],[11,"default","ethcore_rpc::v1::helpers::signing_queue","",17,{"inputs":[],"output":{"name":"confirmationsqueue"}}],[11,"drop","","",17,null],[11,"add_request","","",17,null],[11,"peek","","",17,null],[11,"request_rejected","","",17,null],[11,"request_confirmed","","",17,null],[11,"requests","","",17,null],[11,"len","","",17,null],[11,"is_empty","","",17,null],[11,"clone","ethcore_rpc::v1::helpers::network_settings","",31,null],[11,"eq","","",31,null],[11,"ne","","",31,null],[11,"fmt","","",31,null],[11,"default","","",31,{"inputs":[],"output":{"name":"networksettings"}}],[11,"new","ethcore_rpc::v1::tests::helpers::sync_provider","Creates new sync provider.",32,{"inputs":[{"name":"config"}],"output":{"name":"testsyncprovider"}}],[11,"status","","",32,null],[11,"default","ethcore_rpc::v1::tests::helpers::miner_service","",33,{"inputs":[],"output":{"name":"testminerservice"}}],[11,"status","","Returns miner&#39;s status.",33,null],[11,"set_author","","",33,null],[11,"set_extra_data","","",33,null],[11,"set_gas_floor_target","","Set the lower gas limit we wish to target when sealing a new block.",33,null],[11,"set_gas_ceil_target","","Set the upper gas limit we wish to target when sealing a new block.",33,null],[11,"set_minimal_gas_price","","",33,null],[11,"set_transactions_limit","","",33,null],[11,"set_tx_gas_limit","","",33,null],[11,"transactions_limit","","",33,null],[11,"author","","",33,null],[11,"minimal_gas_price","","",33,null],[11,"extra_data","","",33,null],[11,"gas_floor_target","","",33,null],[11,"gas_ceil_target","","",33,null],[11,"import_external_transactions","","Imports transactions to transaction queue.",33,null],[11,"import_own_transaction","","Imports transactions to transaction queue.",33,null],[11,"pending_transactions_hashes","","Returns hashes of transactions currently in pending",33,null],[11,"clear_and_reset","","Removes all transactions from the queue and restart mining operation.",33,null],[11,"chain_new_blocks","","Called when blocks are imported to chain, updates transactions queue.",33,null],[11,"update_sealing","","New chain head event. Restart mining operation.",33,null],[11,"map_sealing_work","","",33,null],[11,"transaction","","",33,null],[11,"all_transactions","","",33,null],[11,"pending_transactions","","",33,null],[11,"pending_receipts","","",33,null],[11,"last_nonce","","",33,null],[11,"is_sealing","","",33,null],[11,"submit_seal","","Submit `seal` as a valid solution for the header of `pow_hash`.\nWill check the seal, but not actually insert the block into the chain.",33,null],[11,"balance","","",33,null],[11,"call","","",33,null],[11,"storage_at","","",33,null],[11,"nonce","","",33,null],[11,"code","","",33,null],[11,"fmt","ethcore_rpc::v1::types::bytes","",34,null],[11,"eq","","",34,null],[11,"ne","","",34,null],[11,"default","","",34,{"inputs":[],"output":{"name":"bytes"}}],[11,"hash","","",34,null],[11,"clone","","",34,null],[11,"new","","Simple constructor.",34,{"inputs":[{"name":"vec"}],"output":{"name":"bytes"}}],[11,"to_vec","","Convert back to vector",34,null],[11,"from","","",34,{"inputs":[{"name":"vec"}],"output":{"name":"bytes"}}],[11,"into","","",34,null],[11,"serialize","","",34,null],[11,"deserialize","","",34,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","ethcore_rpc::v1::types::block","",35,null],[11,"serialize","","",35,null],[11,"fmt","","",36,null],[11,"fmt","ethcore_rpc::v1::types::block_number","",37,null],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"clone","","",37,null],[11,"deserialize","","",37,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"into","","",37,null],[11,"fmt","ethcore_rpc::v1::types::call_request","",38,null],[11,"default","","",38,{"inputs":[],"output":{"name":"callrequest"}}],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"into","","",38,null],[11,"fmt","ethcore_rpc::v1::types::confirmations","",39,null],[11,"clone","","",39,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"hash","","",39,null],[11,"from","","",39,{"inputs":[{"name":"confirmationrequest"}],"output":{"name":"confirmationrequest"}}],[11,"fmt","","",40,null],[11,"clone","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"hash","","",40,null],[11,"from","","",40,{"inputs":[{"name":"confirmationpayload"}],"output":{"name":"confirmationpayload"}}],[11,"fmt","","",41,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"fmt","ethcore_rpc::v1::types::filter","",42,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"clone","","",42,null],[11,"into","","",42,null],[11,"default","ethcore_rpc::v1::types::hash","",43,{"inputs":[],"output":{"name":"h64"}}],[11,"fmt","","",43,null],[11,"from","","",43,{"inputs":[{"name":"t"}],"output":{"name":"h64"}}],[11,"from_str","","",43,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",43,null],[11,"eq","","",43,null],[11,"partial_cmp","","",43,null],[11,"cmp","","",43,null],[11,"hash","","",43,null],[11,"clone","","",43,null],[11,"serialize","","",43,null],[11,"deserialize","","",43,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",44,{"inputs":[],"output":{"name":"h160"}}],[11,"fmt","","",44,null],[11,"from","","",44,{"inputs":[{"name":"t"}],"output":{"name":"h160"}}],[11,"from_str","","",44,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",44,null],[11,"eq","","",44,null],[11,"partial_cmp","","",44,null],[11,"cmp","","",44,null],[11,"hash","","",44,null],[11,"clone","","",44,null],[11,"serialize","","",44,null],[11,"deserialize","","",44,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",45,{"inputs":[],"output":{"name":"h256"}}],[11,"fmt","","",45,null],[11,"from","","",45,{"inputs":[{"name":"t"}],"output":{"name":"h256"}}],[11,"from_str","","",45,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",45,null],[11,"eq","","",45,null],[11,"partial_cmp","","",45,null],[11,"cmp","","",45,null],[11,"hash","","",45,null],[11,"clone","","",45,null],[11,"serialize","","",45,null],[11,"deserialize","","",45,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",46,{"inputs":[],"output":{"name":"h520"}}],[11,"fmt","","",46,null],[11,"from","","",46,{"inputs":[{"name":"t"}],"output":{"name":"h520"}}],[11,"from_str","","",46,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",46,null],[11,"eq","","",46,null],[11,"partial_cmp","","",46,null],[11,"cmp","","",46,null],[11,"hash","","",46,null],[11,"clone","","",46,null],[11,"serialize","","",46,null],[11,"deserialize","","",46,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",47,{"inputs":[],"output":{"name":"h2048"}}],[11,"fmt","","",47,null],[11,"from","","",47,{"inputs":[{"name":"t"}],"output":{"name":"h2048"}}],[11,"from_str","","",47,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",47,null],[11,"eq","","",47,null],[11,"partial_cmp","","",47,null],[11,"cmp","","",47,null],[11,"hash","","",47,null],[11,"clone","","",47,null],[11,"serialize","","",47,null],[11,"deserialize","","",47,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","ethcore_rpc::v1::types::index","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"value","","Convert to usize",48,null],[11,"deserialize","","",48,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","ethcore_rpc::v1::types::log","",49,null],[11,"eq","","",49,null],[11,"ne","","",49,null],[11,"hash","","",49,null],[11,"clone","","",49,null],[11,"from","","",49,{"inputs":[{"name":"localizedlogentry"}],"output":{"name":"log"}}],[11,"from","","",49,{"inputs":[{"name":"logentry"}],"output":{"name":"log"}}],[11,"default","ethcore_rpc::v1::types::sync","",50,{"inputs":[],"output":{"name":"syncinfo"}}],[11,"fmt","","",50,null],[11,"eq","","",50,null],[11,"ne","","",50,null],[11,"fmt","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"serialize","","",51,null],[11,"fmt","ethcore_rpc::v1::types::transaction","",52,null],[11,"default","","",52,{"inputs":[],"output":{"name":"transaction"}}],[11,"from","","",52,{"inputs":[{"name":"localizedtransaction"}],"output":{"name":"transaction"}}],[11,"from","","",52,{"inputs":[{"name":"signedtransaction"}],"output":{"name":"transaction"}}],[11,"fmt","ethcore_rpc::v1::types::transaction_request","",53,null],[11,"clone","","",53,null],[11,"default","","",53,{"inputs":[],"output":{"name":"transactionrequest"}}],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"hash","","",53,null],[11,"from","","",53,{"inputs":[{"name":"transactionrequest"}],"output":{"name":"transactionrequest"}}],[11,"from","","",53,{"inputs":[{"name":"filledtransactionrequest"}],"output":{"name":"transactionrequest"}}],[11,"into","","",53,null],[11,"fmt","ethcore_rpc::v1::types::receipt","",54,null],[11,"from","","",54,{"inputs":[{"name":"localizedreceipt"}],"output":{"name":"receipt"}}],[11,"from","","",54,{"inputs":[{"name":"receipt"}],"output":{"name":"receipt"}}],[11,"fmt","ethcore_rpc::v1::types::trace","",55,null],[11,"from","","",55,{"inputs":[{"name":"localizedtrace"}],"output":{"name":"localizedtrace"}}],[11,"fmt","","",56,null],[11,"from","","",56,{"inputs":[{"name":"executed"}],"output":{"name":"traceresults"}}],[11,"fmt","ethcore_rpc::v1::types::trace_filter","",57,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"into","","",57,null],[11,"hash","ethcore_rpc::v1::types::uint","",58,null],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"clone","","",58,null],[11,"default","","",58,{"inputs":[],"output":{"name":"u256"}}],[11,"fmt","","",58,null],[11,"from","","",58,{"inputs":[{"name":"t"}],"output":{"name":"u256"}}],[11,"from_str","","",58,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",58,null],[11,"serialize","","",58,null],[11,"deserialize","","",58,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"add_delegate","ethcore_rpc","Add io delegate.",59,null],[11,"new","","Construct new http server object.",59,{"inputs":[],"output":{"name":"rpcserver"}}],[11,"start_http","","Start http server asynchronously and returns result with `Server` handle on success or an error.",59,null],[11,"start_ipc","","Start ipc server asynchronously and returns result with `Server` handle on success or an error.",59,null],[11,"new","ethsync::api","Creates and register protocol with the network service",60,{"inputs":[{"name":"syncconfig"},{"name":"arc"},{"name":"networkconfiguration"}],"output":{"name":"result"}}],[11,"fmt","ethsync::chain","",61,null],[11,"eq","","",61,null],[11,"clone","","",61,null],[11,"clone","","",62,null],[11,"is_major_syncing","","Indicates if initial sync is still in progress.",62,null],[11,"clone","ethsync::api","",63,null],[11,"fmt","","",63,null],[11,"default","","",63,{"inputs":[],"output":{"name":"syncconfig"}}],[11,"from_bytes","","",63,null],[11,"to_bytes","","",63,null],[11,"from_bytes","ethsync::chain","",62,null],[11,"to_bytes","","",62,null],[11,"status","ethsync::api","Get sync status",60,null],[11,"status","","",64,null],[11,"handshake","","",64,null],[11,"init","","",64,{"inputs":[{"name":"s"}],"output":{"name":"syncclient"}}],[11,"dispatch","parity::modules","",65,null],[11,"dispatch_buf","","",65,null],[11,"new_blocks","ethsync::api","",60,null],[11,"start","","",60,null],[11,"stop","","",60,null],[11,"accept_unreserved_peers","","",60,null],[11,"deny_unreserved_peers","","",60,null],[11,"remove_reserved_peer","","",60,null],[11,"add_reserved_peer","","",60,null],[11,"start_network","","",60,null],[11,"stop_network","","",60,null],[11,"network_config","","",60,null],[11,"accept_unreserved_peers","","",66,null],[11,"deny_unreserved_peers","","",66,null],[11,"remove_reserved_peer","","",66,null],[11,"add_reserved_peer","","",66,null],[11,"start_network","","",66,null],[11,"stop_network","","",66,null],[11,"network_config","","",66,null],[11,"handshake","","",66,null],[11,"init","","",66,{"inputs":[{"name":"s"}],"output":{"name":"networkmanagerclient"}}],[11,"dispatch","parity::modules","",67,null],[11,"dispatch_buf","","",67,null],[11,"eq","ethsync::api","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"fmt","","",68,null],[11,"size","","",68,null],[11,"to_bytes","","",68,null],[11,"from_bytes","","",68,null],[11,"len_params","","",68,{"inputs":[],"output":{"name":"usize"}}],[11,"new","","",68,{"inputs":[],"output":{"name":"networkconfiguration"}}],[11,"new_local","","",68,{"inputs":[],"output":{"name":"networkconfiguration"}}],[11,"into_basic","","",68,null],[11,"from","","",68,{"inputs":[{"name":"networkconfiguration"}],"output":{"name":"networkconfiguration"}}],[11,"clone","","",69,null],[11,"fmt","","",69,null],[11,"size","","",69,null],[11,"to_bytes","","",69,null],[11,"from_bytes","","",69,null],[11,"len_params","","",69,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","ethcore::account_provider","",70,null],[11,"fmt","","",70,null],[11,"from","","",70,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",71,null],[11,"from","","",71,{"inputs":[{"name":"h256"}],"output":{"name":"secret"}}],[11,"from","","",71,{"inputs":[{"name":"secret"}],"output":{"name":"secret"}}],[11,"into","","",71,null],[11,"into","","",71,null],[11,"from","","",72,null],[11,"from","","",72,{"inputs":[{"name":"h256"}],"output":{"name":"message"}}],[11,"from","","",72,{"inputs":[{"name":"message"}],"output":{"name":"message"}}],[11,"into","","",72,null],[11,"into","","",72,null],[11,"from","","",73,null],[11,"from","","",73,{"inputs":[{"name":"address"}],"output":{"name":"address"}}],[11,"from","","",73,{"inputs":[{"name":"address"}],"output":{"name":"address"}}],[11,"into","","",73,null],[11,"into","","",73,null],[11,"eq","","",74,null],[11,"ne","","",74,null],[11,"fmt","","",74,null],[11,"clone","","",74,null],[11,"default","","",74,{"inputs":[],"output":{"name":"accountmeta"}}],[11,"new","","Creates new account provider.",75,{"inputs":[{"name":"box"}],"output":{"name":"accountprovider"}}],[11,"transient_provider","","Creates not disk backed provider.",75,{"inputs":[],"output":{"name":"accountprovider"}}],[11,"new_account","","Creates new random account.",75,null],[11,"insert_account","","Inserts new account into underlying store.\nDoes not unlock account!",75,null],[11,"accounts","","Returns addresses of all accounts.",75,null],[11,"accounts_info","","Returns each account along with name and meta.",75,null],[11,"account_meta","","Returns each account along with name and meta.",75,null],[11,"set_account_name","","Returns each account along with name and meta.",75,null],[11,"set_account_meta","","Returns each account along with name and meta.",75,null],[11,"unlock_account_permanently","","Unlocks account permanently.",75,null],[11,"unlock_account_temporarily","","Unlocks account temporarily (for one signing).",75,null],[11,"unlock_account_timed","","Unlocks account temporarily with a timeout.",75,null],[11,"is_unlocked","","Checks if given account is unlocked",75,null],[11,"sign","","Signs the message. Account must be unlocked.",75,null],[11,"sign_with_password","","Unlocks an account, signs the message, and locks it again.",75,null],[11,"new","ethcore::engines::null_engine","Returns new instance of NullEngine with default VM Factory",76,{"inputs":[{"name":"commonparams"},{"name":"btreemap"}],"output":{"name":"nullengine"}}],[11,"name","","",76,null],[11,"params","","",76,null],[11,"builtins","","",76,null],[11,"schedule","","",76,null],[11,"new","ethcore::engines::instant_seal","Returns new instance of InstantSeal with default VM Factory",77,{"inputs":[{"name":"commonparams"},{"name":"btreemap"}],"output":{"name":"instantseal"}}],[11,"name","","",77,null],[11,"params","","",77,null],[11,"builtins","","",77,null],[11,"schedule","","",77,null],[11,"generate_seal","","",77,null],[11,"new","ethcore::engines::basic_authority","Create a new instance of BasicAuthority engine",78,{"inputs":[{"name":"commonparams"},{"name":"basicauthorityparams"},{"name":"btreemap"}],"output":{"name":"basicauthority"}}],[11,"name","","",78,null],[11,"version","","",78,null],[11,"seal_fields","","",78,null],[11,"params","","",78,null],[11,"builtins","","",78,null],[11,"extra_info","","Additional engine-specific information for the user/developer concerning `header`.",78,null],[11,"schedule","","",78,null],[11,"populate_from_parent","","",78,null],[11,"on_close_block","","Apply the block reward on finalisation of the block.\nThis assumes that all uncles are valid uncles (i.e. of at least one generation before the current).",78,null],[11,"generate_seal","","Attempt to seal the block internally.",78,null],[11,"verify_block_basic","","",78,null],[11,"verify_block_unordered","","",78,null],[11,"verify_block_family","","",78,null],[11,"verify_transaction_basic","","",78,null],[11,"verify_transaction","","",78,null],[11,"signature","ethcore::header","Get the none field of the header.",79,null],[11,"eq","ethcore::block","",80,null],[11,"ne","","",80,null],[11,"clone","","",80,null],[11,"fmt","","",80,null],[11,"default","","",80,{"inputs":[],"output":{"name":"block"}}],[11,"is_good","","Returns true if the given bytes form a valid encoding of a block in RLP.",80,null],[11,"rlp_bytes","","Get the RLP-encoding of the block with or without the seal.",80,null],[11,"decode","","",80,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",81,null],[11,"fields_mut","","Get a structure containing individual references to all public fields.",81,null],[11,"fields","","Get a structure containing individual references to all public fields.",81,null],[11,"block","","",81,null],[11,"clone","","",82,null],[11,"clone","","",83,null],[11,"new","","Create a new `OpenBlock` ready for transaction pushing.",84,null],[11,"set_author","","Alter the author for the block.",84,null],[11,"set_timestamp","","Alter the timestamp of the block.",84,null],[11,"set_difficulty","","Alter the difficulty for the block.",84,null],[11,"set_gas_limit","","Alter the gas limit for the block.",84,null],[11,"set_gas_used","","Alter the gas limit for the block.",84,null],[11,"set_uncles_hash","","Alter the uncles hash the block.",84,null],[11,"set_transactions_root","","Alter transactions root for the block.",84,null],[11,"set_receipts_root","","Alter the receipts root for the block.",84,null],[11,"set_extra_data","","Alter the extra_data for the block.",84,null],[11,"push_uncle","","Add an uncle to the block, if possible.",84,null],[11,"env_info","","Get the environment info concerning this block.",84,null],[11,"push_transaction","","Push a transaction into the block.",84,null],[11,"close","","Turn this into a `ClosedBlock`. A `BlockChain` must be provided in order to figure out the uncles.",84,null],[11,"close_and_lock","","Turn this into a `LockedBlock`. A BlockChain must be provided in order to figure out the uncles.",84,null],[11,"block","","",84,null],[11,"block","","",82,null],[11,"block","","",83,null],[11,"hash","","Get the hash of the header without seal arguments.",82,null],[11,"lock","","Turn this into a `LockedBlock`, unable to be reopened again.",82,null],[11,"reopen","","Given an engine reference, reopen the `ClosedBlock` into an `OpenBlock`.",82,null],[11,"hash","","Get the hash of the header without seal arguments.",83,null],[11,"seal","","Provide a valid seal in order to turn this into a `SealedBlock`.",83,null],[11,"try_seal","","Provide a valid seal in order to turn this into a `SealedBlock`.\nThis does check the validity of `seal` with the engine.\nReturns the `ClosedBlock` back again if the seal is no good.",83,null],[11,"drain","","Drop this object and return the underlieing database.",83,null],[11,"rlp_bytes","","Get the RLP-encoding of the block.",85,null],[11,"drain","","Drop this object and return the underlieing database.",85,null],[11,"block","","",85,null],[11,"eq","ethcore::block_queue","",86,null],[11,"ne","","",86,null],[11,"fmt","","",86,null],[11,"default","","",86,{"inputs":[],"output":{"name":"blockqueueconfig"}}],[11,"total_queue_size","ethcore::types::block_queue_info","The total size of the queues.",87,null],[11,"incomplete_queue_size","","The size of the unverified and verifying queues.",87,null],[11,"is_full","","Indicates that queue is full",87,null],[11,"is_empty","","Indicates that queue is empty",87,null],[11,"new","ethcore::block_queue","Creates a new queue instance.",88,{"inputs":[{"name":"blockqueueconfig"},{"name":"arc"},{"name":"iochannel"}],"output":{"name":"blockqueue"}}],[11,"clear","","Clear the queue and stop verification activity.",88,null],[11,"flush","","Wait for unverified queue to be empty",88,null],[11,"block_status","","Check if the block is currently in the queue",88,null],[11,"import_block","","Add a block to the queue.",88,null],[11,"mark_as_bad","","Mark given block and all its children as bad. Stops verification.",88,null],[11,"mark_as_good","","Mark given block as processed",88,null],[11,"drain","","Removes up to `max` verified blocks from the queue",88,null],[11,"queue_info","","Get queue status.",88,null],[11,"collect_garbage","","Optimise memory footprint of the heap fields.",88,null],[11,"on_panic","","",88,null],[11,"drop","","",88,null],[11,"eq","ethcore::client::config","",89,null],[11,"fmt","","",89,null],[11,"default","","",89,{"inputs":[],"output":{"name":"databasecompactionprofile"}}],[11,"compaction_profile","","Returns corresponding compaction profile.",89,null],[11,"from_str","","",89,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",90,null],[11,"ne","","",90,null],[11,"fmt","","",90,null],[11,"default","","",90,{"inputs":[],"output":{"name":"mode"}}],[11,"default","","",91,{"inputs":[],"output":{"name":"clientconfig"}}],[11,"eq","","",91,null],[11,"ne","","",91,null],[11,"fmt","","",91,null],[11,"fmt","ethcore::client::error","",92,null],[11,"from","","",92,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",92,{"inputs":[{"name":"trieerror"}],"output":{"name":"error"}}],[11,"from","","",92,{"inputs":[{"name":"utilerror"}],"output":{"name":"error"}}],[11,"from","","",92,{"inputs":[{"name":"box"}],"output":{"name":"error"}}],[11,"fmt","","",92,null],[11,"clone","ethcore::client::test_client","",93,null],[11,"default","","",94,{"inputs":[],"output":{"name":"testblockchainclient"}}],[11,"new","","Creates new test client.",94,{"inputs":[],"output":{"name":"testblockchainclient"}}],[11,"set_transaction_receipt","","Set the transaction receipt result",94,null],[11,"set_execution_result","","Set the execution result.",94,null],[11,"set_balance","","Set the balance of account `address` to `balance`.",94,null],[11,"set_nonce","","Set nonce of account `address` to `nonce`.",94,null],[11,"set_code","","Set `code` at `address`.",94,null],[11,"set_storage","","Set storage `position` to `value` for account `address`.",94,null],[11,"set_queue_size","","Set block queue size for testing",94,null],[11,"add_blocks","","Add blocks to test client.",94,null],[11,"corrupt_block","","Make a bad block by setting invalid extra data.",94,null],[11,"corrupt_block_parent","","Make a bad block by setting invalid parent hash.",94,null],[11,"block_hash_delta_minus","","TODO:",94,null],[11,"prepare_open_block","","",94,null],[11,"vm_factory","","",94,null],[11,"import_sealed_block","","",94,null],[11,"call","","",94,null],[11,"replay","","",94,null],[11,"block_total_difficulty","","",94,null],[11,"block_hash","","",94,null],[11,"nonce","","",94,null],[11,"latest_nonce","","",94,null],[11,"code","","",94,null],[11,"balance","","",94,null],[11,"latest_balance","","",94,null],[11,"storage_at","","",94,null],[11,"transaction","","",94,null],[11,"uncle","","",94,null],[11,"transaction_receipt","","",94,null],[11,"blocks_with_bloom","","",94,null],[11,"logs","","",94,null],[11,"last_hashes","","",94,null],[11,"best_block_header","","",94,null],[11,"block_header","","",94,null],[11,"block_body","","",94,null],[11,"block","","",94,null],[11,"block_status","","",94,null],[11,"tree_route","","",94,null],[11,"find_uncles","","",94,null],[11,"state_data","","",94,null],[11,"block_receipts","","",94,null],[11,"import_block","","",94,null],[11,"queue_info","","",94,null],[11,"clear_queue","","",94,null],[11,"chain_info","","",94,null],[11,"filter_traces","","",94,null],[11,"trace","","",94,null],[11,"transaction_traces","","",94,null],[11,"block_traces","","",94,null],[11,"queue_transactions","","",94,null],[11,"pending_transactions","","",94,null],[11,"fmt","ethcore::types::blockchain_info","",95,null],[11,"eq","ethcore::client::client","",96,null],[11,"ne","","",96,null],[11,"fmt","","",96,null],[11,"clone","","",96,null],[11,"default","","",96,{"inputs":[],"output":{"name":"clientreport"}}],[11,"accrue_block","","Alter internal reporting to reflect the additional `block` has been processed.",96,null],[11,"new","","Create a new client with given spec and DB path and custom verifier.",97,{"inputs":[{"name":"clientconfig"},{"name":"spec"},{"name":"path"},{"name":"arc"},{"name":"iochannel"}],"output":{"name":"result"}}],[11,"add_notify","","Adds an actor to be notified on certain events",97,null],[11,"flush_queue","","Flush the block import queue.",97,null],[11,"import_verified_blocks","","This is triggered by a message coming from a block queue when the block is ready for insertion",97,null],[11,"import_queued_transactions","","Import transactions from the IO queue",97,null],[11,"state_at","","Attempt to get a copy of a specific block&#39;s final state.",97,null],[11,"state_at_beginning","","Attempt to get a copy of a specific block&#39;s beginning state.",97,null],[11,"state","","Get a copy of the best block&#39;s state.",97,null],[11,"blockchain_cache_info","","Get info on the cache.",97,null],[11,"report","","Get the report.",97,null],[11,"tick","","Tick the client.",97,null],[11,"block_number","","Look up the block number for the given block ID.",97,null],[11,"take_snapshot","","Take a snapshot.",97,null],[11,"call","","",97,null],[11,"replay","","",97,null],[11,"keep_alive","","",97,null],[11,"best_block_header","","",97,null],[11,"block_header","","",97,null],[11,"block_body","","",97,null],[11,"block","","",97,null],[11,"block_status","","",97,null],[11,"block_total_difficulty","","",97,null],[11,"nonce","","",97,null],[11,"block_hash","","",97,null],[11,"code","","",97,null],[11,"balance","","",97,null],[11,"storage_at","","",97,null],[11,"transaction","","",97,null],[11,"uncle","","",97,null],[11,"transaction_receipt","","",97,null],[11,"tree_route","","",97,null],[11,"find_uncles","","",97,null],[11,"state_data","","",97,null],[11,"block_receipts","","",97,null],[11,"import_block","","",97,null],[11,"queue_info","","",97,null],[11,"clear_queue","","",97,null],[11,"chain_info","","",97,null],[11,"blocks_with_bloom","","",97,null],[11,"logs","","",97,null],[11,"filter_traces","","",97,null],[11,"trace","","",97,null],[11,"transaction_traces","","",97,null],[11,"block_traces","","",97,null],[11,"last_hashes","","",97,null],[11,"queue_transactions","","",97,null],[11,"pending_transactions","","",97,null],[11,"prepare_open_block","","",97,null],[11,"vm_factory","","",97,null],[11,"import_sealed_block","","",97,null],[11,"on_panic","","",97,null],[11,"keep_alive","ethcore::client::traits","",98,null],[11,"block_header","","",98,null],[11,"block_body","","",98,null],[11,"block","","",98,null],[11,"block_status","","",98,null],[11,"block_total_difficulty","","",98,null],[11,"nonce","","",98,null],[11,"latest_nonce","","",98,null],[11,"block_hash","","",98,null],[11,"code","","",98,null],[11,"balance","","",98,null],[11,"latest_balance","","",98,null],[11,"storage_at","","",98,null],[11,"latest_storage_at","","",98,null],[11,"transaction","","",98,null],[11,"uncle","","",98,null],[11,"transaction_receipt","","",98,null],[11,"tree_route","","",98,null],[11,"find_uncles","","",98,null],[11,"state_data","","",98,null],[11,"block_receipts","","",98,null],[11,"import_block","","",98,null],[11,"queue_info","","",98,null],[11,"clear_queue","","",98,null],[11,"chain_info","","",98,null],[11,"best_block_header","","",98,null],[11,"blocks_with_bloom","","",98,null],[11,"logs","","",98,null],[11,"call","","",98,null],[11,"replay","","",98,null],[11,"filter_traces","","",98,null],[11,"trace","","",98,null],[11,"transaction_traces","","",98,null],[11,"block_traces","","",98,null],[11,"last_hashes","","",98,null],[11,"queue_transactions","","",98,null],[11,"pending_transactions","","",98,null],[11,"gas_price_statistics","","",98,null],[11,"handshake","","",98,null],[11,"init","","",98,{"inputs":[{"name":"s"}],"output":{"name":"remoteclient"}}],[11,"dispatch","parity::modules","",99,null],[11,"dispatch_buf","","",99,null],[11,"new_blocks","ethcore::client::chain_notify","",100,null],[11,"start","","",100,null],[11,"stop","","",100,null],[11,"handshake","","",100,null],[11,"init","","",100,{"inputs":[{"name":"s"}],"output":{"name":"chainnotifyclient"}}],[11,"dispatch","parity::modules","",101,null],[11,"dispatch_buf","","",101,null],[11,"clone","ethcore::error","",102,null],[11,"eq","","",102,null],[11,"ne","","",102,null],[11,"fmt","","",102,null],[11,"fmt","","",102,null],[11,"eq","","",103,null],[11,"ne","","",103,null],[11,"fmt","","",103,null],[11,"fmt","","",103,null],[11,"eq","","",104,null],[11,"fmt","","",104,null],[11,"fmt","","",104,null],[11,"fmt","","",105,null],[11,"fmt","","",105,null],[11,"from","","",105,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",105,{"inputs":[{"name":"transactionerror"}],"output":{"name":"error"}}],[11,"from","","",105,{"inputs":[{"name":"importerror"}],"output":{"name":"error"}}],[11,"from","","",105,{"inputs":[{"name":"blockerror"}],"output":{"name":"error"}}],[11,"from","","",105,{"inputs":[{"name":"executionerror"}],"output":{"name":"error"}}],[11,"from","","",105,{"inputs":[{"name":"cryptoerror"}],"output":{"name":"error"}}],[11,"from","","",105,{"inputs":[{"name":"decodererror"}],"output":{"name":"error"}}],[11,"from","","",105,{"inputs":[{"name":"utilerror"}],"output":{"name":"error"}}],[11,"from","","",105,{"inputs":[{"name":"ioerror"}],"output":{"name":"error"}}],[11,"from","","",105,{"inputs":[{"name":"trieerror"}],"output":{"name":"error"}}],[11,"from","","",105,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",105,{"inputs":[{"name":"blockimporterror"}],"output":{"name":"error"}}],[11,"from","","",105,{"inputs":[{"name":"invalidinput"}],"output":{"name":"error"}}],[11,"from","","",105,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",105,{"inputs":[{"name":"box"}],"output":{"name":"error"}}],[11,"from_bytes","","",103,null],[11,"to_bytes","","",103,null],[11,"from_bytes","","",104,null],[11,"to_bytes","","",104,null],[11,"from_bytes","","",102,null],[11,"to_bytes","","",102,null],[11,"eq","ethcore::ethereum::ethash","",106,null],[11,"ne","","",106,null],[11,"fmt","","",106,null],[11,"from","","",106,{"inputs":[{"name":"ethashparams"}],"output":{"name":"ethashparams"}}],[11,"new","","Create a new instance of Ethash engine",107,{"inputs":[{"name":"commonparams"},{"name":"ethashparams"},{"name":"btreemap"}],"output":{"name":"ethash"}}],[11,"name","","",107,null],[11,"version","","",107,null],[11,"seal_fields","","",107,null],[11,"params","","",107,null],[11,"builtins","","",107,null],[11,"extra_info","","Additional engine-specific information for the user/developer concerning `header`.",107,null],[11,"schedule","","",107,null],[11,"populate_from_parent","","",107,null],[11,"on_new_block","","",107,null],[11,"on_close_block","","Apply the block reward on finalisation of the block.\nThis assumes that all uncles are valid uncles (i.e. of at least one generation before the current).",107,null],[11,"verify_block_basic","","",107,null],[11,"verify_block_unordered","","",107,null],[11,"verify_block_family","","",107,null],[11,"verify_transaction_basic","","",107,null],[11,"verify_transaction","","",107,null],[11,"boundary_to_difficulty","","Convert an Ethash boundary to its original difficulty. Basically just `f(x) = 2^256 / x`.",107,{"inputs":[{"name":"h256"}],"output":{"name":"u256"}}],[11,"difficulty_to_boundary","","Convert an Ethash difficulty to the target boundary. Basically just `f(x) = 2^256 / x`.",107,{"inputs":[{"name":"u256"}],"output":{"name":"h256"}}],[11,"nonce","ethcore::header","Get the none field of the header.",79,null],[11,"mix_hash","","Get the mix hash field of the header.",79,null],[11,"set_nonce_and_mix_hash","","Set the nonce and mix hash fields of the header.",79,null],[11,"clone","","",79,null],[11,"fmt","","",79,null],[11,"eq","","",79,null],[11,"default","","",79,{"inputs":[],"output":{"name":"header"}}],[11,"new","","Create a new, default-valued, header.",79,{"inputs":[],"output":{"name":"header"}}],[11,"parent_hash","","Get the parent_hash field of the header.",79,null],[11,"timestamp","","Get the timestamp field of the header.",79,null],[11,"number","","Get the number field of the header.",79,null],[11,"author","","Get the author field of the header.",79,null],[11,"extra_data","","Get the extra data field of the header.",79,null],[11,"state_root","","Get the state root field of the header.",79,null],[11,"receipts_root","","Get the receipts root field of the header.",79,null],[11,"transactions_root","","Get the transactions root field of the header.",79,null],[11,"uncles_hash","","Get the uncles hash field of the header.",79,null],[11,"gas_limit","","Get the gas limit field of the header.",79,null],[11,"difficulty","","Get the difficulty field of the header.",79,null],[11,"seal","","Get the seal field of the header.",79,null],[11,"set_parent_hash","","Set the number field of the header.",79,null],[11,"set_uncles_hash","","Set the uncles hash field of the header.",79,null],[11,"set_state_root","","Set the state root field of the header.",79,null],[11,"set_transactions_root","","Set the transactions root field of the header.",79,null],[11,"set_receipts_root","","Set the receipts root field of the header.",79,null],[11,"set_log_bloom","","Set the log bloom field of the header.",79,null],[11,"set_timestamp","","Set the timestamp field of the header.",79,null],[11,"set_timestamp_now","","Set the timestamp field of the header to the current time.",79,null],[11,"set_number","","Set the number field of the header.",79,null],[11,"set_author","","Set the author field of the header.",79,null],[11,"set_extra_data","","Set the extra data field of the header.",79,null],[11,"set_gas_used","","Set the gas used field of the header.",79,null],[11,"set_gas_limit","","Set the gas limit field of the header.",79,null],[11,"set_difficulty","","Set the difficulty field of the header.",79,null],[11,"set_seal","","Set the seal field of the header.",79,null],[11,"hash","","Get the hash of this header (sha3 of the RLP).",79,null],[11,"bare_hash","","Get the hash of the header excluding the seal",79,null],[11,"note_dirty","","Note that some fields have changed. Resets the memoised hash.",79,null],[11,"stream_rlp","","Place this header into an RLP stream `s`, optionally `with_seal`.",79,null],[11,"rlp","","Get the RLP of this header, optionally `with_seal`.",79,null],[11,"rlp_sha3","","Get the SHA3 (Keccak) of this header, optionally `with_seal`.",79,null],[11,"decode","","",79,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"rlp_append","","",79,null],[11,"clone","ethcore::service","",108,null],[11,"start","","Start the service in a separate thread.",109,{"inputs":[{"name":"clientconfig"},{"name":"spec"},{"name":"path"},{"name":"arc"}],"output":{"name":"result"}}],[11,"add_node","","Add a node to network",109,null],[11,"register_io_handler","","Get general IO interface",109,null],[11,"client","","Get client interface",109,null],[11,"snapshot_service","","Get snapshot interface.",109,null],[11,"io","","Get network service component",109,null],[11,"add_notify","","Set the actor to be notified on certain chain events",109,null],[11,"on_panic","","",109,null],[11,"eq","ethcore::trace::config","",110,null],[11,"clone","","",110,null],[11,"fmt","","",110,null],[11,"default","","",110,{"inputs":[],"output":{"name":"switch"}}],[11,"from_str","","",110,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"turn_to","","Tries to turn old switch to new value.",110,null],[11,"clone","","",111,null],[11,"eq","","",111,null],[11,"ne","","",111,null],[11,"fmt","","",111,null],[11,"default","","",111,{"inputs":[],"output":{"name":"config"}}],[11,"blooms_at","ethcore::trace::db","",112,null],[11,"new","","Creates new instance of `TraceDB`.",112,{"inputs":[{"name":"config"},{"name":"arc"},{"name":"arc"}],"output":{"name":"result"}}],[11,"collect_garbage","","Ticks our cache system and throws out any old data.",112,null],[11,"tracing_enabled","","",112,null],[11,"import","","Traces of import request&#39;s enacted blocks are expected to be already in database\nor to be the currently inserted trace.",112,null],[11,"trace","","",112,null],[11,"transaction_traces","","",112,null],[11,"block_traces","","",112,null],[11,"filter","","",112,null],[11,"fmt","ethcore::trace::error","",113,null],[11,"fmt","","",113,null],[11,"default","ethcore::trace::executive_tracer","",114,{"inputs":[],"output":{"name":"executivetracer"}}],[11,"prepare_trace_call","","",114,null],[11,"prepare_trace_create","","",114,null],[11,"prepare_trace_output","","",114,null],[11,"trace_call","","",114,null],[11,"trace_create","","",114,null],[11,"trace_failed_call","","",114,null],[11,"trace_failed_create","","",114,null],[11,"trace_suicide","","",114,null],[11,"subtracer","","",114,null],[11,"traces","","",114,null],[11,"toplevel","","Create a new top-level instance.",115,{"inputs":[],"output":{"name":"executivevmtracer"}}],[11,"trace_prepare_execute","","",115,null],[11,"trace_executed","","",115,null],[11,"prepare_subtrace","","",115,null],[11,"done_subtrace","","",115,null],[11,"drain","","",115,null],[11,"prepare_trace_call","ethcore::trace::noop_tracer","",116,null],[11,"prepare_trace_create","","",116,null],[11,"prepare_trace_output","","",116,null],[11,"trace_call","","",116,null],[11,"trace_create","","",116,null],[11,"trace_failed_call","","",116,null],[11,"trace_failed_create","","",116,null],[11,"trace_suicide","","",116,null],[11,"subtracer","","",116,null],[11,"traces","","",116,null],[11,"trace_prepare_execute","","Trace the preparation to execute a single instruction.",117,null],[11,"trace_executed","","Trace the finalised execution of a single instruction.",117,null],[11,"prepare_subtrace","","Spawn subtracer which will be used to trace deeper levels of execution.",117,null],[11,"done_subtrace","","Spawn subtracer which will be used to trace deeper levels of execution.",117,null],[11,"drain","","Consumes self and returns all VM traces.",117,null],[11,"fmt","ethcore::types::trace_types::trace","",118,null],[11,"clone","","",118,null],[11,"eq","","",118,null],[11,"ne","","",118,null],[11,"default","","",118,{"inputs":[],"output":{"name":"callresult"}}],[11,"size","","",118,null],[11,"to_bytes","","",118,null],[11,"from_bytes","","",118,null],[11,"len_params","","",118,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",118,null],[11,"decode","","",118,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",119,null],[11,"clone","","",119,null],[11,"eq","","",119,null],[11,"ne","","",119,null],[11,"size","","",119,null],[11,"to_bytes","","",119,null],[11,"from_bytes","","",119,null],[11,"len_params","","",119,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",119,null],[11,"decode","","",119,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns bloom.",119,null],[11,"fmt","","",120,null],[11,"clone","","",120,null],[11,"eq","","",120,null],[11,"ne","","",120,null],[11,"size","","",120,null],[11,"to_bytes","","",120,null],[11,"from_bytes","","",120,null],[11,"len_params","","",120,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",120,{"inputs":[{"name":"actionparams"}],"output":{"name":"call"}}],[11,"rlp_append","","",120,null],[11,"decode","","",120,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns call action bloom.\nThe bloom contains from and to addresses.",120,null],[11,"fmt","","",121,null],[11,"clone","","",121,null],[11,"eq","","",121,null],[11,"ne","","",121,null],[11,"size","","",121,null],[11,"to_bytes","","",121,null],[11,"from_bytes","","",121,null],[11,"len_params","","",121,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",121,{"inputs":[{"name":"actionparams"}],"output":{"name":"create"}}],[11,"rlp_append","","",121,null],[11,"decode","","",121,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns bloom create action bloom.\nThe bloom contains only from address.",121,null],[11,"fmt","","",122,null],[11,"clone","","",122,null],[11,"eq","","",122,null],[11,"ne","","",122,null],[11,"size","","",122,null],[11,"to_bytes","","",122,null],[11,"from_bytes","","",122,null],[11,"len_params","","",122,{"inputs":[],"output":{"name":"usize"}}],[11,"bloom","","Return suicide action bloom.",122,null],[11,"rlp_append","","",122,null],[11,"decode","","",122,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",123,null],[11,"clone","","",123,null],[11,"eq","","",123,null],[11,"ne","","",123,null],[11,"size","","",123,null],[11,"to_bytes","","",123,null],[11,"from_bytes","","",123,null],[11,"len_params","","",123,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",123,null],[11,"decode","","",123,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns action bloom.",123,null],[11,"fmt","","",124,null],[11,"clone","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"size","","",124,null],[11,"to_bytes","","",124,null],[11,"from_bytes","","",124,null],[11,"len_params","","",124,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",124,null],[11,"decode","","",124,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns result bloom.",124,null],[11,"fmt","","",125,null],[11,"clone","","",125,null],[11,"eq","","",125,null],[11,"ne","","",125,null],[11,"size","","",125,null],[11,"to_bytes","","",125,null],[11,"from_bytes","","",125,null],[11,"len_params","","",125,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",125,null],[11,"decode","","",125,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",126,null],[11,"clone","","",126,null],[11,"eq","","",126,null],[11,"ne","","",126,null],[11,"size","","",126,null],[11,"to_bytes","","",126,null],[11,"from_bytes","","",126,null],[11,"len_params","","",126,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",126,null],[11,"decode","","",126,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",127,null],[11,"clone","","",127,null],[11,"eq","","",127,null],[11,"ne","","",127,null],[11,"size","","",127,null],[11,"to_bytes","","",127,null],[11,"from_bytes","","",127,null],[11,"len_params","","",127,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",127,null],[11,"decode","","",127,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",128,null],[11,"clone","","",128,null],[11,"eq","","",128,null],[11,"ne","","",128,null],[11,"default","","",128,{"inputs":[],"output":{"name":"vmoperation"}}],[11,"size","","",128,null],[11,"to_bytes","","",128,null],[11,"from_bytes","","",128,null],[11,"len_params","","",128,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",128,null],[11,"decode","","",128,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",129,null],[11,"clone","","",129,null],[11,"eq","","",129,null],[11,"ne","","",129,null],[11,"default","","",129,{"inputs":[],"output":{"name":"vmtrace"}}],[11,"size","","",129,null],[11,"to_bytes","","",129,null],[11,"from_bytes","","",129,null],[11,"len_params","","",129,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",129,null],[11,"decode","","",129,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","ethcore::types::trace_types::filter","",130,null],[11,"size","","",130,null],[11,"to_bytes","","",130,null],[11,"from_bytes","","",130,null],[11,"len_params","","",130,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",130,{"inputs":[{"name":"vec"}],"output":{"name":"addressesfilter"}}],[11,"matches","","Returns true if address matches one of the searched addresses.",130,null],[11,"matches_all","","Returns true if this address filter matches everything.",130,null],[11,"blooms","","Returns blooms of this addresses filter.",130,null],[11,"with_blooms","","Returns vector of blooms zipped with blooms of this addresses filter.",130,null],[11,"fmt","","",131,null],[11,"size","","",131,null],[11,"to_bytes","","",131,null],[11,"from_bytes","","",131,null],[11,"len_params","","",131,{"inputs":[],"output":{"name":"usize"}}],[11,"bloom_possibilities","","",131,null],[11,"range","","",131,null],[11,"matches","","Returns true if given trace matches the filter.",131,null],[11,"fmt","ethcore::types::trace_types::flat","",132,null],[11,"eq","","",132,null],[11,"ne","","",132,null],[11,"clone","","",132,null],[11,"size","","",132,null],[11,"to_bytes","","",132,null],[11,"from_bytes","","",132,null],[11,"len_params","","",132,{"inputs":[],"output":{"name":"usize"}}],[11,"bloom","","Returns bloom of the trace.",132,null],[11,"heap_size_of_children","","",132,null],[11,"rlp_append","","",132,null],[11,"decode","","",132,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",133,null],[11,"eq","","",133,null],[11,"ne","","",133,null],[11,"clone","","",133,null],[11,"from","","",133,{"inputs":[{"name":"vec"}],"output":{"name":"flattransactiontraces"}}],[11,"heap_size_of_children","","",133,null],[11,"bloom","","Returns bloom of all traces in the collection.",133,null],[11,"rlp_append","","",133,null],[11,"decode","","",133,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"into","","",133,null],[11,"fmt","","",134,null],[11,"eq","","",134,null],[11,"ne","","",134,null],[11,"clone","","",134,null],[11,"heap_size_of_children","","",134,null],[11,"from","","",134,{"inputs":[{"name":"vec"}],"output":{"name":"flatblocktraces"}}],[11,"bloom","","Returns bloom of all traces in the block.",134,null],[11,"rlp_append","","",134,null],[11,"decode","","",134,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"into","","",134,null],[11,"fmt","ethcore::types::trace_types::localized","",135,null],[11,"eq","","",135,null],[11,"ne","","",135,null],[11,"size","","",135,null],[11,"to_bytes","","",135,null],[11,"from_bytes","","",135,null],[11,"len_params","","",135,{"inputs":[],"output":{"name":"usize"}}],[11,"from","ethcore::spec::genesis","",136,{"inputs":[{"name":"genesis"}],"output":{"name":"genesis"}}],[11,"clone","ethcore::spec::spec","",137,null],[11,"eq","","",137,null],[11,"ne","","",137,null],[11,"fmt","","",137,null],[11,"from","","",137,{"inputs":[{"name":"params"}],"output":{"name":"commonparams"}}],[11,"from","","",138,{"inputs":[{"name":"spec"}],"output":{"name":"spec"}}],[11,"state_root","","Return the state root for the genesis state, memoising accordingly.",138,null],[11,"nodes","","Get the known knodes of the network in enode format.",138,null],[11,"network_id","","Get the configured Network ID.",138,null],[11,"fork_block","","Get the configured network fork block.",138,null],[11,"genesis_header","","Get the header of the genesis block.",138,null],[11,"genesis_block","","Compose the genesis block for this chain.",138,null],[11,"overwrite_genesis_params","","Overwrite the genesis components.",138,null],[11,"set_genesis_state","","Alter the value of the genesis state.",138,null],[11,"is_state_root_valid","","Returns `false` if the memoized state root is invalid. `true` otherwise.",138,null],[11,"ensure_db_good","","Ensure that the given state DB has the trie nodes in for the genesis state.",138,null],[11,"load","","Loads spec from json file.",138,null],[11,"new_test","","Create a new Spec which conforms to the Frontier-era Morden chain except that it&#39;s a NullEngine consensus.",138,{"inputs":[],"output":{"name":"spec"}}],[11,"new_null","","Create a new Spec which is a NullEngine consensus with a premine of address whose secret is sha3(&#39;&#39;).",138,{"inputs":[],"output":{"name":"spec"}}],[11,"new","ethcore::views::block","Creates new view onto block from raw bytes.",139,null],[11,"new_from_rlp","","Creates new view onto block from rlp.",139,{"inputs":[{"name":"rlp"}],"output":{"name":"blockview"}}],[11,"hash","","Block header hash.",139,null],[11,"rlp","","Return reference to underlaying rlp.",139,null],[11,"header","","Create new Header object from header rlp.",139,null],[11,"header_rlp","","Return header rlp.",139,null],[11,"header_view","","Create new header view obto block head rlp.",139,null],[11,"transactions","","Return List of transactions in given block.",139,null],[11,"localized_transactions","","Return List of transactions with additional localization info.",139,null],[11,"transactions_count","","Return number of transactions in given block, without deserializing them.",139,null],[11,"transaction_views","","Return List of transactions in given block.",139,null],[11,"transaction_hashes","","Return transaction hashes.",139,null],[11,"transaction_at","","Returns transaction at given index without deserializing unnecessary data.",139,null],[11,"localized_transaction_at","","Returns localized transaction at given index.",139,null],[11,"uncles","","Return list of uncles of given block.",139,null],[11,"uncles_count","","Return number of uncles in given block, without deserializing them.",139,null],[11,"uncle_views","","Return List of transactions in given block.",139,null],[11,"uncle_hashes","","Return list of uncle hashes of given block.",139,null],[11,"uncle_at","","Return nth uncle.",139,null],[11,"uncle_rlp_at","","Return nth uncle rlp.",139,null],[11,"sha3","","",139,null],[11,"new","ethcore::views::header","Creates new view onto header from raw bytes.",140,null],[11,"new_from_rlp","","Creates new view onto header from rlp.",140,{"inputs":[{"name":"rlp"}],"output":{"name":"headerview"}}],[11,"hash","","Returns header hash.",140,null],[11,"rlp","","Returns raw rlp.",140,null],[11,"parent_hash","","Returns parent hash.",140,null],[11,"uncles_hash","","Returns uncles hash.",140,null],[11,"author","","Returns author.",140,null],[11,"state_root","","Returns state root.",140,null],[11,"transactions_root","","Returns transactions root.",140,null],[11,"receipts_root","","Returns block receipts root.",140,null],[11,"log_bloom","","Returns block log bloom.",140,null],[11,"difficulty","","Returns block difficulty.",140,null],[11,"number","","Returns block number.",140,null],[11,"gas_limit","","Returns block gas limit.",140,null],[11,"gas_used","","Returns block gas used.",140,null],[11,"timestamp","","Returns timestamp.",140,null],[11,"extra_data","","Returns block extra data.",140,null],[11,"seal","","Returns a vector of post-RLP-encoded seal fields.",140,null],[11,"sha3","","",140,null],[11,"new","ethcore::views::transaction","Creates new view onto block from raw bytes.",141,null],[11,"new_from_rlp","","Creates new view onto block from rlp.",141,{"inputs":[{"name":"rlp"}],"output":{"name":"transactionview"}}],[11,"rlp","","Return reference to underlaying rlp.",141,null],[11,"nonce","","Get the nonce field of the transaction.",141,null],[11,"gas_price","","Get the gas_price field of the transaction.",141,null],[11,"gas","","Get the gas field of the transaction.",141,null],[11,"value","","Get the value field of the transaction.",141,null],[11,"data","","Get the data field of the transaction.",141,null],[11,"v","","Get the v field of the transaction.",141,null],[11,"r","","Get the r field of the transaction.",141,null],[11,"s","","Get the s field of the transaction.",141,null],[11,"sha3","","",141,null],[11,"new","ethcore::views::body","Creates new view onto block from raw bytes.",142,null],[11,"new_from_rlp","","Creates new view onto block from rlp.",142,{"inputs":[{"name":"rlp"}],"output":{"name":"bodyview"}}],[11,"rlp","","Return reference to underlaying rlp.",142,null],[11,"transactions","","Return List of transactions in given block.",142,null],[11,"localized_transactions","","Return List of transactions with additional localization info.",142,null],[11,"transactions_count","","Return number of transactions in given block, without deserializing them.",142,null],[11,"transaction_views","","Return List of transactions in given block.",142,null],[11,"transaction_hashes","","Return transaction hashes.",142,null],[11,"transaction_at","","Returns transaction at given index without deserializing unnecessary data.",142,null],[11,"localized_transaction_at","","Returns localized transaction at given index.",142,null],[11,"uncles","","Return list of uncles of given block.",142,null],[11,"uncles_count","","Return number of uncles in given block, without deserializing them.",142,null],[11,"uncle_views","","Return List of transactions in given block.",142,null],[11,"uncle_hashes","","Return list of uncle hashes of given block.",142,null],[11,"uncle_at","","Return nth uncle.",142,null],[11,"uncle_rlp_at","","Return nth uncle rlp.",142,null],[11,"default","ethcore::pod_state","",143,{"inputs":[],"output":{"name":"podstate"}}],[11,"eq","","",143,null],[11,"ne","","",143,null],[11,"clone","","",143,null],[11,"fmt","","",143,null],[11,"new","","Contruct a new object from the `m`.",143,{"inputs":[],"output":{"name":"podstate"}}],[11,"from","","Contruct a new object from the `m`.",143,{"inputs":[{"name":"btreemap"}],"output":{"name":"podstate"}}],[11,"get","","Get the underlying map.",143,null],[11,"root","","Get the root hash of the trie of the RLP of this.",143,null],[11,"drain","","Drain object to get the underlying map.",143,null],[11,"from","","",143,{"inputs":[{"name":"state"}],"output":{"name":"podstate"}}],[11,"from","","",143,{"inputs":[{"name":"state"}],"output":{"name":"podstate"}}],[11,"fmt","","",143,null],[11,"default","ethcore::migrations::state::v7","",144,{"inputs":[],"output":{"name":"archivev7"}}],[11,"columns","","",144,null],[11,"version","","",144,null],[11,"simple_migrate","","",144,null],[11,"default","","",145,{"inputs":[],"output":{"name":"overlayrecentv7"}}],[11,"columns","","",145,null],[11,"version","","",145,null],[11,"migrate","","",145,null],[11,"default","ethcore::migrations::blocks::v8","",146,{"inputs":[],"output":{"name":"v8"}}],[11,"version","","",146,null],[11,"columns","","",146,null],[11,"simple_migrate","","",146,null],[11,"columns","ethcore::migrations::extras::v6","",147,null],[11,"version","","",147,null],[11,"simple_migrate","","",147,null],[11,"new","ethcore::migrations::v9","Creates new V9 migration and assigns all `(key,value)` pairs from `source` DB to given Column Family",148,{"inputs":[{"name":"option"},{"name":"extract"}],"output":{"name":"tov9"}}],[11,"columns","","",148,null],[11,"version","","",148,null],[11,"migrate","","",148,null],[11,"eq","ethcore::miner::miner","",149,null],[11,"fmt","","",149,null],[11,"eq","","",150,null],[11,"ne","","",150,null],[11,"fmt","","",150,null],[11,"default","","",150,{"inputs":[],"output":{"name":"mineroptions"}}],[11,"eq","","",151,null],[11,"ne","","",151,null],[11,"fmt","","",151,null],[11,"eq","","",152,null],[11,"ne","","",152,null],[11,"fmt","","",152,null],[11,"new_calibrated","","Create a new Calibrated `GasPricer`.",152,{"inputs":[{"name":"gaspricecalibratoroptions"}],"output":{"name":"gaspricer"}}],[11,"new_fixed","","Create a new Fixed `GasPricer`.",152,{"inputs":[{"name":"u256"}],"output":{"name":"gaspricer"}}],[11,"with_spec","","Creates new instance of miner without accounts, but with given spec.",153,{"inputs":[{"name":"spec"}],"output":{"name":"miner"}}],[11,"new","","Creates new instance of miner",153,{"inputs":[{"name":"mineroptions"},{"name":"gaspricer"},{"name":"spec"},{"name":"option"}],"output":{"name":"arc"}}],[11,"pending_state","","Get `Some` `clone()` of the current pending block&#39;s state or `None` if we&#39;re not sealing.",153,null],[11,"pending_block","","Get `Some` `clone()` of the current pending block&#39;s state or `None` if we&#39;re not sealing.",153,null],[11,"clear_and_reset","","",153,null],[11,"status","","",153,null],[11,"call","","",153,null],[11,"balance","","",153,null],[11,"storage_at","","",153,null],[11,"nonce","","",153,null],[11,"code","","",153,null],[11,"set_author","","",153,null],[11,"set_extra_data","","",153,null],[11,"set_gas_floor_target","","Set the gas limit we wish to target when sealing a new block.",153,null],[11,"set_gas_ceil_target","","",153,null],[11,"set_minimal_gas_price","","",153,null],[11,"minimal_gas_price","","",153,null],[11,"sensible_gas_price","","",153,null],[11,"sensible_gas_limit","","",153,null],[11,"transactions_limit","","",153,null],[11,"set_transactions_limit","","",153,null],[11,"set_tx_gas_limit","","",153,null],[11,"author","","Get the author that we will seal blocks as.",153,null],[11,"extra_data","","Get the extra_data that we will seal blocks with.",153,null],[11,"gas_floor_target","","Get the gas limit we wish to target when sealing a new block.",153,null],[11,"gas_ceil_target","","Get the gas limit we wish to target when sealing a new block.",153,null],[11,"import_external_transactions","","",153,null],[11,"import_own_transaction","","",153,null],[11,"all_transactions","","",153,null],[11,"pending_transactions","","",153,null],[11,"pending_transactions_hashes","","",153,null],[11,"transaction","","",153,null],[11,"pending_receipts","","",153,null],[11,"last_nonce","","",153,null],[11,"update_sealing","","",153,null],[11,"is_sealing","","",153,null],[11,"map_sealing_work","","",153,null],[11,"submit_seal","","",153,null],[11,"chain_new_blocks","","",153,null],[11,"default","ethcore::miner::external","",154,{"inputs":[],"output":{"name":"externalminer"}}],[11,"new","","Creates new external miner with prefilled hashrates.",154,{"inputs":[{"name":"arc"}],"output":{"name":"externalminer"}}],[11,"submit_hashrate","","",154,null],[11,"hashrate","","",154,null],[11,"eq","ethcore::miner::transaction_queue","",155,null],[11,"fmt","","",155,null],[11,"clone","","",155,null],[11,"partial_cmp","","",155,null],[11,"cmp","","",155,null],[11,"default","","",156,{"inputs":[],"output":{"name":"transactionqueue"}}],[11,"new","","Creates new instance of this Queue",156,{"inputs":[],"output":{"name":"transactionqueue"}}],[11,"with_limits","","Create new instance of this Queue with specified limits",156,{"inputs":[{"name":"usize"},{"name":"u256"}],"output":{"name":"transactionqueue"}}],[11,"set_limit","","Set the new limit for `current` and `future` queue.",156,null],[11,"limit","","Returns current limit of transactions in the queue.",156,null],[11,"minimal_gas_price","","Get the minimal gas price.",156,null],[11,"set_minimal_gas_price","","Sets new gas price threshold for incoming transactions.\nAny transaction already imported to the queue is not affected.",156,null],[11,"set_gas_limit","","Sets new gas limit. Transactions with gas slightly (`GAS_LIMIT_HYSTERESIS`) above the limit won&#39;t be imported.\nAny transaction already imported to the queue is not affected.",156,null],[11,"set_tx_gas_limit","","Set the new limit for the amount of gas any individual transaction may have.\nAny transaction already imported to the queue is not affected.",156,null],[11,"status","","Returns current status for this queue",156,null],[11,"add","","Add signed transaction to queue to be verified and imported",156,null],[11,"remove_all","","Removes all transactions from particular sender up to (excluding) given client (state) nonce.\nClient (State) Nonce = next valid nonce for this sender.",156,null],[11,"remove_invalid","","Removes invalid transaction identified by hash from queue.\nAssumption is that this transaction nonce is not related to client nonce,\nso transactions left in queue are processed according to client nonce.",156,null],[11,"top_transactions","","Returns top transactions from the queue ordered by priority.",156,null],[11,"pending_hashes","","Returns hashes of all transactions from current, ordered by priority.",156,null],[11,"has_local_pending_transactions","","Returns true if there is at least one local transaction pending",156,null],[11,"find","","Finds transaction in the queue by hash (if any)",156,null],[11,"clear","","Removes all elements (in any state) from the queue",156,null],[11,"last_nonce","","Returns highest transaction nonce for given address.",156,null],[11,"fmt","ethcore::miner","",157,null],[11,"new","ethcore::snapshot::io","Create a new &quot;PackedWriter&quot;, to write into the file at the given path.",158,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"write_state_chunk","","",158,null],[11,"write_block_chunk","","",158,null],[11,"finish","","",158,null],[11,"new","","Create a new LooseWriter which will write into the given directory,\ncreating it if it doesn&#39;t exist.",159,{"inputs":[{"name":"pathbuf"}],"output":{"name":"result"}}],[11,"write_state_chunk","","",159,null],[11,"write_block_chunk","","",159,null],[11,"finish","","",159,null],[11,"new","","Create a new `PackedReader` for the file at the given path.\nThis will fail if any io errors are encountered or the file\nis not a valid packed snapshot.",160,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"manifest","","",160,null],[11,"chunk","","",160,null],[11,"new","","Create a new `LooseReader` which will read the manifest and chunk data from\nthe given directory.",161,{"inputs":[{"name":"pathbuf"}],"output":{"name":"result"}}],[11,"manifest","","",161,null],[11,"chunk","","",161,null],[11,"fmt","ethcore::snapshot::service","",162,null],[11,"clone","","",162,null],[11,"eq","","",162,null],[11,"new","","Create a new snapshot service.",163,{"inputs":[{"name":"spec"},{"name":"algorithm"},{"name":"pathbuf"},{"name":"iochannel"}],"output":{"name":"result"}}],[11,"feed_state_chunk","","Feed a state chunk to be processed synchronously.",163,null],[11,"feed_block_chunk","","Feed a block chunk to be processed synchronously.",163,null],[11,"manifest","","",163,null],[11,"chunk","","",163,null],[11,"status","","",163,null],[11,"chunks_done","","",163,null],[11,"begin_restore","","",163,null],[11,"restore_state_chunk","","",163,null],[11,"restore_block_chunk","","",163,null],[11,"fmt","ethcore::snapshot::error","",164,null],[11,"fmt","","",164,null],[11,"from","","",164,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",164,{"inputs":[{"name":"box"}],"output":{"name":"error"}}],[11,"from","","",164,{"inputs":[{"name":"decodererror"}],"output":{"name":"error"}}],[11,"eq","ethcore::snapshot","",165,null],[11,"ne","","",165,null],[11,"clone","","",165,null],[11,"fmt","","",165,null],[11,"into_rlp","","Encode the manifest data to rlp.",165,null],[11,"from_rlp","","Try to restore manifest data from raw bytes, interpreted as RLP.",165,null],[11,"new","","Create a new state rebuilder to write into the given backing DB.",166,{"inputs":[{"name":"arc"},{"name":"algorithm"}],"output":{"name":"staterebuilder"}}],[11,"feed","","Feed an uncompressed state chunk into the rebuilder.",166,null],[11,"state_root","","Get the state root of the rebuilder.",166,null],[11,"new","","Create a new BlockRebuilder.",167,{"inputs":[{"name":"blockchain"},{"name":"u64"}],"output":{"name":"result"}}],[11,"feed","","Feed the rebuilder an uncompressed block chunk.\nReturns the number of blocks fed or any errors.",167,null],[11,"glue_chunks","","Glue together any disconnected chunks. To be called at the end.",167,null],[11,"fmt","ethcore::action_params","",168,null],[11,"clone","","",168,null],[11,"value","","Returns action value as U256.",168,null],[11,"fmt","","",169,null],[11,"clone","","",169,null],[11,"default","","Returns default ActionParams initialized with zeros",169,{"inputs":[],"output":{"name":"actionparams"}}],[11,"from","","",169,{"inputs":[{"name":"transaction"}],"output":{"name":"actionparams"}}],[11,"fmt","ethcore::evm::evm","",170,null],[11,"cmp","","",171,null],[11,"partial_cmp","","",171,null],[11,"lt","","",171,null],[11,"le","","",171,null],[11,"gt","","",171,null],[11,"ge","","",171,null],[11,"eq","","",171,null],[11,"ne","","",171,null],[11,"fmt","","",171,null],[11,"finalize","core::result","",172,null],[11,"as_u256","bigint::uint","",173,null],[11,"from_u256","","",173,{"inputs":[{"name":"u256"}],"output":{"name":"result"}}],[11,"as_usize","","",173,null],[11,"overflow_add","","",173,null],[11,"overflow_mul","","",173,null],[11,"overflow_mul_shr","","",173,null],[11,"default","ethcore::evm::interpreter","",174,{"inputs":[],"output":{"name":"interpreter"}}],[11,"exec","","",174,null],[11,"clone","ethcore::evm::factory","",175,null],[11,"eq","","",175,null],[11,"fmt","","",175,null],[11,"fmt","","",175,null],[11,"default","","",175,{"inputs":[],"output":{"name":"vmtype"}}],[11,"all","","Return all possible VMs (Interpreter)",175,{"inputs":[],"output":{"name":"vec"}}],[11,"jit","","Return new jit if it&#39;s possible",175,{"inputs":[],"output":{"name":"option"}}],[11,"create","","Create fresh instance of VM\nMight choose implementation depending on supplied gas.",176,null],[11,"new","","Create new instance of specific `VMType` factory",176,{"inputs":[{"name":"vmtype"}],"output":{"name":"factory"}}],[11,"default","","Returns native rust evm factory",176,{"inputs":[],"output":{"name":"factory"}}],[11,"new_frontier","ethcore::evm::schedule","Schedule for the Frontier-era of the Ethereum main net.",177,{"inputs":[],"output":{"name":"schedule"}}],[11,"new_homestead","","Schedule for the Homestead-era of the Ethereum main net.",177,{"inputs":[],"output":{"name":"schedule"}}],[11,"fmt","ethcore::env_info","",178,null],[11,"default","","",178,{"inputs":[],"output":{"name":"envinfo"}}],[11,"from","","",178,{"inputs":[{"name":"env"}],"output":{"name":"envinfo"}}],[11,"default","ethcore::executive","",179,{"inputs":[],"output":{"name":"transactoptions"}}],[11,"new","","Basic constructor.",180,{"inputs":[{"name":"state"},{"name":"envinfo"},{"name":"engine"},{"name":"factory"}],"output":{"name":"executive"}}],[11,"from_parent","","Populates executive from parent properties. Increments executive depth.",180,{"inputs":[{"name":"state"},{"name":"envinfo"},{"name":"engine"},{"name":"factory"},{"name":"usize"}],"output":{"name":"executive"}}],[11,"as_externalities","","Creates `Externalities` from `Executive`.",180,null],[11,"transact","","This function should be used to execute transaction.",180,null],[11,"transact_with_tracer","","Execute transaction/call with tracing enabled",180,null],[11,"call","","Calls contract function with given contract params.\nNOTE. It does not finalize the transaction (doesn&#39;t do refunds, nor suicides).\nModifies the substate and the output.\nReturns either gas_left or `evm::Error`.",180,null],[11,"create","","Creates contract with given contract params.\nNOTE. It does not finalize the transaction (doesn&#39;t do refunds, nor suicides).\nModifies the substate.",180,null],[11,"fmt","ethcore::blockchain::cache","",181,null],[11,"total","","Total amount used by the cache.",181,null],[11,"eq","ethcore::blockchain::config","",182,null],[11,"ne","","",182,null],[11,"fmt","","",182,null],[11,"default","","",182,{"inputs":[],"output":{"name":"config"}}],[11,"fmt","ethcore::types::transaction","",183,null],[11,"clone","","",183,null],[11,"eq","","",183,null],[11,"ne","","",183,null],[11,"size","","",183,null],[11,"to_bytes","","",183,null],[11,"from_bytes","","",183,null],[11,"len_params","","",183,{"inputs":[],"output":{"name":"usize"}}],[11,"default","","",183,{"inputs":[],"output":{"name":"action"}}],[11,"decode","","",183,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",184,{"inputs":[],"output":{"name":"transaction"}}],[11,"fmt","","",184,null],[11,"clone","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"size","","",184,null],[11,"to_bytes","","",184,null],[11,"from_bytes","","",184,null],[11,"len_params","","",184,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append_unsigned_transaction","","Append object with a without signature into RLP stream",184,null],[11,"from","","",185,{"inputs":[{"name":"transaction"}],"output":{"name":"signedtransaction"}}],[11,"from","","",185,{"inputs":[{"name":"transaction"}],"output":{"name":"signedtransaction"}}],[11,"hash","","The message hash of the transaction.",184,null],[11,"sign","","Signs the transaction as coming from `sender`.",184,null],[11,"with_signature","","Signs the transaction with signature.",184,null],[11,"fake_sign","","Specify the sender; this won&#39;t survive the serialize/deserialize process, but can be cloned.",184,null],[11,"gas_required_for","","Get the transaction cost in gas for the given params.",184,null],[11,"gas_required","","Get the transaction cost in gas for this transaction.",184,null],[11,"fmt","","",185,null],[11,"clone","","",185,null],[11,"size","","",185,null],[11,"to_bytes","","",185,null],[11,"from_bytes","","",185,null],[11,"len_params","","",185,{"inputs":[],"output":{"name":"usize"}}],[11,"eq","","",185,null],[11,"deref","","",185,null],[11,"decode","","",185,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"rlp_append","","",185,null],[11,"rlp_append_sealed_transaction","","Append object with a signature into RLP stream",185,null],[11,"hash","","Get the hash of this header (sha3 of the RLP).",185,null],[11,"standard_v","","0 is `v` is 27, 1 if 28, and 4 otherwise.",185,null],[11,"signature","","Construct a signature object from the sig.",185,null],[11,"check_low_s","","Checks whether the signature has a low &#39;s&#39; value.",185,null],[11,"sender","","Returns transaction sender.",185,null],[11,"fmt","","",186,null],[11,"eq","","",186,null],[11,"ne","","",186,null],[11,"size","","",186,null],[11,"to_bytes","","",186,null],[11,"from_bytes","","",186,null],[11,"len_params","","",186,{"inputs":[],"output":{"name":"usize"}}],[11,"deref","","",186,null],[11,"fmt","ethcore::types::ids","",187,null],[11,"eq","","",187,null],[11,"ne","","",187,null],[11,"clone","","",187,null],[11,"hash","","",187,null],[11,"size","","",187,null],[11,"to_bytes","","",187,null],[11,"from_bytes","","",187,null],[11,"len_params","","",187,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",188,null],[11,"eq","","",188,null],[11,"ne","","",188,null],[11,"clone","","",188,null],[11,"hash","","",188,null],[11,"size","","",188,null],[11,"to_bytes","","",188,null],[11,"from_bytes","","",188,null],[11,"len_params","","",188,{"inputs":[],"output":{"name":"usize"}}],[11,"size","","",189,null],[11,"to_bytes","","",189,null],[11,"from_bytes","","",189,null],[11,"len_params","","",189,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",190,null],[11,"size","","",190,null],[11,"to_bytes","","",190,null],[11,"from_bytes","","",190,null],[11,"len_params","","",190,{"inputs":[],"output":{"name":"usize"}}],[11,"default","ethcore::types::receipt","",191,{"inputs":[],"output":{"name":"receipt"}}],[11,"fmt","","",191,null],[11,"clone","","",191,null],[11,"size","","",191,null],[11,"to_bytes","","",191,null],[11,"from_bytes","","",191,null],[11,"len_params","","",191,{"inputs":[],"output":{"name":"usize"}}],[11,"new","","Create a new receipt.",191,{"inputs":[{"name":"h256"},{"name":"u256"},{"name":"vec"}],"output":{"name":"receipt"}}],[11,"rlp_append","","",191,null],[11,"decode","","",191,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"heap_size_of_children","","",191,null],[11,"fmt","","",192,null],[11,"clone","","",192,null],[11,"eq","","",192,null],[11,"ne","","",192,null],[11,"size","","",192,null],[11,"to_bytes","","",192,null],[11,"from_bytes","","",192,null],[11,"len_params","","",192,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","ethcore::types::tree_route","",193,null],[11,"size","","",193,null],[11,"to_bytes","","",193,null],[11,"from_bytes","","",193,null],[11,"len_params","","",193,{"inputs":[],"output":{"name":"usize"}}],[11,"clone","ethcore::types::blockchain_info","",95,null],[11,"fmt","","",95,null],[11,"size","","",95,null],[11,"to_bytes","","",95,null],[11,"from_bytes","","",95,null],[11,"len_params","","",95,{"inputs":[],"output":{"name":"usize"}}],[11,"default","ethcore::types::log_entry","",194,{"inputs":[],"output":{"name":"logentry"}}],[11,"fmt","","",194,null],[11,"clone","","",194,null],[11,"eq","","",194,null],[11,"ne","","",194,null],[11,"size","","",194,null],[11,"to_bytes","","",194,null],[11,"from_bytes","","",194,null],[11,"len_params","","",194,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",194,null],[11,"decode","","",194,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"heap_size_of_children","","",194,null],[11,"bloom","","Calculates the bloom of this log entry.",194,null],[11,"from","","",194,{"inputs":[{"name":"log"}],"output":{"name":"logentry"}}],[11,"default","","",195,{"inputs":[],"output":{"name":"localizedlogentry"}}],[11,"fmt","","",195,null],[11,"eq","","",195,null],[11,"ne","","",195,null],[11,"clone","","",195,null],[11,"size","","",195,null],[11,"to_bytes","","",195,null],[11,"from_bytes","","",195,null],[11,"len_params","","",195,{"inputs":[],"output":{"name":"usize"}}],[11,"deref","","",195,null],[11,"fmt","ethcore::types::executed","",196,null],[11,"eq","","",196,null],[11,"clone","","",196,null],[11,"size","","",196,null],[11,"to_bytes","","",196,null],[11,"from_bytes","","",196,null],[11,"len_params","","",196,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",196,null],[11,"decode","","",196,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",197,null],[11,"eq","","",197,null],[11,"ne","","",197,null],[11,"clone","","",197,null],[11,"size","","",197,null],[11,"to_bytes","","",197,null],[11,"from_bytes","","",197,null],[11,"len_params","","",197,{"inputs":[],"output":{"name":"usize"}}],[11,"eq","","",198,null],[11,"ne","","",198,null],[11,"fmt","","",198,null],[11,"clone","","",198,null],[11,"size","","",198,null],[11,"to_bytes","","",198,null],[11,"from_bytes","","",198,null],[11,"len_params","","",198,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",198,null],[11,"eq","","",199,null],[11,"ne","","",199,null],[11,"fmt","","",199,null],[11,"clone","","",199,null],[11,"size","","",199,null],[11,"to_bytes","","",199,null],[11,"from_bytes","","",199,null],[11,"len_params","","",199,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",199,{"inputs":[{"name":"executionerror"}],"output":{"name":"callerror"}}],[11,"fmt","","",199,null],[11,"fmt","ethcore::types::block_status","",200,null],[11,"eq","","",200,null],[11,"size","","",200,null],[11,"to_bytes","","",200,null],[11,"from_bytes","","",200,null],[11,"len_params","","",200,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","ethcore::types::account_diff","",201,null],[11,"eq","","",201,null],[11,"ne","","",201,null],[11,"clone","","",201,null],[11,"size","","",201,null],[11,"to_bytes","","",201,null],[11,"from_bytes","","",201,null],[11,"len_params","","",201,{"inputs":[],"output":{"name":"usize"}}],[11,"new","","Construct new object with given `pre` and `post`.",201,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"diff"}}],[11,"pre","","Get the before value, if there is one.",201,null],[11,"post","","Get the after value, if there is one.",201,null],[11,"is_same","","Determine whether there was a change or not.",201,null],[11,"fmt","","",202,null],[11,"eq","","",202,null],[11,"ne","","",202,null],[11,"clone","","",202,null],[11,"size","","",202,null],[11,"to_bytes","","",202,null],[11,"from_bytes","","",202,null],[11,"len_params","","",202,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",203,null],[11,"eq","","",203,null],[11,"clone","","",203,null],[11,"size","","",203,null],[11,"to_bytes","","",203,null],[11,"from_bytes","","",203,null],[11,"len_params","","",203,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",203,null],[11,"existance","","Get `Existance` projection.",202,null],[11,"fmt","","",202,null],[11,"fmt","ethcore::types::state_diff","",204,null],[11,"eq","","",204,null],[11,"ne","","",204,null],[11,"clone","","",204,null],[11,"size","","",204,null],[11,"to_bytes","","",204,null],[11,"from_bytes","","",204,null],[11,"len_params","","",204,{"inputs":[],"output":{"name":"usize"}}],[11,"get","","Get the actual data.",204,null],[11,"fmt","","",204,null],[11,"new","collections::btree::map","Makes a new empty BTreeMap with a reasonable choice for B.",205,{"inputs":[],"output":{"name":"btreemap"}}],[11,"clear","","Clears the map, removing all values.",205,null],[11,"get","","Returns a reference to the value corresponding to the key.",205,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",205,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",205,null],[11,"insert","","Inserts a key-value pair into the map.",205,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",205,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",205,null],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",205,null],[11,"range_mut","","Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",205,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",205,null],[11,"iter","","Gets an iterator over the entries of the map, sorted by key.",205,null],[11,"iter_mut","","Gets a mutable iterator over the entries of the map, sorted by key.",205,null],[11,"keys","","Gets an iterator over the keys of the map, in sorted order.",205,null],[11,"values","","Gets an iterator over the values of the map, in order by key.",205,null],[11,"values_mut","","Gets a mutable iterator over the values of the map, in order by key.",205,null],[11,"len","","Returns the number of elements in the map.",205,null],[11,"is_empty","","Returns true if the map contains no elements.",205,null],[11,"clone","collections::binary_heap","",206,null],[11,"clone_from","","",206,null],[11,"default","","",206,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",206,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",206,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",206,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",206,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",206,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",206,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",206,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",206,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",206,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",206,null],[11,"push","","Pushes an item onto the binary heap.",206,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",206,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",206,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",206,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",206,null],[11,"len","","Returns the length of the binary heap.",206,null],[11,"is_empty","","Checks if the binary heap is empty.",206,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",206,null],[11,"clear","","Drops all items from the binary heap.",206,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",206,null],[11,"clone","","",207,null],[11,"next","","",207,null],[11,"size_hint","","",207,null],[11,"next_back","","",207,null],[11,"clone","","",208,null],[11,"next","","",208,null],[11,"size_hint","","",208,null],[11,"next_back","","",208,null],[11,"next","","",209,null],[11,"size_hint","","",209,null],[11,"next_back","","",209,null],[11,"from","","",206,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",210,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",206,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",206,null],[11,"extend","","",206,null],[11,"extend","","",206,null],[11,"drop","collections::btree::map","",205,null],[11,"clone","","",205,null],[11,"next","","",211,null],[11,"size_hint","","",211,null],[11,"next_back","","",211,null],[11,"len","","",211,null],[11,"clone","","",211,null],[11,"next","","",212,null],[11,"size_hint","","",212,null],[11,"next_back","","",212,null],[11,"len","","",212,null],[11,"into_iter","","",205,null],[11,"drop","","",213,null],[11,"next","","",213,null],[11,"size_hint","","",213,null],[11,"next_back","","",213,null],[11,"len","","",213,null],[11,"next","","",214,null],[11,"size_hint","","",214,null],[11,"next_back","","",214,null],[11,"len","","",214,null],[11,"clone","","",214,null],[11,"next","","",215,null],[11,"size_hint","","",215,null],[11,"next_back","","",215,null],[11,"len","","",215,null],[11,"clone","","",215,null],[11,"next","","",216,null],[11,"next","","",217,null],[11,"size_hint","","",217,null],[11,"next_back","","",217,null],[11,"len","","",217,null],[11,"next_back","","",216,null],[11,"clone","","",216,null],[11,"next","","",218,null],[11,"next_back","","",218,null],[11,"from_iter","","",205,{"inputs":[{"name":"t"}],"output":{"name":"btreemap"}}],[11,"extend","","",205,null],[11,"extend","","",205,null],[11,"hash","","",205,null],[11,"default","","",205,{"inputs":[],"output":{"name":"btreemap"}}],[11,"eq","","",205,null],[11,"partial_cmp","","",205,null],[11,"cmp","","",205,null],[11,"fmt","","",205,null],[11,"index","","",205,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",219,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",219,null],[11,"key","","Returns a reference to this entry&#39;s key.",219,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",220,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it.",220,null],[11,"key","","Gets a reference to the key in the entry.",221,null],[11,"get","","Gets a reference to the value in the entry.",221,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",221,null],[11,"into_mut","","Converts the entry into a mutable reference to its value.",221,null],[11,"insert","","Sets the value of the entry with the OccupiedEntry&#39;s key,\nand returns the entry&#39;s old value.",221,null],[11,"remove","","Takes the value of the entry out of the map, and returns it.",221,null],[11,"partial_cmp","collections::btree::set","",222,null],[11,"lt","","",222,null],[11,"le","","",222,null],[11,"gt","","",222,null],[11,"ge","","",222,null],[11,"cmp","","",222,null],[11,"eq","","",222,null],[11,"ne","","",222,null],[11,"hash","","",222,null],[11,"clone","","",222,null],[11,"new","","Makes a new BTreeSet with a reasonable choice of B.",222,{"inputs":[],"output":{"name":"btreeset"}}],[11,"iter","","Gets an iterator over the BTreeSet&#39;s contents.",222,null],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the set, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",222,null],[11,"difference","","Visits the values representing the difference, in ascending order.",222,null],[11,"symmetric_difference","","Visits the values representing the symmetric difference, in ascending order.",222,null],[11,"intersection","","Visits the values representing the intersection, in ascending order.",222,null],[11,"union","","Visits the values representing the union, in ascending order.",222,null],[11,"len","","Returns the number of elements in the set.",222,null],[11,"is_empty","","Returns true if the set contains no elements.",222,null],[11,"clear","","Clears the set, removing all values.",222,null],[11,"contains","","Returns `true` if the set contains a value.",222,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",222,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",222,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",222,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",222,null],[11,"insert","","Adds a value to the set.",222,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",222,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",222,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",222,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",222,null],[11,"from_iter","","",222,{"inputs":[{"name":"i"}],"output":{"name":"btreeset"}}],[11,"into_iter","","Gets an iterator for moving out the BtreeSet&#39;s contents.",222,null],[11,"extend","","",222,null],[11,"extend","","",222,null],[11,"default","","",222,{"inputs":[],"output":{"name":"btreeset"}}],[11,"fmt","","",222,null],[11,"clone","","",223,null],[11,"next","","",223,null],[11,"size_hint","","",223,null],[11,"next_back","","",223,null],[11,"len","","",223,null],[11,"next","","",224,null],[11,"size_hint","","",224,null],[11,"next_back","","",224,null],[11,"len","","",224,null],[11,"clone","","",225,null],[11,"next","","",225,null],[11,"next_back","","",225,null],[11,"clone","","",226,null],[11,"next","","",226,null],[11,"size_hint","","",226,null],[11,"clone","","",227,null],[11,"next","","",227,null],[11,"size_hint","","",227,null],[11,"clone","","",228,null],[11,"next","","",228,null],[11,"size_hint","","",228,null],[11,"clone","","",229,null],[11,"next","","",229,null],[11,"size_hint","","",229,null],[11,"borrow","collections::borrow","",230,null],[11,"clone","","",230,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",230,null],[11,"into_owned","","Extracts the owned data.",230,null],[11,"deref","","",230,null],[11,"cmp","","",230,null],[11,"eq","","",230,null],[11,"partial_cmp","","",230,null],[11,"fmt","","",230,null],[11,"fmt","","",230,null],[11,"hash","","",230,null],[11,"as_ref","","",230,null],[11,"hash","collections::enum_set","",231,null],[11,"cmp","","",231,null],[11,"partial_cmp","","",231,null],[11,"lt","","",231,null],[11,"le","","",231,null],[11,"gt","","",231,null],[11,"ge","","",231,null],[11,"eq","","",231,null],[11,"ne","","",231,null],[11,"clone","","",231,null],[11,"fmt","","",231,null],[11,"new","","Returns an empty `EnumSet`.",231,{"inputs":[],"output":{"name":"enumset"}}],[11,"len","","Returns the number of elements in the given `EnumSet`.",231,null],[11,"is_empty","","Returns true if the `EnumSet` is empty.",231,null],[11,"clear","","",231,null],[11,"is_disjoint","","Returns `false` if the `EnumSet` contains any enum of the given `EnumSet`.",231,null],[11,"is_superset","","Returns `true` if a given `EnumSet` is included in this `EnumSet`.",231,null],[11,"is_subset","","Returns `true` if this `EnumSet` is included in the given `EnumSet`.",231,null],[11,"union","","Returns the union of both `EnumSets`.",231,null],[11,"intersection","","Returns the intersection of both `EnumSets`.",231,null],[11,"insert","","Adds an enum to the `EnumSet`, and returns `true` if it wasn&#39;t there before",231,null],[11,"remove","","Removes an enum from the EnumSet",231,null],[11,"contains","","Returns `true` if an `EnumSet` contains a given enum.",231,null],[11,"iter","","Returns an iterator over an `EnumSet`.",231,null],[11,"sub","","",231,null],[11,"bitor","","",231,null],[11,"bitand","","",231,null],[11,"bitxor","","",231,null],[11,"clone","","",232,null],[11,"next","","",232,null],[11,"size_hint","","",232,null],[11,"from_iter","","",231,{"inputs":[{"name":"i"}],"output":{"name":"enumset"}}],[11,"extend","","",231,null],[11,"extend","","",231,null],[11,"clone","collections::linked_list","",233,null],[11,"clone","","",234,null],[11,"default","","",235,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",235,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",235,null],[11,"iter","","Provides a forward iterator.",235,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",235,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",235,null],[11,"len","","Returns the length of the `LinkedList`.",235,null],[11,"clear","","Removes all elements from the `LinkedList`.",235,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",235,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",235,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",235,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",235,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",235,null],[11,"push_front","","Adds an element first in the list.",235,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",235,null],[11,"push_back","","Appends an element to the back of a list",235,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",235,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",235,null],[11,"front_place","","Returns a place for insertion at the front of the list.",235,null],[11,"back_place","","Returns a place for insertion at the back of the list.",235,null],[11,"drop","","",235,null],[11,"next","","",233,null],[11,"size_hint","","",233,null],[11,"next_back","","",233,null],[11,"next","","",236,null],[11,"size_hint","","",236,null],[11,"next_back","","",236,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",236,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",236,null],[11,"next","","",234,null],[11,"size_hint","","",234,null],[11,"next_back","","",234,null],[11,"from_iter","","",235,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",235,null],[11,"extend","","",235,null],[11,"extend","","",235,null],[11,"eq","","",235,null],[11,"ne","","",235,null],[11,"partial_cmp","","",235,null],[11,"cmp","","",235,null],[11,"clone","","",235,null],[11,"fmt","","",235,null],[11,"hash","","",235,null],[11,"make_place","","",237,null],[11,"pointer","","",237,null],[11,"finalize","","",237,null],[11,"make_place","","",238,null],[11,"pointer","","",238,null],[11,"finalize","","",238,null],[11,"start","core::ops","",239,null],[11,"end","","",240,null],[11,"start","","",241,null],[11,"end","","",241,null],[11,"borrow","collections::vec","",210,null],[11,"borrow_mut","","",210,null],[11,"clone","collections::str","",242,null],[11,"next","","",242,null],[11,"size_hint","","",242,null],[11,"borrow","collections::string","",243,null],[11,"fmt","core::str::pattern","",244,null],[11,"eq","","",244,null],[11,"ne","","",244,null],[11,"clone","","",244,null],[11,"fmt","","",245,null],[11,"clone","","",245,null],[11,"haystack","","",245,null],[11,"next","","",245,null],[11,"next_match","","",245,null],[11,"next_reject","","",245,null],[11,"next_back","","",245,null],[11,"next_match_back","","",245,null],[11,"next_reject_back","","",245,null],[11,"fmt","","",246,null],[11,"clone","","",246,null],[11,"haystack","","",246,null],[11,"next","","",246,null],[11,"next_match","","",246,null],[11,"next_reject","","",246,null],[11,"next_back","","",246,null],[11,"next_match_back","","",246,null],[11,"next_reject_back","","",246,null],[11,"clone","","",247,null],[11,"fmt","","",247,null],[11,"haystack","","",247,null],[11,"next","","",247,null],[11,"next_match","","",247,null],[11,"next_reject","","",247,null],[11,"next_back","","",247,null],[11,"next_match_back","","",247,null],[11,"next_reject_back","","",247,null],[11,"fmt","","",248,null],[11,"clone","","",248,null],[11,"haystack","","",248,null],[11,"next","","",248,null],[11,"next_match","","",248,null],[11,"next_back","","",248,null],[11,"next_match_back","","",248,null],[11,"cmp","collections::string","",243,null],[11,"partial_cmp","","",243,null],[11,"lt","","",243,null],[11,"le","","",243,null],[11,"gt","","",243,null],[11,"ge","","",243,null],[11,"fmt","","",249,null],[11,"fmt","","",250,null],[11,"new","","Creates a new empty `String`.",243,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",243,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",243,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",243,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",243,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",243,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",243,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",243,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",243,null],[11,"as_str","","Extracts a string slice containing the entire string.",243,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",243,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",243,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",243,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",243,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",243,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",243,null],[11,"push","","Appends the given `char` to the end of this `String`.",243,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",243,null],[11,"truncate","","Shortens this `String` to the specified length.",243,null],[11,"pop","","Removes the last character from the string buffer and returns it.",243,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",243,null],[11,"insert","","Inserts a character into this `String` at a byte position.",243,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",243,null],[11,"len","","Returns the length of this `String`, in bytes.",243,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",243,null],[11,"clear","","Truncates this `String`, removing all contents.",243,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",243,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",243,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",249,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",249,null],[11,"fmt","","",249,null],[11,"fmt","","",250,null],[11,"clone","","",243,null],[11,"clone_from","","",243,null],[11,"from_iter","","",243,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",243,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",243,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",243,null],[11,"extend","","",243,null],[11,"extend","","",243,null],[11,"extend","","",243,null],[11,"eq","","",243,null],[11,"ne","","",243,null],[11,"eq","","",243,null],[11,"ne","","",243,null],[11,"eq","","",243,null],[11,"ne","","",243,null],[11,"eq","collections::borrow","",230,null],[11,"ne","","",230,null],[11,"eq","","",230,null],[11,"ne","","",230,null],[11,"eq","","",230,null],[11,"ne","","",230,null],[11,"eq","collections::string","",243,null],[11,"ne","","",243,null],[11,"default","","",243,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",243,null],[11,"fmt","","",243,null],[11,"hash","","",243,null],[11,"add","","",243,null],[11,"index","","",243,null],[11,"index","","",243,null],[11,"index","","",243,null],[11,"index","","",243,null],[11,"index","","",243,null],[11,"index","","",243,null],[11,"index_mut","","",243,null],[11,"index_mut","","",243,null],[11,"index_mut","","",243,null],[11,"index_mut","","",243,null],[11,"index_mut","","",243,null],[11,"index_mut","","",243,null],[11,"deref","","",243,null],[11,"deref_mut","","",243,null],[11,"from_str","","",243,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",251,null],[11,"fmt","","",251,null],[11,"fmt","","",251,null],[11,"eq","","",251,null],[11,"as_ref","","",243,null],[11,"as_ref","","",243,null],[11,"from","","",243,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",230,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",230,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",243,null],[11,"write_str","","",243,null],[11,"write_char","","",243,null],[11,"drop","","",252,null],[11,"next","","",252,null],[11,"size_hint","","",252,null],[11,"next_back","","",252,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",210,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",210,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",210,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",210,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",210,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",210,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",210,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",210,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",210,null],[11,"as_slice","","Extracts a slice containing the entire vector.",210,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",210,null],[11,"set_len","","Sets the length of a vector.",210,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",210,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",210,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",210,null],[11,"retain","","Retains only the elements specified by the predicate.",210,null],[11,"push","","Appends an element to the back of a collection.",210,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",210,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",210,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",210,null],[11,"clear","","Clears the vector, removing all values.",210,null],[11,"len","","Returns the number of elements in the vector.",210,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",210,null],[11,"split_off","","Splits the collection into two at the given index.",210,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",210,null],[11,"extend_from_slice","","Appends all elements in a slice to the `Vec`.",210,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",210,null],[11,"clone","","",210,null],[11,"clone_from","","",210,null],[11,"hash","","",210,null],[11,"index","","",210,null],[11,"index_mut","","",210,null],[11,"index","","",210,null],[11,"index","","",210,null],[11,"index","","",210,null],[11,"index","","",210,null],[11,"index","","",210,null],[11,"index","","",210,null],[11,"index_mut","","",210,null],[11,"index_mut","","",210,null],[11,"index_mut","","",210,null],[11,"index_mut","","",210,null],[11,"index_mut","","",210,null],[11,"index_mut","","",210,null],[11,"deref","","",210,null],[11,"deref_mut","","",210,null],[11,"from_iter","","",210,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",210,null],[11,"extend","","",210,null],[11,"extend","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","collections::borrow","",230,null],[11,"ne","","",230,null],[11,"eq","","",230,null],[11,"ne","","",230,null],[11,"eq","","",230,null],[11,"ne","","",230,null],[11,"eq","collections::vec","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"eq","","",210,null],[11,"ne","","",210,null],[11,"partial_cmp","","",210,null],[11,"cmp","","",210,null],[11,"drop","","",210,null],[11,"default","","",210,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",210,null],[11,"as_ref","","",210,null],[11,"as_mut","","",210,null],[11,"as_ref","","",210,null],[11,"as_mut","","",210,null],[11,"from","","",210,null],[11,"from","","",210,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",230,null],[11,"from","","",230,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",230,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",253,null],[11,"size_hint","","",253,null],[11,"count","","",253,null],[11,"next_back","","",253,null],[11,"clone","","",253,null],[11,"drop","","",253,null],[11,"next","","",254,null],[11,"size_hint","","",254,null],[11,"next_back","","",254,null],[11,"drop","","",254,null],[11,"clone","collections::vec_deque","",255,null],[11,"drop","","",255,null],[11,"default","","",255,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",255,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",255,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",255,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",255,null],[11,"swap","","Swaps elements at indices `i` and `j`.",255,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",255,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",255,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",255,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",255,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",255,null],[11,"iter","","Returns a front-to-back iterator.",255,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",255,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",255,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",255,null],[11,"len","","Returns the number of elements in the `VecDeque`.",255,null],[11,"is_empty","","Returns true if the buffer contains no elements",255,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",255,null],[11,"clear","","Clears the buffer, removing all values.",255,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",255,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",255,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",255,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",255,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",255,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",255,null],[11,"push_front","","Inserts an element first in the sequence.",255,null],[11,"push_back","","Appends an element to the back of a buffer",255,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",255,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",255,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",255,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",255,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",255,null],[11,"split_off","","Splits the collection into two at the given index.",255,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",255,null],[11,"retain","","Retains only the elements specified by the predicate.",255,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",255,null],[11,"clone","","",256,null],[11,"next","","",256,null],[11,"size_hint","","",256,null],[11,"next_back","","",256,null],[11,"next","","",257,null],[11,"size_hint","","",257,null],[11,"next_back","","",257,null],[11,"clone","","",258,null],[11,"next","","",258,null],[11,"size_hint","","",258,null],[11,"next_back","","",258,null],[11,"drop","","",259,null],[11,"next","","",259,null],[11,"size_hint","","",259,null],[11,"next_back","","",259,null],[11,"eq","","",255,null],[11,"partial_cmp","","",255,null],[11,"cmp","","",255,null],[11,"hash","","",255,null],[11,"index","","",255,null],[11,"index_mut","","",255,null],[11,"from_iter","","",255,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",255,null],[11,"extend","","",255,null],[11,"extend","","",255,null],[11,"fmt","","",255,null],[11,"from","","",255,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",210,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"eq","collections","",260,null],[11,"ne","","",260,null],[11,"hash","","",260,null],[11,"fmt","","",260,null],[11,"clone","","",260,null],[11,"clone","alloc::boxed","",261,null],[11,"pointer","","",262,null],[11,"make_place","","",262,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",262,null],[11,"finalize","","",263,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",261,null],[11,"drop","","",262,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",263,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",263,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",263,null],[11,"default","","",263,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",263,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",263,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",263,null],[11,"clone","","",263,null],[11,"eq","","",263,null],[11,"ne","","",263,null],[11,"partial_cmp","","",263,null],[11,"lt","","",263,null],[11,"le","","",263,null],[11,"ge","","",263,null],[11,"gt","","",263,null],[11,"cmp","","",263,null],[11,"hash","","",263,null],[11,"from","","",263,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",263,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",263,null],[11,"fmt","","",263,null],[11,"fmt","","",263,null],[11,"fmt","","",263,null],[11,"deref","","",263,null],[11,"deref_mut","","",263,null],[11,"next","","",263,null],[11,"size_hint","","",263,null],[11,"next_back","","",263,null],[11,"call_once","","",263,null],[11,"call_once","","",263,null],[11,"clone","","",263,null],[11,"borrow","","",263,null],[11,"borrow_mut","","",263,null],[11,"as_ref","","",263,null],[11,"as_mut","","",263,null],[11,"deref","ethcore::types::state_diff","",204,null],[11,"fmt","ethcore::types::block_queue_info","",87,null],[11,"size","","",87,null],[11,"to_bytes","","",87,null],[11,"from_bytes","","",87,null],[11,"len_params","","",87,{"inputs":[],"output":{"name":"usize"}}],[11,"size","ethcore::types::filter","",264,null],[11,"to_bytes","","",264,null],[11,"from_bytes","","",264,null],[11,"len_params","","",264,{"inputs":[],"output":{"name":"usize"}}],[11,"clone","","",264,null],[11,"bloom_possibilities","","Returns combinations of each address and topic.",264,null],[11,"matches","","Returns true if given log entry matches filter.",264,null],[11,"size","ethcore::types::trace_filter","",265,null],[11,"to_bytes","","",265,null],[11,"from_bytes","","",265,null],[11,"len_params","","",265,{"inputs":[],"output":{"name":"usize"}}],[11,"eq","ethcore::types::call_analytics","",266,null],[11,"ne","","",266,null],[11,"default","","",266,{"inputs":[],"output":{"name":"callanalytics"}}],[11,"clone","","",266,null],[11,"fmt","","",266,null],[11,"size","","",266,null],[11,"to_bytes","","",266,null],[11,"from_bytes","","",266,null],[11,"len_params","","",266,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","ethcore::types::transaction_import","",267,null],[11,"clone","","",267,null],[11,"eq","","",267,null],[11,"from_bytes","","",267,null],[11,"to_bytes","","",267,null],[11,"fmt","","",268,null],[11,"clone","","",268,null],[11,"size","","",268,null],[11,"to_bytes","","",268,null],[11,"from_bytes","","",268,null],[11,"len_params","","",268,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",268,{"inputs":[{"name":"error"}],"output":{"name":"transactionimporterror"}}],[11,"fmt","ethcore::types::block_import_error","",269,null],[11,"size","","",269,null],[11,"to_bytes","","",269,null],[11,"from_bytes","","",269,null],[11,"len_params","","",269,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",269,{"inputs":[{"name":"error"}],"output":{"name":"blockimporterror"}}],[11,"create","ethstore::dir::disk","",270,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"at","","",270,{"inputs":[{"name":"p"}],"output":{"name":"diskdirectory"}}],[11,"load","","",270,null],[11,"insert","","",270,null],[11,"remove","","",270,null],[11,"create","ethstore::dir::geth","",271,{"inputs":[{"name":"directorytype"}],"output":{"name":"result"}}],[11,"open","","",271,{"inputs":[{"name":"directorytype"}],"output":{"name":"gethdirectory"}}],[11,"load","","",271,null],[11,"insert","","",271,null],[11,"remove","","",271,null],[11,"create","ethstore::dir::parity","",272,{"inputs":[{"name":"directorytype"}],"output":{"name":"result"}}],[11,"open","","",272,{"inputs":[{"name":"directorytype"}],"output":{"name":"paritydirectory"}}],[11,"load","","",272,null],[11,"insert","","",272,null],[11,"remove","","",272,null],[11,"into","ethkey::primitive","",273,null],[11,"from","","",273,{"inputs":[{"name":"h160"}],"output":{"name":"address"}}],[11,"from","","",273,{"inputs":[{"name":"h160"}],"output":{"name":"address"}}],[11,"clone","ethstore::account::safe_account","",274,null],[11,"eq","","",274,null],[11,"ne","","",274,null],[11,"fmt","","",274,null],[11,"into","","",274,null],[11,"create","","",274,null],[11,"from_file","","",274,{"inputs":[{"name":"keyfile"},{"name":"string"}],"output":{"name":"safeaccount"}}],[11,"sign","","",274,null],[11,"change_password","","",274,null],[11,"check_password","","",274,null],[11,"fmt","ethstore::error","",275,null],[11,"fmt","","",275,null],[11,"from","","",275,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",275,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"open","ethstore::ethstore","",276,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"open_with_iterations","","",276,{"inputs":[{"name":"box"},{"name":"u32"}],"output":{"name":"result"}}],[11,"insert_account","","",276,null],[11,"accounts","","",276,null],[11,"change_password","","",276,null],[11,"remove_account","","",276,null],[11,"sign","","",276,null],[11,"uuid","","",276,null],[11,"name","","",276,null],[11,"meta","","",276,null],[11,"set_name","","",276,null],[11,"set_meta","","",276,null],[11,"from","ethstore::presale","",277,{"inputs":[{"name":"presalewallet"}],"output":{"name":"presalewallet"}}],[11,"open","","",277,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"decrypt","","",277,null],[11,"new_blocks","parity::modules::no_ipc_deps","fires when chain has new blocks",101,null],[11,"start","","fires when chain achieves active mode",101,null],[11,"stop","","fires when chain achieves passive mode",101,null]],"paths":[[3,"Server"],[4,"Error"],[3,"Server"],[3,"Request"],[3,"Response"],[3,"ServerHandler"],[4,"RpcServerError"],[4,"DomainsValidation"],[3,"ServerBuilder"],[3,"Server"],[3,"ServerBuilder"],[4,"ServerError"],[3,"DefaultTimeProvider"],[3,"AuthCodes"],[4,"ServerError"],[3,"ServerBuilder"],[3,"Server"],[3,"ConfirmationsQueue"],[3,"Web3Client"],[3,"EthClientOptions"],[3,"EthClient"],[3,"EthFilterClient"],[3,"EthSigningQueueClient"],[3,"EthSigningUnsafeClient"],[3,"NetClient"],[3,"PersonalClient"],[3,"SignerClient"],[3,"EthcoreClient"],[3,"EthcoreSetClient"],[3,"TracesClient"],[3,"RpcClient"],[3,"NetworkSettings"],[3,"TestSyncProvider"],[3,"TestMinerService"],[3,"Bytes"],[4,"BlockTransactions"],[3,"Block"],[4,"BlockNumber"],[3,"CallRequest"],[3,"ConfirmationRequest"],[4,"ConfirmationPayload"],[3,"TransactionModification"],[3,"Filter"],[3,"H64"],[3,"H160"],[3,"H256"],[3,"H520"],[3,"H2048"],[3,"Index"],[3,"Log"],[3,"SyncInfo"],[4,"SyncStatus"],[3,"Transaction"],[3,"TransactionRequest"],[3,"Receipt"],[3,"LocalizedTrace"],[3,"TraceResults"],[3,"TraceFilter"],[3,"U256"],[3,"RpcServer"],[3,"EthSync"],[4,"SyncState"],[3,"SyncStatus"],[3,"SyncConfig"],[3,"SyncClient"],[8,"SyncProvider"],[3,"NetworkManagerClient"],[8,"ManageNetwork"],[3,"NetworkConfiguration"],[3,"ServiceConfiguration"],[4,"Error"],[3,"Secret"],[3,"Message"],[3,"Address"],[3,"AccountMeta"],[3,"AccountProvider"],[3,"NullEngine"],[3,"InstantSeal"],[3,"BasicAuthority"],[3,"Header"],[3,"Block"],[3,"ExecutedBlock"],[3,"ClosedBlock"],[3,"LockedBlock"],[3,"OpenBlock"],[3,"SealedBlock"],[3,"BlockQueueConfig"],[3,"BlockQueueInfo"],[3,"BlockQueue"],[4,"DatabaseCompactionProfile"],[4,"Mode"],[3,"ClientConfig"],[4,"Error"],[4,"EachBlockWith"],[3,"TestBlockChainClient"],[3,"BlockChainInfo"],[3,"ClientReport"],[3,"Client"],[3,"RemoteClient"],[8,"BlockChainClient"],[3,"ChainNotifyClient"],[8,"ChainNotify"],[4,"TransactionError"],[4,"BlockError"],[4,"ImportError"],[4,"Error"],[3,"EthashParams"],[3,"Ethash"],[4,"ClientIoMessage"],[3,"ClientService"],[4,"Switch"],[3,"Config"],[3,"TraceDB"],[4,"Error"],[3,"ExecutiveTracer"],[3,"ExecutiveVMTracer"],[3,"NoopTracer"],[3,"NoopVMTracer"],[3,"CallResult"],[3,"CreateResult"],[3,"Call"],[3,"Create"],[3,"Suicide"],[4,"Action"],[4,"Res"],[3,"MemoryDiff"],[3,"StorageDiff"],[3,"VMExecutedOperation"],[3,"VMOperation"],[3,"VMTrace"],[3,"AddressesFilter"],[3,"Filter"],[3,"FlatTrace"],[3,"FlatTransactionTraces"],[3,"FlatBlockTraces"],[3,"LocalizedTrace"],[3,"Genesis"],[3,"CommonParams"],[3,"Spec"],[3,"BlockView"],[3,"HeaderView"],[3,"TransactionView"],[3,"BodyView"],[3,"PodState"],[3,"ArchiveV7"],[3,"OverlayRecentV7"],[3,"V8"],[3,"ToV6"],[3,"ToV9"],[4,"PendingSet"],[3,"MinerOptions"],[3,"GasPriceCalibratorOptions"],[4,"GasPricer"],[3,"Miner"],[3,"ExternalMiner"],[4,"TransactionOrigin"],[3,"TransactionQueue"],[3,"MinerStatus"],[3,"PackedWriter"],[3,"LooseWriter"],[3,"PackedReader"],[3,"LooseReader"],[4,"RestorationStatus"],[3,"Service"],[4,"Error"],[3,"ManifestData"],[3,"StateRebuilder"],[3,"BlockRebuilder"],[4,"ActionValue"],[3,"ActionParams"],[4,"Error"],[4,"GasLeft"],[4,"Result"],[3,"U256"],[3,"Interpreter"],[4,"VMType"],[3,"Factory"],[3,"Schedule"],[3,"EnvInfo"],[3,"TransactOptions"],[3,"Executive"],[3,"CacheSize"],[3,"Config"],[4,"Action"],[3,"Transaction"],[3,"SignedTransaction"],[3,"LocalizedTransaction"],[4,"BlockID"],[4,"TransactionID"],[3,"TraceId"],[3,"UncleID"],[3,"Receipt"],[3,"LocalizedReceipt"],[3,"TreeRoute"],[3,"LogEntry"],[3,"LocalizedLogEntry"],[4,"CallType"],[3,"Executed"],[4,"ExecutionError"],[4,"CallError"],[4,"BlockStatus"],[4,"Diff"],[3,"AccountDiff"],[4,"Existance"],[3,"StateDiff"],[3,"BTreeMap"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Range"],[3,"ValuesMut"],[3,"RangeMut"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"BTreeSet"],[3,"Iter"],[3,"IntoIter"],[3,"Range"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[4,"Cow"],[3,"EnumSet"],[3,"Iter"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"RangeFrom"],[3,"RangeTo"],[3,"Range"],[3,"EncodeUtf16"],[3,"String"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"Drain"],[3,"IntoIter"],[3,"Drain"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[4,"Bound"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Box"],[3,"Filter"],[3,"Filter"],[3,"CallAnalytics"],[4,"TransactionImportResult"],[4,"TransactionImportError"],[4,"BlockImportError"],[3,"DiskDirectory"],[3,"GethDirectory"],[3,"ParityDirectory"],[3,"Address"],[3,"SafeAccount"],[4,"Error"],[3,"EthStore"],[3,"PresaleWallet"]]};
searchIndex["ethcore_signer"] = {"doc":"Signer module","items":[[3,"DefaultTimeProvider","ethcore_signer","Default implementation of `TimeProvider` using system time.",null,null],[3,"AuthCodes","","Manages authorization codes for `SignerUIs`",null,null],[3,"ServerBuilder","","Builder for `WebSockets` server",null,null],[3,"Server","","`WebSockets` server implementation.",null,null],[4,"ServerError","","Signer startup error",null,null],[13,"IoError","","Wrapped `std::io::Error`",0,null],[13,"WebSocket","","Other `ws-rs` error",0,null],[11,"default","","",1,{"inputs":[],"output":{"name":"defaulttimeprovider"}}],[11,"now","","",1,null],[11,"from_file","","Reads `AuthCodes` from file and creates new instance using `DefaultTimeProvider`.",2,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"to_file","","Writes all `AuthCodes` to a disk.",2,null],[11,"new","","Creates a new `AuthCodes` store with given `TimeProvider`.",2,{"inputs":[{"name":"vec"},{"name":"t"}],"output":{"name":"self"}}],[11,"is_valid","","Checks if given hash is correct identifier of `SignerUI`",2,null],[11,"generate_new","","Generates and returns a new code that can be used by `SignerUIs`",2,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"add_delegate","","",3,null],[11,"new","","Creates new `ServerBuilder`",3,{"inputs":[{"name":"arc"},{"name":"pathbuf"}],"output":{"name":"self"}}],[11,"skip_origin_validation","","If set to `true` server will not verify Origin of incoming requests.\nNot recommended. Use only for development.",3,null],[11,"start","","Starts a new `WebSocket` server in separate thread.\nReturns a `Server` handle which closes the server when droped.",3,null],[11,"on_panic","","",4,null],[11,"drop","","",4,null],[8,"TimeProvider","","Providing current time in seconds",null,null],[10,"now","","Returns timestamp (in seconds since epoch)",5,null]],"paths":[[4,"ServerError"],[3,"DefaultTimeProvider"],[3,"AuthCodes"],[3,"ServerBuilder"],[3,"Server"],[8,"TimeProvider"]]};
searchIndex["ethcore_dapps"] = {"doc":"Ethcore Webapplications for Parity\n```\nextern crate jsonrpc_core;\nextern crate ethcore_dapps;","items":[[3,"ServerBuilder","ethcore_dapps","Webapps HTTP+RPC server build.",null,null],[3,"Server","","Webapps HTTP server.",null,null],[4,"ServerError","","Webapp Server startup error",null,null],[13,"IoError","","Wrapped `std::io::Error`",0,null],[13,"Other","","Other `hyper` error",0,null],[11,"to_owned","url::host","Return a copy of `self` that owns an allocated `String` but does not borrow an `&amp;Url`.",1,null],[11,"parse","","Parse a host: either an IPv6 address in [] square brackets, or a domain.",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"hash","","",1,null],[11,"partial_cmp","","",1,null],[11,"lt","","",1,null],[11,"le","","",1,null],[11,"gt","","",1,null],[11,"ge","","",1,null],[11,"cmp","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"to_owned","","Return a copy of `self` that owns an allocated `String` but does not borrow an `&amp;Url`.",2,null],[11,"to_socket_addrs","","",2,null],[11,"next","","",3,null],[11,"fmt","url::origin","",4,null],[11,"clone","","",4,null],[11,"eq","","",4,null],[11,"ne","","",4,null],[11,"new_opaque","","Creates a new opaque origin that is only equal to itself.",4,{"inputs":[],"output":{"name":"origin"}}],[11,"is_tuple","","Return whether this origin is a (scheme, host, port) tuple\n(as opposed to an opaque origin).",4,null],[11,"ascii_serialization","","https://html.spec.whatwg.org/multipage/#ascii-serialisation-of-an-origin",4,null],[11,"unicode_serialization","","https://html.spec.whatwg.org/multipage/#unicode-serialisation-of-an-origin",4,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"drop","url::path_segments","",6,null],[11,"clear","","Remove all segments in the path, leaving the minimal `url.path() == &quot;/&quot;`.",6,null],[11,"pop_if_empty","","Remove the last segment of this URL’s path if it is empty,\nexcept if these was only one segment to begin with.",6,null],[11,"pop","","Remove the last segment of this URL’s path.",6,null],[11,"push","","Append the given segment at the end of this URL’s path.",6,null],[11,"extend","","Append each segment from the given iterator at the end of this URL’s path.",6,null],[11,"fmt","url::parser","",7,null],[11,"clone","","",7,null],[11,"eq","","",7,null],[11,"description","","",7,null],[11,"fmt","","",7,null],[11,"from","","",7,{"inputs":[{"name":"errors"}],"output":{"name":"parseerror"}}],[11,"index","url","",8,null],[11,"index","","",8,null],[11,"index","","",8,null],[11,"index","","",8,null],[11,"fmt","url::slicing","",9,null],[11,"clone","","",9,null],[11,"clone","url::form_urlencoded","",10,null],[11,"next","","",10,null],[11,"into_owned","","Return a new iterator that yields pairs of `String` instead of pairs of `Cow&lt;str&gt;`.",10,null],[11,"next","","",11,null],[11,"next","","",12,null],[11,"size_hint","","",12,null],[11,"as_mut_string","collections::string","",13,null],[11,"finish","","",13,null],[11,"as_mut_string","url","",14,null],[11,"finish","","",14,null],[11,"new","url::form_urlencoded","Create a new `application/x-www-form-urlencoded` serializer for the given target.",15,{"inputs":[{"name":"t"}],"output":{"name":"serializer"}}],[11,"for_suffix","","Create a new `application/x-www-form-urlencoded` serializer\nfor a suffix of the given target.",15,{"inputs":[{"name":"t"},{"name":"usize"}],"output":{"name":"serializer"}}],[11,"clear","","Remove any existing name/value pair.",15,null],[11,"append_pair","","Serialize and append a name/value pair.",15,null],[11,"extend_pairs","","Serialize and append a number of name/value pairs.",15,null],[11,"finish","","If this serializer was constructed with a string, take and return that string.",15,null],[11,"clone","url::percent_encoding","",16,null],[11,"contains","","",16,null],[11,"clone","","",17,null],[11,"contains","","",17,null],[11,"clone","","",18,null],[11,"contains","","",18,null],[11,"clone","","",19,null],[11,"contains","","",19,null],[11,"clone","","",20,null],[11,"contains","","",20,null],[11,"clone","","",21,null],[11,"next","","",21,null],[11,"size_hint","","",21,null],[11,"fmt","","",21,null],[11,"from","collections::borrow","",22,{"inputs":[{"name":"percentencode"}],"output":{"name":"cow"}}],[11,"clone","url::percent_encoding","",23,null],[11,"next","","",23,null],[11,"size_hint","","",23,null],[11,"from","collections::borrow","",22,{"inputs":[{"name":"percentdecode"}],"output":{"name":"cow"}}],[11,"if_any","url::percent_encoding","If the percent-decoding is different from the input, return it as a new bytes vector.",23,null],[11,"decode_utf8","","Decode the result of percent-decoding as UTF-8.",23,null],[11,"decode_utf8_lossy","","Decode the result of percent-decoding as UTF-8, lossily.",23,null],[11,"clone","url","",8,null],[11,"clone","","",24,null],[11,"base_url","","Change the base URL",24,null],[11,"log_syntax_violation","","Call the provided function or closure on non-fatal parse errors.",24,null],[11,"parse","","Parse an URL string with the configuration so far.",24,null],[11,"parse","","Parse an absolute URL from a string.",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"join","","Parse a string as an URL, with this URL as the base URL.",8,null],[11,"options","","Return a default `ParseOptions` that can fully configure the URL parser.",8,{"inputs":[],"output":{"name":"parseoptions"}}],[11,"as_str","","Return the serialization of this URL.",8,null],[11,"into_string","","Return the serialization of this URL.",8,null],[11,"origin","","Return the origin of this URL (https://url.spec.whatwg.org/#origin)",8,null],[11,"scheme","","Return the scheme of this URL, lower-cased, as an ASCII string without the &#39;:&#39; delimiter.",8,null],[11,"has_authority","","Return whether the URL has an &#39;authority&#39;,\nwhich can contain a username, password, host, and port number.",8,null],[11,"cannot_be_a_base","","Return whether this URL is a cannot-be-a-base URL,\nmeaning that parsing a relative URL string with this URL as the base will return an error.",8,null],[11,"username","","Return the username for this URL (typically the empty string)\nas a percent-encoded ASCII string.",8,null],[11,"password","","Return the password for this URL, if any, as a percent-encoded ASCII string.",8,null],[11,"has_host","","Equivalent to `url.host().is_some()`.",8,null],[11,"host_str","","Return the string representation of the host (domain or IP address) for this URL, if any.",8,null],[11,"host","","Return the parsed representation of the host for this URL.\nNon-ASCII domain labels are punycode-encoded per IDNA.",8,null],[11,"domain","","If this URL has a host and it is a domain name (not an IP address), return it.",8,null],[11,"port","","Return the port number for this URL, if any.",8,null],[11,"port_or_known_default","","Return the port number for this URL, or the default port number if it is known.",8,null],[11,"with_default_port","","If the URL has a host, return something that implements `ToSocketAddrs`.",8,null],[11,"path","","Return the path for this URL, as a percent-encoded ASCII string.\nFor cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with &#39;/&#39;.\nFor other URLs, this starts with a &#39;/&#39; slash\nand continues with slash-separated path segments.",8,null],[11,"path_segments","","Unless this URL is cannot-be-a-base,\nreturn an iterator of &#39;/&#39; slash-separated path segments,\neach as a percent-encoded ASCII string.",8,null],[11,"query","","Return this URL’s query string, if any, as a percent-encoded ASCII string.",8,null],[11,"query_pairs","","Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return an iterator of (key, value) pairs.",8,null],[11,"fragment","","Return this URL’s fragment identifier, if any.",8,null],[11,"set_fragment","","Change this URL’s fragment identifier.",8,null],[11,"set_query","","Change this URL’s query string.",8,null],[11,"query_pairs_mut","","Manipulate this URL’s query string, viewed as a sequence of name/value pairs\nin `application/x-www-form-urlencoded` syntax.",8,null],[11,"set_path","","Change this URL’s path.",8,null],[11,"path_segments_mut","","Return an object with methods to manipulate this URL’s path segments.",8,null],[11,"set_port","","Change this URL’s port number.",8,null],[11,"set_host","","Change this URL’s host.",8,null],[11,"set_ip_host","","Change this URL’s host to the given IP address.",8,null],[11,"set_password","","Change this URL’s password.",8,null],[11,"set_username","","Change this URL’s username.",8,null],[11,"set_scheme","","Change this URL’s scheme.",8,null],[11,"from_file_path","","Convert a file name as `std::path::Path` into an URL in the `file` scheme.",8,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"from_directory_path","","Convert a directory name as `std::path::Path` into an URL in the `file` scheme.",8,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"to_file_path","","Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.",8,null],[11,"to_socket_addrs","","",8,null],[11,"from_str","","",8,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"eq","","",8,null],[11,"cmp","","",8,null],[11,"partial_cmp","","",8,null],[11,"hash","","",8,null],[11,"as_ref","","",8,null],[11,"drop","","",14,null],[11,"clone","idna::uts46","",25,null],[11,"fmt","","",26,null],[11,"add_delegate","ethcore_dapps","",27,null],[11,"new","","Construct new dapps server",27,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"start_unsecure_http","","Asynchronously start server with no authentication,\nreturns result with `Server` handle on success or an error.",27,null],[11,"start_basic_auth_http","","Asynchronously start server with `HTTP Basic Authentication`,\nreturn result with `Server` handle on success or an error.",27,null],[11,"set_panic_handler","","Set callback for panics.",28,null],[11,"drop","","",28,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"self"}}]],"paths":[[4,"ServerError"],[4,"Host"],[3,"HostAndPort"],[3,"SocketAddrs"],[4,"Origin"],[3,"OpaqueOrigin"],[3,"PathSegmentsMut"],[4,"ParseError"],[3,"Url"],[4,"Position"],[3,"Parse"],[3,"ParseIntoOwned"],[3,"ByteSerialize"],[3,"String"],[3,"UrlQuery"],[3,"Serializer"],[3,"SIMPLE_ENCODE_SET"],[3,"QUERY_ENCODE_SET"],[3,"DEFAULT_ENCODE_SET"],[3,"PATH_SEGMENT_ENCODE_SET"],[3,"USERINFO_ENCODE_SET"],[3,"PercentEncode"],[4,"Cow"],[3,"PercentDecode"],[3,"ParseOptions"],[3,"Flags"],[3,"Errors"],[3,"ServerBuilder"],[3,"Server"]]};
searchIndex["ethcore_rpc"] = {"doc":"Ethcore rpc.","items":[[11,"new","jsonrpc_http_server","Creates new `ServerBuilder` with specified `IoHandler`.",0,{"inputs":[{"name":"arc"}],"output":{"name":"serverbuilder"}}],[11,"panic_handler","","Sets handler invoked in case of server panic.",0,null],[11,"cors","","Configures a list of allowed CORS origins.",0,null],[11,"allow_only_bind_host","","Allow connections only with `Host` header set to binding address.",0,null],[11,"allowed_hosts","","Specify a list of valid `Host` headers. Binding address is allowed automatically.",0,null],[11,"start_http","","Start this JSON-RPC HTTP server trying to bind to specified `SocketAddr`.",0,null],[11,"empty","jsonrpc_http_server::request_response","Create empty `Request`",1,{"inputs":[],"output":{"name":"request"}}],[11,"empty","","Create response with empty body and 200 OK status code.",2,{"inputs":[],"output":{"name":"response"}}],[11,"ok","","Create response with given body and 200 OK status code.",2,{"inputs":[{"name":"string"}],"output":{"name":"response"}}],[11,"host_not_allowed","","Create response for not allowed hosts.",2,{"inputs":[],"output":{"name":"response"}}],[11,"unsupported_content_type","","Create response for unsupported content type.",2,{"inputs":[],"output":{"name":"response"}}],[11,"method_not_allowed","","Create response for disallowed method used.",2,{"inputs":[],"output":{"name":"response"}}],[11,"drop","jsonrpc_http_server::handler","",3,null],[11,"new","","Create new request handler.",3,{"inputs":[{"name":"arc"},{"name":"option"},{"name":"option"},{"name":"panichandler"}],"output":{"name":"serverhandler"}}],[11,"on_request","","",3,null],[11,"on_request_readable","","This event occurs each time the `Request` is ready to be read from.",3,null],[11,"on_response","","This event occurs after the first time this handled signals `Next::write()`.",3,null],[11,"on_response_writable","","This event occurs each time the `Response` is ready to be written to.",3,null],[11,"fmt","jsonrpc_http_server","",4,null],[11,"from","","",4,{"inputs":[{"name":"error"}],"output":{"name":"rpcservererror"}}],[11,"into","","",5,null],[11,"from","","",5,{"inputs":[{"name":"option"}],"output":{"name":"domainsvalidation"}}],[11,"addr","","Returns address of this server",6,null],[11,"drop","","",6,null],[3,"ServerBuilder","ethcore_rpc","Convenient JSON-RPC HTTP Server builder.",null,null],[3,"Server","","jsonrpc http server instance",null,null],[4,"RpcServerError","","RPC Server startup error.",null,null],[13,"IoError","","IO Error",4,null],[13,"Other","","Other Error (hyper)",4,null],[3,"ConfirmationsQueue","","Queue for all unconfirmed requests.",null,null],[3,"NetworkSettings","","Networking &amp; RPC settings",null,null],[12,"name","","Node name",7,null],[12,"chain","","Name of the chain we are connected to",7,null],[12,"min_peers","","Min number of peers",7,null],[12,"max_peers","","Max number of peers",7,null],[12,"network_port","","Networking port",7,null],[12,"rpc_enabled","","Is JSON-RPC server enabled?",7,null],[12,"rpc_interface","","Interface that JSON-RPC listens on",7,null],[12,"rpc_port","","Port for JSON-RPC server",7,null],[3,"RpcServer","","Http server.",null,null],[0,"v1","","Ethcore rpc v1.",null,null],[3,"Web3Client","ethcore_rpc::v1","Web3 rpc implementation.",null,null],[3,"EthClient","","Eth rpc implementation.",null,null],[3,"EthClientOptions","","Eth RPC options",null,null],[12,"allow_pending_receipt_query","","Returns receipt from pending blocks",8,null],[12,"send_block_number_in_get_work","","Send additional block number when asking for work",8,null],[3,"EthFilterClient","","Eth filter rpc implementation.",null,null],[3,"EthSigningUnsafeClient","","Implementation of functions that require signing when no trusted signer is used.",null,null],[3,"EthSigningQueueClient","","Implementation of functions that require signing when no trusted signer is used.",null,null],[3,"NetClient","","Net rpc implementation.",null,null],[3,"PersonalClient","","Account management (personal) rpc implementation.",null,null],[3,"SignerClient","","Transactions confirmation (personal) rpc implementation.",null,null],[3,"EthcoreClient","","Ethcore implementation.",null,null],[3,"EthcoreSetClient","","Ethcore-specific rpc interface for operations altering the settings.",null,null],[3,"TracesClient","","Traces api implementation.",null,null],[3,"RpcClient","","RPC generic methods implementation.",null,null],[3,"ConfirmationsQueue","","Queue for all unconfirmed requests.",null,null],[3,"NetworkSettings","","Networking &amp; RPC settings",null,null],[12,"name","","Node name",7,null],[12,"chain","","Name of the chain we are connected to",7,null],[12,"min_peers","","Min number of peers",7,null],[12,"max_peers","","Max number of peers",7,null],[12,"network_port","","Networking port",7,null],[12,"rpc_enabled","","Is JSON-RPC server enabled?",7,null],[12,"rpc_interface","","Interface that JSON-RPC listens on",7,null],[12,"rpc_port","","Port for JSON-RPC server",7,null],[5,"from_params_default_second","","Deserialize request parameters with optional second parameter `BlockNumber` defaulting to `BlockNumber::Latest`.",null,{"inputs":[{"name":"params"}],"output":{"name":"result"}}],[5,"from_params_default_third","","Deserialize request parameters with optional third parameter `BlockNumber` defaulting to `BlockNumber::Latest`.",null,{"inputs":[{"name":"params"}],"output":{"name":"result"}}],[5,"request_rejected_error","","Error returned when request is rejected (in Trusted Signer).",null,{"inputs":[],"output":{"name":"error"}}],[5,"request_not_found_error","","Error returned when request is not found in queue.",null,{"inputs":[],"output":{"name":"error"}}],[11,"new","","Creates new Web3Client.",9,{"inputs":[],"output":{"name":"self"}}],[11,"client_version","","",9,null],[11,"sha3","","",9,null],[11,"default","","",8,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates new EthClient.",10,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"ethclientoptions"}],"output":{"name":"ethclient"}}],[11,"protocol_version","","",10,null],[11,"syncing","","",10,null],[11,"author","","",10,null],[11,"is_mining","","",10,null],[11,"hashrate","","",10,null],[11,"gas_price","","",10,null],[11,"accounts","","",10,null],[11,"block_number","","",10,null],[11,"balance","","",10,null],[11,"storage_at","","",10,null],[11,"transaction_count","","",10,null],[11,"block_transaction_count_by_hash","","",10,null],[11,"block_transaction_count_by_number","","",10,null],[11,"block_uncles_count_by_hash","","",10,null],[11,"block_uncles_count_by_number","","",10,null],[11,"code_at","","",10,null],[11,"block_by_hash","","",10,null],[11,"block_by_number","","",10,null],[11,"transaction_by_hash","","",10,null],[11,"transaction_by_block_hash_and_index","","",10,null],[11,"transaction_by_block_number_and_index","","",10,null],[11,"transaction_receipt","","",10,null],[11,"uncle_by_block_hash_and_index","","",10,null],[11,"uncle_by_block_number_and_index","","",10,null],[11,"compilers","","",10,null],[11,"logs","","",10,null],[11,"work","","",10,null],[11,"submit_work","","",10,null],[11,"submit_hashrate","","",10,null],[11,"send_raw_transaction","","",10,null],[11,"call","","",10,null],[11,"estimate_gas","","",10,null],[11,"compile_lll","","",10,null],[11,"compile_serpent","","",10,null],[11,"compile_solidity","","",10,null],[11,"new","","Creates new Eth filter client.",11,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"new_filter","","",11,null],[11,"new_block_filter","","",11,null],[11,"new_pending_transaction_filter","","",11,null],[11,"filter_changes","","",11,null],[11,"filter_logs","","",11,null],[11,"uninstall_filter","","",11,null],[11,"new","","Creates a new signing queue client given shared signing queue.",12,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"sign","","",12,null],[11,"post_sign","","",12,null],[11,"send_transaction","","",12,null],[11,"post_transaction","","",12,null],[11,"check_request","","",12,null],[11,"new","","Creates new EthClient.",13,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"sign","","",13,null],[11,"send_transaction","","",13,null],[11,"post_sign","","",13,null],[11,"post_transaction","","",13,null],[11,"check_request","","",13,null],[11,"new","","Creates new NetClient.",14,{"inputs":[{"name":"arc"}],"output":{"name":"self"}}],[11,"version","","",14,null],[11,"peer_count","","",14,null],[11,"is_listening","","",14,null],[11,"new","","Creates new PersonalClient",15,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"option"},{"name":"bool"}],"output":{"name":"self"}}],[11,"signer_enabled","","",15,null],[11,"accounts","","",15,null],[11,"new_account","","",15,null],[11,"unlock_account","","",15,null],[11,"sign_and_send_transaction","","",15,null],[11,"set_account_name","","",15,null],[11,"set_account_meta","","",15,null],[11,"accounts_info","","",15,null],[11,"new","","Create new instance of signer client.",16,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"requests_to_confirm","","",16,null],[11,"confirm_request","","",16,null],[11,"reject_request","","",16,null],[11,"new","","Creates new `EthcoreClient`.",17,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"arc"},{"name":"option"}],"output":{"name":"self"}}],[11,"transactions_limit","","",17,null],[11,"min_gas_price","","",17,null],[11,"extra_data","","",17,null],[11,"gas_floor_target","","",17,null],[11,"gas_ceil_target","","",17,null],[11,"dev_logs","","",17,null],[11,"dev_logs_levels","","",17,null],[11,"net_chain","","",17,null],[11,"net_max_peers","","",17,null],[11,"net_port","","",17,null],[11,"node_name","","",17,null],[11,"rpc_settings","","",17,null],[11,"default_extra_data","","",17,null],[11,"gas_price_statistics","","",17,null],[11,"unsigned_transactions_count","","",17,null],[11,"new","","Creates new `EthcoreSetClient`.",18,{"inputs":[{"name":"arc"},{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"set_min_gas_price","","",18,null],[11,"set_gas_floor_target","","",18,null],[11,"set_gas_ceil_target","","",18,null],[11,"set_extra_data","","",18,null],[11,"set_author","","",18,null],[11,"set_transactions_limit","","",18,null],[11,"set_tx_gas_limit","","",18,null],[11,"add_reserved_peer","","",18,null],[11,"remove_reserved_peer","","",18,null],[11,"drop_non_reserved_peers","","",18,null],[11,"accept_non_reserved_peers","","",18,null],[11,"start_network","","",18,null],[11,"stop_network","","",18,null],[11,"new","","Creates new Traces client.",19,{"inputs":[{"name":"arc"},{"name":"arc"}],"output":{"name":"self"}}],[11,"filter","","",19,null],[11,"block_traces","","",19,null],[11,"transaction_traces","","",19,null],[11,"trace","","",19,null],[11,"call","","",19,null],[11,"raw_transaction","","",19,null],[11,"replay_transaction","","",19,null],[11,"new","","Creates new `RpcClient`.",20,{"inputs":[{"name":"btreemap"}],"output":{"name":"self"}}],[11,"rpc_modules","","",20,null],[11,"modules","","",20,null],[11,"default","ethcore_rpc","",21,{"inputs":[],"output":{"name":"self"}}],[11,"start_listening","","Blocks the thread and starts listening for notifications regarding all actions in the queue.\nFor each event, `listener` callback will be invoked.\nThis method can be used only once (only single consumer of events can exist).",21,null],[11,"finish","","Notifies consumer that the communcation is over.\nNo more events will be sent after this function is invoked.",21,null],[11,"drop","","",21,null],[11,"add_request","","",21,null],[11,"peek","","",21,null],[11,"request_rejected","","",21,null],[11,"request_confirmed","","",21,null],[11,"requests","","",21,null],[11,"len","","",21,null],[11,"is_empty","","",21,null],[11,"clone","","",7,null],[11,"eq","","",7,null],[11,"ne","","",7,null],[11,"fmt","","",7,null],[11,"default","","",7,{"inputs":[],"output":{"name":"self"}}],[0,"traits","ethcore_rpc::v1","Ethereum rpc interfaces.",null,null],[0,"web3","ethcore_rpc::v1::traits","Web3 rpc interface.",null,null],[8,"Web3","ethcore_rpc::v1::traits::web3","Web3 rpc interface.",null,null],[10,"client_version","","Returns current client version.",22,null],[10,"sha3","","Returns sha3 of the given data",22,null],[11,"to_delegate","","Should be used to convert object to io delegate.",22,null],[0,"eth","ethcore_rpc::v1::traits","Eth rpc interface.",null,null],[8,"Eth","ethcore_rpc::v1::traits::eth","Eth rpc interface.",null,null],[10,"protocol_version","","Returns protocol version.",23,null],[10,"syncing","","Returns an object with data about the sync status or false. (wtf?)",23,null],[10,"hashrate","","Returns the number of hashes per second that the node is mining with.",23,null],[10,"author","","Returns block author.",23,null],[10,"is_mining","","Returns true if client is actively mining new blocks.",23,null],[10,"gas_price","","Returns current gas_price.",23,null],[10,"accounts","","Returns accounts list.",23,null],[10,"block_number","","Returns highest block number.",23,null],[10,"balance","","Returns balance of the given account.",23,null],[10,"storage_at","","Returns content of the storage at given address.",23,null],[10,"block_by_hash","","Returns block with given hash.",23,null],[10,"block_by_number","","Returns block with given number.",23,null],[10,"transaction_count","","Returns the number of transactions sent from given address at given time (block number).",23,null],[10,"block_transaction_count_by_hash","","Returns the number of transactions in a block with given hash.",23,null],[10,"block_transaction_count_by_number","","Returns the number of transactions in a block with given block number.",23,null],[10,"block_uncles_count_by_hash","","Returns the number of uncles in a block with given hash.",23,null],[10,"block_uncles_count_by_number","","Returns the number of uncles in a block with given block number.",23,null],[10,"code_at","","Returns the code at given address at given time (block number).",23,null],[10,"send_raw_transaction","","Sends signed transaction.",23,null],[10,"call","","Call contract.",23,null],[10,"estimate_gas","","Estimate gas needed for execution of given contract.",23,null],[10,"transaction_by_hash","","Get transaction by its hash.",23,null],[10,"transaction_by_block_hash_and_index","","Returns transaction at given block hash and index.",23,null],[10,"transaction_by_block_number_and_index","","Returns transaction by given block number and index.",23,null],[10,"transaction_receipt","","Returns transaction receipt.",23,null],[10,"uncle_by_block_hash_and_index","","Returns an uncles at given block and index.",23,null],[10,"uncle_by_block_number_and_index","","Returns an uncles at given block and index.",23,null],[10,"compilers","","Returns available compilers.",23,null],[10,"compile_lll","","Compiles lll code.",23,null],[10,"compile_solidity","","Compiles solidity.",23,null],[10,"compile_serpent","","Compiles serpent.",23,null],[10,"logs","","Returns logs matching given filter object.",23,null],[10,"work","","Returns the hash of the current block, the seedHash, and the boundary condition to be met.",23,null],[10,"submit_work","","Used for submitting a proof-of-work solution.",23,null],[10,"submit_hashrate","","Used for submitting mining hashrate.",23,null],[11,"to_delegate","","Should be used to convert object to io delegate.",23,null],[8,"EthFilter","","Eth filters rpc api (polling).",null,null],[10,"new_filter","","Returns id of new filter.",24,null],[10,"new_block_filter","","Returns id of new block filter.",24,null],[10,"new_pending_transaction_filter","","Returns id of new block filter.",24,null],[10,"filter_changes","","Returns filter changes since last poll.",24,null],[10,"filter_logs","","Returns all logs matching given filter (in a range &#39;from&#39; - &#39;to&#39;).",24,null],[10,"uninstall_filter","","Uninstalls filter.",24,null],[11,"to_delegate","","Should be used to convert object to io delegate.",24,null],[8,"EthSigning","","Signing methods implementation relying on unlocked accounts.",null,null],[10,"sign","","Signs the data with given address signature.",25,null],[10,"post_sign","","Posts sign request asynchronously.\nWill return a confirmation ID for later use with check_transaction.",25,null],[10,"send_transaction","","Sends transaction; will block for 20s to try to return the\ntransaction hash.\nIf it cannot yet be signed, it will return a transaction ID for\nlater use with check_transaction.",25,null],[10,"post_transaction","","Posts transaction asynchronously.\nWill return a transaction ID for later use with check_transaction.",25,null],[10,"check_request","","Checks the progress of a previously posted request (transaction/sign).\nShould be given a valid send_transaction ID.\nReturns the transaction hash, the zero hash (not yet available),\nor the signature,\nor an error.",25,null],[11,"to_delegate","","Should be used to convert object to io delegate.",25,null],[0,"net","ethcore_rpc::v1::traits","Net rpc interface.",null,null],[8,"Net","ethcore_rpc::v1::traits::net","Net rpc interface.",null,null],[10,"version","","Returns protocol version.",26,null],[10,"peer_count","","Returns number of peers connected to node.",26,null],[10,"is_listening","","Returns true if client is actively listening for network connections.\nOtherwise false.",26,null],[11,"to_delegate","","Should be used to convert object to io delegate.",26,null],[0,"personal","ethcore_rpc::v1::traits","Personal rpc interface.",null,null],[8,"Personal","ethcore_rpc::v1::traits::personal","Personal rpc interface.",null,null],[10,"accounts","","Lists all stored accounts",27,null],[10,"new_account","","Creates new account (it becomes new current unlocked account)",27,null],[10,"unlock_account","","Unlocks specified account for use (can only be one unlocked account at one moment)",27,null],[10,"sign_and_send_transaction","","Sends transaction and signs it in single call. The account is not unlocked in such case.",27,null],[10,"signer_enabled","","Returns `true` if Trusted Signer is enabled, `false` otherwise.",27,null],[10,"set_account_name","","Set an account&#39;s name.",27,null],[10,"set_account_meta","","Set an account&#39;s metadata string.",27,null],[10,"accounts_info","","Returns accounts information.",27,null],[11,"to_delegate","","Should be used to convert object to io delegate.",27,null],[8,"PersonalSigner","","Personal extension for confirmations rpc interface.",null,null],[10,"requests_to_confirm","","Returns a list of items to confirm.",28,null],[10,"confirm_request","","Confirm specific request.",28,null],[10,"reject_request","","Reject the confirmation request.",28,null],[11,"to_delegate","","Should be used to convert object to io delegate.",28,null],[0,"ethcore","ethcore_rpc::v1::traits","Ethcore-specific rpc interface.",null,null],[8,"Ethcore","ethcore_rpc::v1::traits::ethcore","Ethcore-specific rpc interface.",null,null],[10,"transactions_limit","","Returns current transactions limit.",29,null],[10,"extra_data","","Returns mining extra data.",29,null],[10,"gas_floor_target","","Returns mining gas floor target.",29,null],[10,"gas_ceil_target","","Returns mining gas floor cap.",29,null],[10,"min_gas_price","","Returns minimal gas price for transaction to be included in queue.",29,null],[10,"dev_logs","","Returns latest logs",29,null],[10,"dev_logs_levels","","Returns logs levels",29,null],[10,"net_chain","","Returns chain name",29,null],[10,"net_max_peers","","Returns max peers",29,null],[10,"net_port","","Returns network port",29,null],[10,"rpc_settings","","Returns rpc settings",29,null],[10,"node_name","","Returns node name",29,null],[10,"default_extra_data","","Returns default extra data",29,null],[10,"gas_price_statistics","","Returns distribution of gas price in latest blocks.",29,null],[10,"unsigned_transactions_count","","Returns number of unsigned transactions waiting in the signer queue (if signer enabled)\nReturns error when signer is disabled",29,null],[11,"to_delegate","","Should be used to convert object to io delegate.",29,null],[0,"ethcore_set","ethcore_rpc::v1::traits","Ethcore-specific rpc interface for operations altering the settings.",null,null],[8,"EthcoreSet","ethcore_rpc::v1::traits::ethcore_set","Ethcore-specific rpc interface for operations altering the settings.",null,null],[10,"set_min_gas_price","","Sets new minimal gas price for mined blocks.",30,null],[10,"set_gas_floor_target","","Sets new gas floor target for mined blocks.",30,null],[10,"set_gas_ceil_target","","Sets new gas ceiling target for mined blocks.",30,null],[10,"set_extra_data","","Sets new extra data for mined blocks.",30,null],[10,"set_author","","Sets new author for mined block.",30,null],[10,"set_transactions_limit","","Sets the limits for transaction queue.",30,null],[10,"set_tx_gas_limit","","Sets the maximum amount of gas a single transaction may consume.",30,null],[10,"add_reserved_peer","","Add a reserved peer.",30,null],[10,"remove_reserved_peer","","Remove a reserved peer.",30,null],[10,"drop_non_reserved_peers","","Drop all non-reserved peers.",30,null],[10,"accept_non_reserved_peers","","Accept non-reserved peers (default behavior)",30,null],[10,"start_network","","Start the network.",30,null],[10,"stop_network","","Stop the network.",30,null],[11,"to_delegate","","Should be used to convert object to io delegate.",30,null],[0,"traces","ethcore_rpc::v1::traits","Traces specific rpc interface.",null,null],[8,"Traces","ethcore_rpc::v1::traits::traces","Traces specific rpc interface.",null,null],[10,"filter","","Returns traces matching given filter.",31,null],[10,"trace","","Returns transaction trace at given index.",31,null],[10,"transaction_traces","","Returns all traces of given transaction.",31,null],[10,"block_traces","","Returns all traces produced at given block.",31,null],[10,"call","","Executes the given call and returns a number of possible traces for it.",31,null],[10,"raw_transaction","","Executes the given raw transaction and returns a number of possible traces for it.",31,null],[10,"replay_transaction","","Executes the transaction with the given hash and returns a number of possible traces for it.",31,null],[11,"to_delegate","","Should be used to convert object to io delegate.",31,null],[0,"rpc","ethcore_rpc::v1::traits","RPC interface.",null,null],[8,"Rpc","ethcore_rpc::v1::traits::rpc","RPC Interface.",null,null],[10,"modules","","Returns supported modules for Geth 1.3.6",32,null],[10,"rpc_modules","","Returns supported modules for Geth 1.4.0",32,null],[11,"to_delegate","","Should be used to convert object to io delegate.",32,null],[0,"tests","ethcore_rpc::v1","RPC unit test moduleS",null,null],[0,"helpers","ethcore_rpc::v1::tests","Test rpc services.",null,null],[3,"Config","ethcore_rpc::v1::tests::helpers","TestSyncProvider config.",null,null],[12,"network_id","","Protocol version.",33,null],[12,"num_peers","","Number of peers.",33,null],[3,"TestSyncProvider","","Test sync provider.",null,null],[12,"status","","Sync status.",34,null],[3,"TestMinerService","","Test miner service.",null,null],[12,"imported_transactions","","Imported transactions.",35,null],[12,"latest_closed_block","","Latest closed block.",35,null],[12,"pending_transactions","","Pre-existed pending transactions",35,null],[12,"pending_receipts","","Pre-existed pending receipts",35,null],[12,"last_nonces","","Last nonces.",35,null],[11,"new","","Creates new sync provider.",34,{"inputs":[{"name":"config"}],"output":{"name":"self"}}],[11,"status","","",34,null],[11,"default","","",35,{"inputs":[],"output":{"name":"testminerservice"}}],[11,"status","","Returns miner&#39;s status.",35,null],[11,"set_author","","",35,null],[11,"set_extra_data","","",35,null],[11,"set_gas_floor_target","","Set the lower gas limit we wish to target when sealing a new block.",35,null],[11,"set_gas_ceil_target","","Set the upper gas limit we wish to target when sealing a new block.",35,null],[11,"set_minimal_gas_price","","",35,null],[11,"set_transactions_limit","","",35,null],[11,"set_tx_gas_limit","","",35,null],[11,"transactions_limit","","",35,null],[11,"author","","",35,null],[11,"minimal_gas_price","","",35,null],[11,"extra_data","","",35,null],[11,"gas_floor_target","","",35,null],[11,"gas_ceil_target","","",35,null],[11,"import_external_transactions","","Imports transactions to transaction queue.",35,null],[11,"import_own_transaction","","Imports transactions to transaction queue.",35,null],[11,"pending_transactions_hashes","","Returns hashes of transactions currently in pending",35,null],[11,"clear_and_reset","","Removes all transactions from the queue and restart mining operation.",35,null],[11,"chain_new_blocks","","Called when blocks are imported to chain, updates transactions queue.",35,null],[11,"update_sealing","","New chain head event. Restart mining operation.",35,null],[11,"map_sealing_work","","",35,null],[11,"transaction","","",35,null],[11,"all_transactions","","",35,null],[11,"pending_transactions","","",35,null],[11,"pending_receipts","","",35,null],[11,"last_nonce","","",35,null],[11,"is_sealing","","",35,null],[11,"submit_seal","","Submit `seal` as a valid solution for the header of `pow_hash`.\nWill check the seal, but not actually insert the block into the chain.",35,null],[11,"balance","","",35,null],[11,"call","","",35,null],[11,"storage_at","","",35,null],[11,"nonce","","",35,null],[11,"code","","",35,null],[0,"types","ethcore_rpc::v1","Structures used in RPC communication",null,null],[3,"Bytes","ethcore_rpc::v1::types","Wrapper structure around vector of bytes.",null,null],[12,"0","","",36,null],[3,"Block","","Block representation",null,null],[12,"hash","","Hash of the block",37,null],[12,"parent_hash","","Hash of the parent",37,null],[12,"uncles_hash","","Hash of the uncles",37,null],[12,"author","","Authors address",37,null],[12,"miner","","?",37,null],[12,"state_root","","State root hash",37,null],[12,"transactions_root","","Transactions root hash",37,null],[12,"receipts_root","","Transactions receipts root hash",37,null],[12,"number","","Block number",37,null],[12,"gas_used","","Gas Used",37,null],[12,"gas_limit","","Gas Limit",37,null],[12,"extra_data","","Extra data",37,null],[12,"logs_bloom","","Logs bloom",37,null],[12,"timestamp","","Timestamp",37,null],[12,"difficulty","","Difficulty",37,null],[12,"total_difficulty","","Total difficulty",37,null],[12,"seal_fields","","Seal fields",37,null],[12,"uncles","","Uncles&#39; hashes",37,null],[12,"transactions","","Transactions",37,null],[12,"size","","Size in bytes",37,null],[3,"CallRequest","","Call request",null,null],[12,"from","","From",38,null],[12,"to","","To",38,null],[12,"gas_price","","Gas Price",38,null],[12,"gas","","Gas",38,null],[12,"value","","Value",38,null],[12,"data","","Data",38,null],[12,"nonce","","Nonce",38,null],[3,"ConfirmationRequest","","Confirmation waiting in a queue",null,null],[12,"id","","Id of this confirmation",39,null],[12,"payload","","Payload",39,null],[3,"TransactionModification","","Possible modifications to the confirmed transaction sent by `Trusted Signer`",null,null],[12,"gas_price","","Modified gas price",40,null],[3,"Filter","","Filter",null,null],[12,"from_block","","From Block",41,null],[12,"to_block","","To Block",41,null],[12,"address","","Address",41,null],[12,"topics","","Topics",41,null],[3,"H64","","Hash serialization",null,null],[3,"H160","","Hash serialization",null,null],[3,"H256","","Hash serialization",null,null],[3,"H520","","Hash serialization",null,null],[3,"H2048","","Hash serialization",null,null],[3,"Index","","Represents usize.",null,null],[3,"Log","","Log",null,null],[12,"address","","H160",42,null],[12,"topics","","Topics",42,null],[12,"data","","Data",42,null],[12,"block_hash","","Block Hash",42,null],[12,"block_number","","Block Number",42,null],[12,"transaction_hash","","Transaction Hash",42,null],[12,"transaction_index","","Transaction Index",42,null],[12,"log_index","","Log Index",42,null],[12,"log_type","","Log Type",42,null],[3,"SyncInfo","","Sync info",null,null],[12,"starting_block","","Starting block",43,null],[12,"current_block","","Current block",43,null],[12,"highest_block","","Highest block seen so far",43,null],[3,"Transaction","","Transaction",null,null],[12,"hash","","Hash",44,null],[12,"nonce","","Nonce",44,null],[12,"block_hash","","Block hash",44,null],[12,"block_number","","Block number",44,null],[12,"transaction_index","","Transaction Index",44,null],[12,"from","","Sender",44,null],[12,"to","","Recipient",44,null],[12,"value","","Transfered value",44,null],[12,"gas_price","","Gas Price",44,null],[12,"gas","","Gas",44,null],[12,"input","","Data",44,null],[12,"creates","","Creates contract",44,null],[12,"raw","","Raw transaction data",44,null],[3,"TransactionRequest","","Transaction request coming from RPC",null,null],[12,"from","","Sender",45,null],[12,"to","","Recipient",45,null],[12,"gas_price","","Gas Price",45,null],[12,"gas","","Gas",45,null],[12,"value","","Value of transaction in wei",45,null],[12,"data","","Additional data sent with transaction",45,null],[12,"nonce","","Transaction&#39;s nonce",45,null],[3,"Receipt","","Receipt",null,null],[12,"transaction_hash","","Transaction Hash",46,null],[12,"transaction_index","","Transaction index",46,null],[12,"block_hash","","Block hash",46,null],[12,"block_number","","Block number",46,null],[12,"cumulative_gas_used","","Cumulative gas used",46,null],[12,"gas_used","","Gas used",46,null],[12,"contract_address","","Contract address",46,null],[12,"logs","","Logs",46,null],[3,"LocalizedTrace","","Trace",null,null],[3,"TraceResults","","A diff of some chunk of memory.",null,null],[12,"output","","The output of the call/create",47,null],[12,"trace","","The transaction trace.",47,null],[12,"vm_trace","","The transaction trace.",47,null],[12,"state_diff","","The transaction trace.",47,null],[3,"TraceFilter","","Trace filter",null,null],[12,"from_block","","From block",48,null],[12,"to_block","","To block",48,null],[12,"from_address","","From address",48,null],[12,"to_address","","To address",48,null],[3,"U256","","Uint serialization.",null,null],[4,"BlockTransactions","","Block Transactions",null,null],[13,"Hashes","","Only hashes",49,null],[13,"Full","","Full transactions",49,null],[4,"BlockNumber","","Represents rpc api block number param.",null,null],[13,"Num","","Number",50,null],[13,"Latest","","Latest block",50,null],[13,"Earliest","","Earliest block (genesis)",50,null],[13,"Pending","","Pending block (being mined)",50,null],[4,"ConfirmationPayload","","Confirmation payload, i.e. the thing to be confirmed",null,null],[13,"Transaction","","Transaction",51,null],[13,"Sign","","Signature",51,null],[4,"SyncStatus","","Sync status",null,null],[13,"Info","","Info when syncing",52,null],[13,"None","","Not syncing",52,null],[11,"fmt","","",36,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"default","","",36,{"inputs":[],"output":{"name":"bytes"}}],[11,"hash","","",36,null],[11,"clone","","",36,null],[11,"new","","Simple constructor.",36,{"inputs":[{"name":"vec"}],"output":{"name":"bytes"}}],[11,"to_vec","","Convert back to vector",36,null],[11,"from","","",36,{"inputs":[{"name":"vec"}],"output":{"name":"bytes"}}],[11,"into","","",36,null],[11,"serialize","","",36,null],[11,"deserialize","","",36,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",49,null],[11,"serialize","","",49,null],[11,"fmt","","",37,null],[11,"fmt","","",50,null],[11,"eq","","",50,null],[11,"ne","","",50,null],[11,"clone","","",50,null],[11,"deserialize","","",50,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"into","","",50,null],[11,"fmt","","",38,null],[11,"default","","",38,{"inputs":[],"output":{"name":"callrequest"}}],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"into","","",38,null],[11,"fmt","","",39,null],[11,"clone","","",39,null],[11,"eq","","",39,null],[11,"ne","","",39,null],[11,"hash","","",39,null],[11,"from","","",39,{"inputs":[{"name":"confirmationrequest"}],"output":{"name":"self"}}],[11,"fmt","","",51,null],[11,"clone","","",51,null],[11,"eq","","",51,null],[11,"ne","","",51,null],[11,"hash","","",51,null],[11,"from","","",51,{"inputs":[{"name":"confirmationpayload"}],"output":{"name":"self"}}],[11,"fmt","","",40,null],[11,"eq","","",40,null],[11,"ne","","",40,null],[11,"fmt","","",41,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"clone","","",41,null],[11,"into","","",41,null],[11,"default","","",53,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",53,null],[11,"from","","",53,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_str","","",53,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",53,null],[11,"eq","","",53,null],[11,"partial_cmp","","",53,null],[11,"cmp","","",53,null],[11,"hash","","",53,null],[11,"clone","","",53,null],[11,"serialize","","",53,null],[11,"deserialize","","",53,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",54,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",54,null],[11,"from","","",54,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_str","","",54,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",54,null],[11,"eq","","",54,null],[11,"partial_cmp","","",54,null],[11,"cmp","","",54,null],[11,"hash","","",54,null],[11,"clone","","",54,null],[11,"serialize","","",54,null],[11,"deserialize","","",54,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",55,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",55,null],[11,"from","","",55,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_str","","",55,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",55,null],[11,"eq","","",55,null],[11,"partial_cmp","","",55,null],[11,"cmp","","",55,null],[11,"hash","","",55,null],[11,"clone","","",55,null],[11,"serialize","","",55,null],[11,"deserialize","","",55,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",56,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",56,null],[11,"from","","",56,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_str","","",56,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",56,null],[11,"eq","","",56,null],[11,"partial_cmp","","",56,null],[11,"cmp","","",56,null],[11,"hash","","",56,null],[11,"clone","","",56,null],[11,"serialize","","",56,null],[11,"deserialize","","",56,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",57,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",57,null],[11,"from","","",57,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_str","","",57,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",57,null],[11,"eq","","",57,null],[11,"partial_cmp","","",57,null],[11,"cmp","","",57,null],[11,"hash","","",57,null],[11,"clone","","",57,null],[11,"serialize","","",57,null],[11,"deserialize","","",57,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",58,null],[11,"eq","","",58,null],[11,"ne","","",58,null],[11,"value","","Convert to usize",58,null],[11,"deserialize","","",58,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",42,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"hash","","",42,null],[11,"clone","","",42,null],[11,"from","","",42,{"inputs":[{"name":"localizedlogentry"}],"output":{"name":"log"}}],[11,"from","","",42,{"inputs":[{"name":"logentry"}],"output":{"name":"log"}}],[11,"default","","",43,{"inputs":[],"output":{"name":"syncinfo"}}],[11,"fmt","","",43,null],[11,"eq","","",43,null],[11,"ne","","",43,null],[11,"fmt","","",52,null],[11,"eq","","",52,null],[11,"ne","","",52,null],[11,"serialize","","",52,null],[11,"fmt","","",44,null],[11,"default","","",44,{"inputs":[],"output":{"name":"transaction"}}],[11,"from","","",44,{"inputs":[{"name":"localizedtransaction"}],"output":{"name":"transaction"}}],[11,"from","","",44,{"inputs":[{"name":"signedtransaction"}],"output":{"name":"transaction"}}],[11,"fmt","","",45,null],[11,"clone","","",45,null],[11,"default","","",45,{"inputs":[],"output":{"name":"transactionrequest"}}],[11,"eq","","",45,null],[11,"ne","","",45,null],[11,"hash","","",45,null],[11,"from","","",45,{"inputs":[{"name":"transactionrequest"}],"output":{"name":"self"}}],[11,"from","","",45,{"inputs":[{"name":"filledtransactionrequest"}],"output":{"name":"self"}}],[11,"into","","",45,null],[11,"fmt","","",46,null],[11,"from","","",46,{"inputs":[{"name":"localizedreceipt"}],"output":{"name":"self"}}],[11,"from","","",46,{"inputs":[{"name":"ethreceipt"}],"output":{"name":"self"}}],[11,"fmt","","",59,null],[11,"from","","",59,{"inputs":[{"name":"ethlocalizedtrace"}],"output":{"name":"self"}}],[11,"fmt","","",47,null],[11,"from","","",47,{"inputs":[{"name":"executed"}],"output":{"name":"self"}}],[11,"fmt","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"into","","",48,null],[11,"hash","","",60,null],[11,"eq","","",60,null],[11,"ne","","",60,null],[11,"clone","","",60,null],[11,"default","","",60,{"inputs":[],"output":{"name":"u256"}}],[11,"fmt","","",60,null],[11,"from","","",60,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"from_str","","",60,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"into","","",60,null],[11,"serialize","","",60,null],[11,"deserialize","","",60,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"SigningQueue","ethcore_rpc::v1","A queue of transactions awaiting to be confirmed and signed.",null,null],[10,"add_request","","Add new request to the queue.\nReturns a `ConfirmationPromise` that can be used to await for resolution of given request.",61,null],[10,"request_rejected","","Removes a request from the queue.\nNotifies possible token holders that request was rejected.",61,null],[10,"request_confirmed","","Removes a request from the queue.\nNotifies possible token holders that request was confirmed and given hash was assigned.",61,null],[10,"peek","","Returns a request if it is contained in the queue.",61,null],[10,"requests","","Return copy of all the requests in the queue.",61,null],[10,"len","","Returns number of requests awaiting confirmation.",61,null],[10,"is_empty","","Returns true if there are no requests awaiting confirmation.",61,null],[8,"SigningQueue","ethcore_rpc","A queue of transactions awaiting to be confirmed and signed.",null,null],[10,"add_request","","Add new request to the queue.\nReturns a `ConfirmationPromise` that can be used to await for resolution of given request.",61,null],[10,"request_rejected","","Removes a request from the queue.\nNotifies possible token holders that request was rejected.",61,null],[10,"request_confirmed","","Removes a request from the queue.\nNotifies possible token holders that request was confirmed and given hash was assigned.",61,null],[10,"peek","","Returns a request if it is contained in the queue.",61,null],[10,"requests","","Return copy of all the requests in the queue.",61,null],[10,"len","","Returns number of requests awaiting confirmation.",61,null],[10,"is_empty","","Returns true if there are no requests awaiting confirmation.",61,null],[8,"Extendable","","An object that can be extended with `IoDelegates`",null,null],[10,"add_delegate","","Add `Delegate` to this object.",62,null],[11,"add_delegate","","Add io delegate.",63,null],[11,"new","","Construct new http server object.",63,{"inputs":[],"output":{"name":"rpcserver"}}],[11,"start_http","","Start http server asynchronously and returns result with `Server` handle on success or an error.",63,null],[11,"start_ipc","","Start ipc server asynchronously and returns result with `Server` handle on success or an error.",63,null]],"paths":[[3,"ServerBuilder"],[3,"Request"],[3,"Response"],[3,"ServerHandler"],[4,"RpcServerError"],[4,"DomainsValidation"],[3,"Server"],[3,"NetworkSettings"],[3,"EthClientOptions"],[3,"Web3Client"],[3,"EthClient"],[3,"EthFilterClient"],[3,"EthSigningQueueClient"],[3,"EthSigningUnsafeClient"],[3,"NetClient"],[3,"PersonalClient"],[3,"SignerClient"],[3,"EthcoreClient"],[3,"EthcoreSetClient"],[3,"TracesClient"],[3,"RpcClient"],[3,"ConfirmationsQueue"],[8,"Web3"],[8,"Eth"],[8,"EthFilter"],[8,"EthSigning"],[8,"Net"],[8,"Personal"],[8,"PersonalSigner"],[8,"Ethcore"],[8,"EthcoreSet"],[8,"Traces"],[8,"Rpc"],[3,"Config"],[3,"TestSyncProvider"],[3,"TestMinerService"],[3,"Bytes"],[3,"Block"],[3,"CallRequest"],[3,"ConfirmationRequest"],[3,"TransactionModification"],[3,"Filter"],[3,"Log"],[3,"SyncInfo"],[3,"Transaction"],[3,"TransactionRequest"],[3,"Receipt"],[3,"TraceResults"],[3,"TraceFilter"],[4,"BlockTransactions"],[4,"BlockNumber"],[4,"ConfirmationPayload"],[4,"SyncStatus"],[3,"H64"],[3,"H160"],[3,"H256"],[3,"H520"],[3,"H2048"],[3,"Index"],[3,"LocalizedTrace"],[3,"U256"],[8,"SigningQueue"],[8,"Extendable"],[3,"RpcServer"]]};
searchIndex["ethsync"] = {"doc":"Blockchain sync module\nImplements ethereum protocol version 63 as specified here:\nhttps://github.com/ethereum/wiki/wiki/Ethereum-Wire-Protocol","items":[[5,"is_valid_node_url","ethsync","Check if node url is valid",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[11,"parse","ethcore_network","Attempt to parse the peer mode from a string.",0,{"inputs":[{"name":"str"}],"output":{"name":"option"}}],[11,"clone","ethcore_network::host","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"fmt","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"networkconfiguration"}}],[11,"new","","Create a new instance of default settings.",1,{"inputs":[],"output":{"name":"networkconfiguration"}}],[11,"new_with_port","","Create new default configuration with sepcified listen port.",1,{"inputs":[{"name":"u16"}],"output":{"name":"networkconfiguration"}}],[11,"new_local","","Create new default configuration for localhost-only connection with random port (usefull for testing)",1,{"inputs":[],"output":{"name":"networkconfiguration"}}],[11,"clone","","",2,null],[11,"send","","Send a packet over the network to another peer.",3,null],[11,"respond","","Respond to a current network message. Panics if no there is no packet in the context. If the session is expired returns nothing.",3,null],[11,"io_channel","","Get an IoChannel.",3,null],[11,"disable_peer","","Disable current protocol capability for given peer. If no capabilities left peer gets disconnected.",3,null],[11,"disconnect_peer","","Disconnect peer. Reconnect can be attempted later.",3,null],[11,"is_expired","","Check if the session is still active.",3,null],[11,"register_timer","","Register a new IO timer. &#39;IoHandler::timeout&#39; will be called with the token.",3,null],[11,"peer_info","","Returns peer identification string",3,null],[11,"new","ethcore_network::service","Starts IO event loop",4,{"inputs":[{"name":"networkconfiguration"}],"output":{"name":"result"}}],[11,"register_protocol","","Regiter a new protocol handler with the event loop.",4,null],[11,"host_info","","Returns host identifier string as advertised to other peers",4,null],[11,"io","","Returns underlying io service.",4,null],[11,"stats","","Returns network statistics.",4,null],[11,"config","","Returns network configuration.",4,null],[11,"external_url","","Returns external url if available.",4,null],[11,"local_url","","Returns external url if available.",4,null],[11,"start","","Start network IO",4,null],[11,"stop","","Stop network IO",4,null],[11,"add_reserved_peer","","Try to add a reserved peer.",4,null],[11,"remove_reserved_peer","","Try to remove a reserved peer.",4,null],[11,"set_non_reserved_mode","","Set the non-reserved peer mode.",4,null],[11,"with_context","","Executes action in the network context",4,null],[11,"on_panic","","",4,null],[11,"fmt","ethcore_network::error","",5,null],[11,"fmt","","",5,null],[11,"from","","",5,{"inputs":[{"name":"decodererror"}],"output":{"name":"networkerror"}}],[11,"from","","",5,{"inputs":[{"name":"error"}],"output":{"name":"networkerror"}}],[11,"from","","",5,{"inputs":[{"name":"ioerror"}],"output":{"name":"networkerror"}}],[11,"from","","",5,{"inputs":[{"name":"utilerror"}],"output":{"name":"networkerror"}}],[11,"from","","",5,{"inputs":[{"name":"cryptoerror"}],"output":{"name":"networkerror"}}],[11,"from","","",5,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"networkerror"}}],[11,"fmt","ethcore_network::stats","",6,null],[11,"default","","",6,{"inputs":[],"output":{"name":"networkstats"}}],[11,"inc_recv","","Increase bytes received.",6,null],[11,"inc_send","","Increase bytes sent.",6,null],[11,"inc_sessions","","Increase number of sessions.",6,null],[11,"send","","Get bytes sent.",6,null],[11,"recv","","Get bytes received.",6,null],[11,"sessions","","Get total number of sessions created.",6,null],[11,"new","","Create a new empty instance.",6,{"inputs":[],"output":{"name":"networkstats"}}],[11,"eq","ethcore_network","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[4,"NonReservedPeerMode","ethsync","Non-reserved peer modes.",null,null],[13,"Accept","","Accept them. This is the default.",0,null],[13,"Deny","","Deny them.",0,null],[4,"NetworkError","","Network error.",null,null],[13,"Auth","","Authentication error.",5,null],[13,"BadProtocol","","Unrecognised protocol.",5,null],[13,"Expired","","Message expired.",5,null],[13,"PeerNotFound","","Peer not found.",5,null],[13,"Disconnect","","Peer is diconnected.",5,null],[13,"Util","","Util error.",5,null],[13,"Io","","Socket IO error.",5,null],[13,"AddressParse","","Error concerning the network address parsing subsystem.",5,null],[13,"AddressResolve","","Error concerning the network address resolution subsystem.",5,null],[13,"StdIo","","Error concerning the Rust standard library&#39;s IO subsystem.",5,null],[3,"EthSync","","Ethereum network protocol handler",null,null],[3,"SyncClient","","",null,null],[3,"NetworkManagerClient","","",null,null],[3,"SyncConfig","","Sync configuration",null,null],[12,"max_download_ahead_blocks","","Max blocks to download ahead",7,null],[12,"network_id","","Network ID",7,null],[12,"fork_block","","Fork block to check",7,null],[3,"ServiceConfiguration","","",null,null],[12,"sync","","",8,null],[12,"net","","",8,null],[3,"NetworkConfiguration","","Network service configuration",null,null],[12,"config_path","","Directory path to store network configuration. None means nothing will be saved",9,null],[12,"listen_address","","IP address to listen for incoming connections. Listen to all connections by default",9,null],[12,"public_address","","IP address to advertise. Detected automatically if none.",9,null],[12,"udp_port","","Port for UDP connections, same as TCP by default",9,null],[12,"nat_enabled","","Enable NAT configuration",9,null],[12,"discovery_enabled","","Enable discovery",9,null],[12,"boot_nodes","","List of initial node addresses",9,null],[12,"use_secret","","Use provided node key instead of default",9,null],[12,"max_peers","","Max number of connected peers to maintain",9,null],[12,"min_peers","","Min number of connected peers to maintain",9,null],[12,"reserved_nodes","","List of reserved node addresses.",9,null],[12,"allow_non_reserved","","The non-reserved peer mode.",9,null],[3,"SyncStatus","","Syncing status and statistics",null,null],[12,"state","","State",10,null],[12,"protocol_version","","Syncing protocol version. That&#39;s the maximum protocol version we connect to.",10,null],[12,"network_id","","The underlying p2p network version.",10,null],[12,"start_block_number","","`BlockChain` height for the moment the sync started.",10,null],[12,"last_imported_block_number","","Last fully downloaded and imported block number (if any).",10,null],[12,"highest_block_number","","Highest block number in the download queue (if any).",10,null],[12,"blocks_total","","Total number of blocks for the sync process.",10,null],[12,"blocks_received","","Number of blocks downloaded so far.",10,null],[12,"num_peers","","Total number of connected peers",10,null],[12,"num_active_peers","","Total number of active peers",10,null],[12,"mem_used","","Heap memory used in bytes",10,null],[4,"SyncState","","Sync state",null,null],[13,"ChainHead","","Downloading subchain heads",11,null],[13,"Idle","","Initial chain sync complete. Waiting for new packets",11,null],[13,"Waiting","","Block downloading paused. Waiting for block queue to process blocks and free some space",11,null],[13,"Blocks","","Downloading blocks",11,null],[13,"NewBlocks","","Downloading blocks learned from `NewHashes` packet",11,null],[11,"fmt","","",11,null],[11,"eq","","",11,null],[11,"clone","","",11,null],[11,"clone","","",10,null],[11,"is_major_syncing","","Indicates if initial sync is still in progress.",10,null],[11,"clone","","",7,null],[11,"fmt","","",7,null],[11,"default","","",7,{"inputs":[],"output":{"name":"syncconfig"}}],[11,"from_bytes","","",7,null],[11,"to_bytes","","",7,null],[11,"from_bytes","","",10,null],[11,"to_bytes","","",10,null],[11,"new","","Creates and register protocol with the network service",12,{"inputs":[{"name":"syncconfig"},{"name":"arc"},{"name":"networkconfiguration"}],"output":{"name":"result"}}],[11,"status","","Get sync status",12,null],[11,"status","","",13,null],[11,"handshake","","",13,null],[11,"init","","",13,{"inputs":[{"name":"s"}],"output":{"name":"syncclient"}}],[11,"new_blocks","","",12,null],[11,"start","","",12,null],[11,"stop","","",12,null],[11,"accept_unreserved_peers","","",12,null],[11,"deny_unreserved_peers","","",12,null],[11,"remove_reserved_peer","","",12,null],[11,"add_reserved_peer","","",12,null],[11,"start_network","","",12,null],[11,"stop_network","","",12,null],[11,"network_config","","",12,null],[11,"accept_unreserved_peers","","",14,null],[11,"deny_unreserved_peers","","",14,null],[11,"remove_reserved_peer","","",14,null],[11,"add_reserved_peer","","",14,null],[11,"start_network","","",14,null],[11,"stop_network","","",14,null],[11,"network_config","","",14,null],[11,"handshake","","",14,null],[11,"init","","",14,{"inputs":[{"name":"s"}],"output":{"name":"networkmanagerclient"}}],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"size","","",9,null],[11,"to_bytes","","",9,null],[11,"from_bytes","","",9,null],[11,"len_params","","",9,{"inputs":[],"output":{"name":"usize"}}],[11,"new","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"new_local","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"into_basic","","",9,null],[11,"from","","",9,{"inputs":[{"name":"basicnetworkconfiguration"}],"output":{"name":"self"}}],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"size","","",8,null],[11,"to_bytes","","",8,null],[11,"from_bytes","","",8,null],[11,"len_params","","",8,{"inputs":[],"output":{"name":"usize"}}],[8,"SyncProvider","","Current sync status",null,null],[10,"status","","Get sync status",15,null],[8,"ManageNetwork","","Trait for managing network",null,null],[10,"accept_unreserved_peers","","Set to allow unreserved peers to connect",16,null],[10,"deny_unreserved_peers","","Set to deny unreserved peers to connect",16,null],[10,"remove_reserved_peer","","Remove reservation for the peer",16,null],[10,"add_reserved_peer","","Add reserved peer",16,null],[10,"start_network","","Start network",16,null],[10,"stop_network","","Stop network",16,null],[10,"network_config","","Query the current configuration of the network",16,null],[11,"dispatch","","",15,null],[11,"dispatch_buf","","",15,null],[11,"dispatch","","",16,null],[11,"dispatch_buf","","",16,null]],"paths":[[4,"NonReservedPeerMode"],[3,"NetworkConfiguration"],[4,"NetworkIoMessage"],[3,"NetworkContext"],[3,"NetworkService"],[4,"NetworkError"],[3,"NetworkStats"],[3,"SyncConfig"],[3,"ServiceConfiguration"],[3,"NetworkConfiguration"],[3,"SyncStatus"],[4,"SyncState"],[3,"EthSync"],[3,"SyncClient"],[3,"NetworkManagerClient"],[8,"SyncProvider"],[8,"ManageNetwork"]]};
searchIndex["ethcore"] = {"doc":"Ethcore library","items":[[5,"contract_address","ethcore","Returns new address created from address and given nonce.",null,{"inputs":[{"name":"address"},{"name":"u256"}],"output":{"name":"address"}}],[0,"account_provider","","Account management.",null,null],[3,"Secret","ethcore::account_provider","Primitive",null,null],[3,"Message","","Primitive",null,null],[3,"Address","","Primitive",null,null],[3,"AccountProvider","","Account management.\nResponsible for unlocking accounts.",null,null],[3,"AccountMeta","","Collected account metadata",null,null],[12,"name","","The name of the account.",0,null],[12,"meta","","The rest of the metadata of the account.",0,null],[12,"uuid","","The 128-bit UUID of the account, if it has one (brain-wallets don&#39;t).",0,null],[4,"Error","","`AccountProvider` errors.",null,null],[13,"NotUnlocked","","Returned when account is not unlocked.",1,null],[13,"SStore","","Returned when signing fails.",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"from","","",1,{"inputs":[{"name":"sserror"}],"output":{"name":"self"}}],[11,"from","","",2,null],[11,"from","","",2,{"inputs":[{"name":"h256"}],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"sssecret"}],"output":{"name":"self"}}],[11,"into","","",2,null],[11,"into","","",2,null],[11,"from","","",3,null],[11,"from","","",3,{"inputs":[{"name":"h256"}],"output":{"name":"self"}}],[11,"from","","",3,{"inputs":[{"name":"ssmessage"}],"output":{"name":"self"}}],[11,"into","","",3,null],[11,"into","","",3,null],[11,"from","","",4,null],[11,"from","","",4,{"inputs":[{"name":"h160"}],"output":{"name":"self"}}],[11,"from","","",4,{"inputs":[{"name":"ssaddress"}],"output":{"name":"self"}}],[11,"into","","",4,null],[11,"into","","",4,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"clone","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates new account provider.",5,{"inputs":[{"name":"box"}],"output":{"name":"self"}}],[11,"transient_provider","","Creates not disk backed provider.",5,{"inputs":[],"output":{"name":"self"}}],[11,"new_account","","Creates new random account.",5,null],[11,"insert_account","","Inserts new account into underlying store.\nDoes not unlock account!",5,null],[11,"accounts","","Returns addresses of all accounts.",5,null],[11,"accounts_info","","Returns each account along with name and meta.",5,null],[11,"account_meta","","Returns each account along with name and meta.",5,null],[11,"set_account_name","","Returns each account along with name and meta.",5,null],[11,"set_account_meta","","Returns each account along with name and meta.",5,null],[11,"unlock_account_permanently","","Unlocks account permanently.",5,null],[11,"unlock_account_temporarily","","Unlocks account temporarily (for one signing).",5,null],[11,"unlock_account_timed","","Unlocks account temporarily with a timeout.",5,null],[11,"is_unlocked","","Checks if given account is unlocked",5,null],[11,"sign","","Signs the message. Account must be unlocked.",5,null],[11,"sign_with_password","","Unlocks an account, signs the message, and locks it again.",5,null],[0,"engines","ethcore","Consensus engine specification and basic implementations.",null,null],[3,"NullEngine","ethcore::engines","An engine which does not provide any consensus mechanism and does not seal blocks.",null,null],[3,"InstantSeal","","An engine which does not provide any consensus mechanism, just seals blocks internally.",null,null],[3,"BasicAuthority","","Engine using `BasicAuthority` proof-of-work consensus algorithm, suitable for Ethereum\nmainnet chains in the Olympic, Frontier and Homestead eras.",null,null],[11,"new","","Returns new instance of NullEngine with default VM Factory",6,{"inputs":[{"name":"commonparams"},{"name":"btreemap"}],"output":{"name":"self"}}],[11,"name","","",6,null],[11,"params","","",6,null],[11,"builtins","","",6,null],[11,"schedule","","",6,null],[11,"new","","Returns new instance of InstantSeal with default VM Factory",7,{"inputs":[{"name":"commonparams"},{"name":"btreemap"}],"output":{"name":"self"}}],[11,"name","","",7,null],[11,"params","","",7,null],[11,"builtins","","",7,null],[11,"schedule","","",7,null],[11,"generate_seal","","",7,null],[11,"new","","Create a new instance of BasicAuthority engine",8,{"inputs":[{"name":"commonparams"},{"name":"basicauthorityparams"},{"name":"btreemap"}],"output":{"name":"self"}}],[11,"name","","",8,null],[11,"version","","",8,null],[11,"seal_fields","","",8,null],[11,"params","","",8,null],[11,"builtins","","",8,null],[11,"extra_info","","Additional engine-specific information for the user/developer concerning `header`.",8,null],[11,"schedule","","",8,null],[11,"populate_from_parent","","",8,null],[11,"on_close_block","","Apply the block reward on finalisation of the block.\nThis assumes that all uncles are valid uncles (i.e. of at least one generation before the current).",8,null],[11,"generate_seal","","Attempt to seal the block internally.",8,null],[11,"verify_block_basic","","",8,null],[11,"verify_block_unordered","","",8,null],[11,"verify_block_family","","",8,null],[11,"verify_transaction_basic","","",8,null],[11,"verify_transaction","","",8,null],[8,"Engine","","A consensus mechanism for the chain. Generally either proof-of-work or proof-of-stake-based.\nProvides hooks into each of the major parts of block import.",null,null],[10,"name","","The name of this engine.",9,null],[11,"version","","The version of this engine. Should be of the form",9,null],[11,"seal_fields","","The number of additional header fields required for this engine.",9,null],[11,"extra_info","","Additional engine-specific information for the user/developer concerning `header`.",9,null],[10,"params","","Get the general parameters of the chain.",9,null],[10,"schedule","","Get the EVM schedule for the given `env_info`.",9,null],[10,"builtins","","Builtin-contracts we would like to see in the chain.\n(In principle these are just hints for the engine since that has the last word on them.)",9,null],[11,"maximum_extra_data_size","","Some intrinsic operation parameters; by default they take their value from the `spec()`&#39;s `engine_params`.",9,null],[11,"maximum_uncle_count","","Maximum number of uncles a block is allowed to declare.",9,null],[11,"maximum_uncle_age","","The number of generations back that uncles can be.",9,null],[11,"account_start_nonce","","The nonce with which accounts begin.",9,null],[11,"on_new_block","","Block transformation functions, before the transactions.",9,null],[11,"on_close_block","","Block transformation functions, after the transactions.",9,null],[11,"generate_seal","","Attempt to seal the block internally.",9,null],[11,"verify_block_basic","","Phase 1 quick block verification. Only does checks that are cheap. `block` (the header&#39;s full block)\nmay be provided for additional checks. Returns either a null `Ok` or a general error detailing the problem with import.",9,null],[11,"verify_block_unordered","","Phase 2 verification. Perform costly checks such as transaction signatures. `block` (the header&#39;s full block)\nmay be provided for additional checks. Returns either a null `Ok` or a general error detailing the problem with import.",9,null],[11,"verify_block_family","","Phase 3 verification. Check block information against parent and uncles. `block` (the header&#39;s full block)\nmay be provided for additional checks. Returns either a null `Ok` or a general error detailing the problem with import.",9,null],[11,"verify_transaction_basic","","Additional verification for transactions in blocks.",9,null],[11,"verify_transaction","","Verify a particular transaction is valid.",9,null],[11,"verify_block_seal","","Verify the seal of a block. This is an auxilliary method that actually just calls other `verify_` methods\nto get the job done. By default it must pass `verify_basic` and `verify_block_unordered`. If more or fewer\nmethods are needed for an Engine, this may be overridden.",9,null],[11,"populate_from_parent","","Don&#39;t forget to call Super::populate_from_parent when subclassing &amp; overriding.",9,null],[11,"is_builtin","","Determine whether a particular address is a builtin contract.",9,null],[11,"cost_of_builtin","","Determine the code execution cost of the builtin contract with address `a`.\nPanics if `is_builtin(a)` is not true.",9,null],[11,"execute_builtin","","Execution the builtin contract `a` on `input` and return `output`.\nPanics if `is_builtin(a)` is not true.",9,null],[0,"block","ethcore","Blockchain block.",null,null],[3,"Block","ethcore::block","A block, encoded as it is on the block chain.",null,null],[12,"header","","The header of this block.",10,null],[12,"transactions","","The transactions in this block.",10,null],[12,"uncles","","The uncles of this block.",10,null],[3,"ExecutedBlock","","Internal type for a block&#39;s common elements.",null,null],[3,"BlockRefMut","","A set of references to `ExecutedBlock` fields that are publicly accessible.",null,null],[12,"header","","Block header.",11,null],[12,"transactions","","Block transactions.",11,null],[12,"uncles","","Block uncles.",11,null],[12,"receipts","","Transaction receipts.",11,null],[12,"state","","State.",11,null],[12,"traces","","Traces.",11,null],[3,"BlockRef","","A set of immutable references to `ExecutedBlock` fields that are publicly accessible.",null,null],[12,"header","","Block header.",12,null],[12,"transactions","","Block transactions.",12,null],[12,"uncles","","Block uncles.",12,null],[12,"receipts","","Transaction receipts.",12,null],[12,"state","","State.",12,null],[12,"traces","","Traces.",12,null],[3,"OpenBlock","","Block that is ready for transactions to be added.",null,null],[3,"ClosedBlock","","Just like `OpenBlock`, except that we&#39;ve applied `Engine::on_close_block`, finished up the non-seal header fields,\nand collected the uncles.",null,null],[3,"LockedBlock","","Just like `ClosedBlock` except that we can&#39;t reopen it and it&#39;s faster.",null,null],[3,"SealedBlock","","A block that has a valid seal.",null,null],[5,"enact","","Enact the block given by block header, transactions and uncles",null,null],[5,"enact_bytes","","Enact the block given by `block_bytes` using `engine` on the database `db` with given `parent` block header",null,null],[5,"enact_verified","","Enact the block given by `block_bytes` using `engine` on the database `db` with given `parent` block header",null,{"inputs":[{"name":"preverifiedblock"},{"name":"engine"},{"name":"bool"},{"name":"box"},{"name":"header"},{"name":"arc"},{"name":"evmfactory"},{"name":"triefactory"}],"output":{"name":"result"}}],[5,"enact_and_seal","","Enact the block given by `block_bytes` using `engine` on the database `db` with given `parent` block header. Seal the block aferwards",null,null],[8,"IsBlock","","Trait for a object that is a `ExecutedBlock`.",null,null],[10,"block","","Get the `ExecutedBlock` associated with this object.",13,null],[11,"base","","Get the base `Block` object associated with this.",13,null],[11,"header","","Get the header associated with this object&#39;s block.",13,null],[11,"state","","Get the final state associated with this object&#39;s block.",13,null],[11,"transactions","","Get all information on transactions in this block.",13,null],[11,"receipts","","Get all information on receipts in this block.",13,null],[11,"traces","","Get all information concerning transaction tracing in this block.",13,null],[11,"uncles","","Get all uncles in this block.",13,null],[8,"Drain","","Trait for a object that has a state database.",null,null],[10,"drain","","Drop this object and return the underlieing database.",14,null],[11,"eq","","",10,null],[11,"ne","","",10,null],[11,"clone","","",10,null],[11,"fmt","","",10,null],[11,"default","","",10,{"inputs":[],"output":{"name":"block"}}],[11,"is_good","","Returns true if the given bytes form a valid encoding of a block in RLP.",10,null],[11,"rlp_bytes","","Get the RLP-encoding of the block with or without the seal.",10,null],[11,"decode","","",10,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"clone","","",15,null],[11,"fields_mut","","Get a structure containing individual references to all public fields.",15,null],[11,"fields","","Get a structure containing individual references to all public fields.",15,null],[11,"block","","",15,null],[11,"clone","","",16,null],[11,"clone","","",17,null],[11,"new","","Create a new `OpenBlock` ready for transaction pushing.",18,null],[11,"set_author","","Alter the author for the block.",18,null],[11,"set_timestamp","","Alter the timestamp of the block.",18,null],[11,"set_difficulty","","Alter the difficulty for the block.",18,null],[11,"set_gas_limit","","Alter the gas limit for the block.",18,null],[11,"set_gas_used","","Alter the gas limit for the block.",18,null],[11,"set_uncles_hash","","Alter the uncles hash the block.",18,null],[11,"set_transactions_root","","Alter transactions root for the block.",18,null],[11,"set_receipts_root","","Alter the receipts root for the block.",18,null],[11,"set_extra_data","","Alter the extra_data for the block.",18,null],[11,"push_uncle","","Add an uncle to the block, if possible.",18,null],[11,"env_info","","Get the environment info concerning this block.",18,null],[11,"push_transaction","","Push a transaction into the block.",18,null],[11,"close","","Turn this into a `ClosedBlock`. A `BlockChain` must be provided in order to figure out the uncles.",18,null],[11,"close_and_lock","","Turn this into a `LockedBlock`. A BlockChain must be provided in order to figure out the uncles.",18,null],[11,"block","","",18,null],[11,"block","","",16,null],[11,"block","","",17,null],[11,"hash","","Get the hash of the header without seal arguments.",16,null],[11,"lock","","Turn this into a `LockedBlock`, unable to be reopened again.",16,null],[11,"reopen","","Given an engine reference, reopen the `ClosedBlock` into an `OpenBlock`.",16,null],[11,"hash","","Get the hash of the header without seal arguments.",17,null],[11,"seal","","Provide a valid seal in order to turn this into a `SealedBlock`.",17,null],[11,"try_seal","","Provide a valid seal in order to turn this into a `SealedBlock`.\nThis does check the validity of `seal` with the engine.\nReturns the `ClosedBlock` back again if the seal is no good.",17,null],[11,"drain","","Drop this object and return the underlieing database.",17,null],[11,"rlp_bytes","","Get the RLP-encoding of the block.",19,null],[11,"drain","","Drop this object and return the underlieing database.",19,null],[11,"block","","",19,null],[0,"block_queue","ethcore","A queue of blocks. Sits between network or other I/O and the `BlockChain`.\nSorts them ready for blockchain insertion.",null,null],[3,"BlockQueueInfo","ethcore::block_queue","Block queue status",null,null],[12,"unverified_queue_size","","Number of queued blocks pending verification",20,null],[12,"verified_queue_size","","Number of verified queued blocks pending import",20,null],[12,"verifying_queue_size","","Number of blocks being verified",20,null],[12,"max_queue_size","","Configured maximum number of blocks in the queue",20,null],[12,"max_mem_use","","Configured maximum number of bytes to use",20,null],[12,"mem_used","","Heap memory used in bytes",20,null],[3,"BlockQueueConfig","","Block queue configuration",null,null],[12,"max_queue_size","","Maximum number of blocks to keep in unverified queue.\nWhen the limit is reached, is_full returns true.",21,null],[12,"max_mem_use","","Maximum heap memory to use.\nWhen the limit is reached, is_full returns true.",21,null],[3,"BlockQueue","","A queue of blocks. Sits between network or other I/O and the `BlockChain`.\nSorts them ready for blockchain insertion.",null,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"fmt","","",21,null],[11,"default","","",21,{"inputs":[],"output":{"name":"self"}}],[11,"total_queue_size","","The total size of the queues.",20,null],[11,"incomplete_queue_size","","The size of the unverified and verifying queues.",20,null],[11,"is_full","","Indicates that queue is full",20,null],[11,"is_empty","","Indicates that queue is empty",20,null],[11,"new","","Creates a new queue instance.",22,{"inputs":[{"name":"blockqueueconfig"},{"name":"arc"},{"name":"iochannel"}],"output":{"name":"blockqueue"}}],[11,"clear","","Clear the queue and stop verification activity.",22,null],[11,"flush","","Wait for unverified queue to be empty",22,null],[11,"block_status","","Check if the block is currently in the queue",22,null],[11,"import_block","","Add a block to the queue.",22,null],[11,"mark_as_bad","","Mark given block and all its children as bad. Stops verification.",22,null],[11,"mark_as_good","","Mark given block as processed",22,null],[11,"drain","","Removes up to `max` verified blocks from the queue",22,null],[11,"queue_info","","Get queue status.",22,null],[11,"collect_garbage","","Optimise memory footprint of the heap fields.",22,null],[11,"on_panic","","",22,null],[11,"drop","","",22,null],[0,"client","ethcore","Blockchain database client.",null,null],[3,"BlockChainInfo","ethcore::client","Information about the blockchain gathered together.",null,null],[12,"total_difficulty","","Blockchain difficulty.",23,null],[12,"pending_total_difficulty","","Block queue difficulty.",23,null],[12,"genesis_hash","","Genesis block hash.",23,null],[12,"best_block_hash","","Best blockchain block hash.",23,null],[12,"best_block_number","","Best blockchain block number.",23,null],[3,"BlockChainCacheSize","","Represents blockchain&#39;s in-memory cache size in bytes.",null,null],[12,"blocks","","Blocks cache size.",24,null],[12,"block_details","","BlockDetails cache size.",24,null],[12,"transaction_addresses","","Transaction addresses cache size.",24,null],[12,"blocks_blooms","","Blooms cache size.",24,null],[12,"block_receipts","","Block receipts size.",24,null],[3,"ClientReport","","Report on the status of a client.",null,null],[12,"blocks_imported","","How many blocks have been imported so far.",25,null],[12,"transactions_applied","","How many transactions have been applied so far.",25,null],[12,"gas_processed","","How much gas has been processed so far.",25,null],[12,"state_db_mem","","Memory used by state DB",25,null],[3,"Client","","Blockchain database client backed by a persistent database. Owns and manages a blockchain and a block queue.\nCall `import_block()` to import a block asynchronously; `flush_queue()` flushes the queue.",null,null],[3,"ClientConfig","","Client configuration. Includes configs for all sub-systems.",null,null],[12,"queue","","Block queue configuration.",26,null],[12,"blockchain","","Blockchain configuration.",26,null],[12,"tracing","","Trace configuration.",26,null],[12,"vm_type","","VM type.",26,null],[12,"trie_spec","","Trie type.",26,null],[12,"pruning","","The JournalDB (&quot;pruning&quot;) algorithm to use.",26,null],[12,"name","","The name of the client instance.",26,null],[12,"db_cache_size","","State db cache-size if not default",26,null],[12,"db_compaction","","State db compaction profile",26,null],[12,"db_wal","","Should db have WAL enabled?",26,null],[12,"mode","","Operating mode",26,null],[12,"verifier_type","","Type of block verifier used by client.",26,null],[3,"Config","","Blockchain configuration.",null,null],[12,"pref_cache_size","","Preferred cache size in bytes.",27,null],[12,"max_cache_size","","Maximum cache size in bytes.",27,null],[12,"db_cache_size","","Backing db cache_size",27,null],[3,"TraceId","","Uniquely identifies Trace.",null,null],[12,"transaction","","Transaction",28,null],[12,"address","","Trace address within transaction.",28,null],[3,"UncleID","","Uniquely identifies Uncle.",null,null],[12,"block","","Block id.",29,null],[12,"position","","Position in block.",29,null],[3,"TestBlockChainClient","","Test client.",null,null],[12,"blocks","","Blocks.",30,null],[12,"numbers","","Mapping of numbers to hashes.",30,null],[12,"genesis_hash","","Genesis block hash.",30,null],[12,"last_hash","","Last block hash.",30,null],[12,"difficulty","","Difficulty.",30,null],[12,"balances","","Balances.",30,null],[12,"nonces","","Nonces.",30,null],[12,"storage","","Storage.",30,null],[12,"code","","Code.",30,null],[12,"execution_result","","Execution result.",30,null],[12,"receipts","","Transaction receipts.",30,null],[12,"queue_size","","Block queue size.",30,null],[12,"miner","","Miner",30,null],[12,"spec","","Spec",30,null],[12,"vm_factory","","VM Factory",30,null],[3,"TraceFilter","","Easy to use trace filter.",null,null],[12,"range","","Range of filtering.",31,null],[12,"from_address","","From address.",31,null],[12,"to_address","","To address.",31,null],[3,"Executed","","Transaction execution receipt.",null,null],[12,"gas","","Gas paid up front for execution of transaction.",32,null],[12,"gas_used","","Gas used during execution of transaction.",32,null],[12,"refunded","","Gas refunded after the execution of transaction.\nTo get gas that was required up front, add `refunded` and `gas_used`.",32,null],[12,"cumulative_gas_used","","Cumulative gas used in current block so far.",32,null],[12,"logs","","Vector of logs generated by transaction.",32,null],[12,"contracts_created","","Addresses of contracts created during execution of transaction.\nOrdered from earliest creation.",32,null],[12,"output","","Transaction output.",32,null],[12,"trace","","The trace of this transaction.",32,null],[12,"vm_trace","","The VM trace of this transaction.",32,null],[12,"state_diff","","The state diff, if we traced it.",32,null],[3,"Executive","","Transaction executor.",null,null],[3,"TransactOptions","","Transaction execution options.",null,null],[12,"tracing","","Enable call tracing.",33,null],[12,"vm_tracing","","Enable VM tracing.",33,null],[12,"check_nonce","","Check transaction nonce before execution.",33,null],[3,"EnvInfo","","Information concerning the execution environment for a message-call/contract-creation.",null,null],[12,"number","","The block number.",34,null],[12,"author","","The block author.",34,null],[12,"timestamp","","The block timestamp.",34,null],[12,"difficulty","","The block difficulty.",34,null],[12,"gas_limit","","The block gas limit.",34,null],[12,"last_hashes","","The last 256 block hashes.",34,null],[12,"gas_used","","The gas used.",34,null],[3,"CallAnalytics","","Options concerning what analytics we run on the call.",null,null],[12,"transaction_tracing","","Make a transaction trace.",35,null],[12,"vm_tracing","","Make a VM trace.",35,null],[12,"state_diffing","","Make a diff.",35,null],[3,"RemoteClient","","",null,null],[4,"BlockStatus","","General block status",null,null],[13,"InChain","","Part of the blockchain.",36,null],[13,"Queued","","Queued for import.",36,null],[13,"Bad","","Known as bad.",36,null],[13,"Unknown","","Unknown.",36,null],[4,"Mode","","Operating mode for the client.",null,null],[13,"Active","","Always on.",37,null],[13,"Passive","","Goes offline after RLP is inactive for some (given) time, but\ncomes back online after a while of inactivity.",37,null],[13,"Dark","","Goes offline after RLP is inactive for some (given) time and\nstays inactive.",37,null],[4,"DatabaseCompactionProfile","","Client state db compaction profile",null,null],[13,"Default","","Default compaction profile",38,null],[13,"HDD","","HDD or other slow storage io compaction profile",38,null],[4,"Switch","","3-value enum.",null,null],[13,"On","","True.",39,null],[13,"Off","","False.",39,null],[13,"Auto","","Auto.",39,null],[4,"Error","","Client configuration errors.",null,null],[13,"Trace","","TraceDB configuration error.",40,null],[13,"Trie","","TrieDB-related error.",40,null],[13,"Database","","Database error",40,null],[13,"Util","","Util error",40,null],[4,"BlockID","","Uniquely identifies block.",null,null],[13,"Hash","","Block&#39;s sha3.\nQuerying by hash is always faster.",41,null],[13,"Number","","Block number within canon blockchain.",41,null],[13,"Earliest","","Earliest block (genesis).",41,null],[13,"Latest","","Latest mined block.",41,null],[13,"Pending","","Pending block.",41,null],[4,"TransactionID","","Uniquely identifies transaction.",null,null],[13,"Hash","","Transaction&#39;s sha3.",42,null],[13,"Location","","Block id and transaction index within this block.\nQuerying by block position is always faster.",42,null],[4,"EachBlockWith","","Used for generating test client blocks.",null,null],[13,"Nothing","","Plain block.",43,null],[13,"Uncle","","Block with an uncle.",43,null],[13,"Transaction","","Block with a transaction.",43,null],[13,"UncleAndTransaction","","Block with an uncle and transaction.",43,null],[4,"BlockImportError","","Error dedicated to import block function",null,null],[13,"Import","","Import error",44,null],[13,"Block","","Block error",44,null],[13,"Other","","Other error",44,null],[4,"TransactionImportResult","","Represents the result of importing transaction.",null,null],[13,"Current","","Transaction was imported to current queue.",45,null],[13,"Future","","Transaction was imported to future queue.",45,null],[4,"TransactionImportError","","Api-level error for transaction import",null,null],[13,"Transaction","","Transaction error",46,null],[13,"Other","","Other error",46,null],[5,"append_path","","Append a path element to the given path and return the string.",null,{"inputs":[{"name":"p"},{"name":"str"}],"output":{"name":"string"}}],[11,"new","std::time::duration","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",47,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",47,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",47,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",47,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",47,null],[11,"from","alloc::boxed","",48,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",48,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",48,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",48,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",48,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",48,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",49,null],[11,"description","","",50,null],[11,"description","core::num","",51,null],[11,"description","","",52,null],[11,"description","core::num::dec2flt","",53,null],[11,"description","collections::string","",54,null],[11,"description","","",55,null],[11,"description","","",56,null],[11,"description","rustc_unicode::char","",57,null],[11,"description","alloc::boxed","",48,null],[11,"cause","","",48,null],[11,"is","ethcore::client","Returns true if the boxed type is the same as `T`",58,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",58,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",58,null],[11,"is","","Forwards to the method defined on the type `Any`.",58,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",58,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",58,null],[11,"is","","Forwards to the method defined on the type `Any`.",58,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",58,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",58,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",58,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",58,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",58,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"next","std::ascii","",59,null],[11,"size_hint","","",59,null],[11,"next_back","","",59,null],[11,"clone","std::thread::local","",60,null],[11,"eq","","",60,null],[11,"with","","Acquires a reference to the value in this TLS key.",61,null],[11,"state","","Query the current state of this key.",61,null],[11,"new","std::thread::local::elf","",62,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",62,null],[11,"new","std::thread::local::os","",63,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",63,null],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",64,null],[11,"with","","Gets a value out of this scoped variable.",64,null],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",64,null],[11,"new","std::thread::scoped_tls::imp","",65,{"inputs":[],"output":{"name":"keyinner"}}],[11,"set","","",65,null],[11,"get","","",65,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",66,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",66,null],[11,"stack_size","","Sets the size of the stack for the new thread.",66,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",66,null],[11,"clone","","",67,null],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",67,null],[11,"name","","Gets the thread&#39;s name.",67,null],[11,"fmt","","",67,null],[11,"thread","","Extracts a handle to the underlying thread",68,null],[11,"join","","Waits for the associated thread to finish.",68,null],[11,"clone","std::collections::hash::map","",69,null],[11,"new","","Creates an empty HashMap.",69,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",69,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",69,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",69,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",69,null],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",69,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",69,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",69,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",69,null],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",69,null],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",69,null],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",69,null],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",69,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",69,null],[11,"len","","Returns the number of elements in the map.",69,null],[11,"is_empty","","Returns true if the map contains no elements.",69,null],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",69,null],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",69,null],[11,"get","","Returns a reference to the value corresponding to the key.",69,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",69,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",69,null],[11,"insert","","Inserts a key-value pair into the map.",69,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",69,null],[11,"eq","","",69,null],[11,"fmt","","",69,null],[11,"default","","",69,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",69,null],[11,"clone","","",70,null],[11,"clone","","",71,null],[11,"clone","","",72,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",69,null],[11,"next","","",70,null],[11,"size_hint","","",70,null],[11,"len","","",70,null],[11,"next","","",73,null],[11,"size_hint","","",73,null],[11,"len","","",73,null],[11,"next","","",74,null],[11,"size_hint","","",74,null],[11,"len","","",74,null],[11,"next","","",71,null],[11,"size_hint","","",71,null],[11,"len","","",71,null],[11,"next","","",72,null],[11,"size_hint","","",72,null],[11,"len","","",72,null],[11,"next","","",75,null],[11,"size_hint","","",75,null],[11,"len","","",75,null],[11,"next","","",76,null],[11,"size_hint","","",76,null],[11,"len","","",76,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",77,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",77,null],[11,"key","","Returns a reference to this entry&#39;s key.",77,null],[11,"key","","Gets a reference to the key in the entry.",78,null],[11,"get","","Gets a reference to the value in the entry.",78,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",78,null],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",78,null],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",78,null],[11,"remove","","Takes the value out of the entry, and returns it",78,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",79,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",79,null],[11,"from_iter","","",69,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",69,null],[11,"extend","","",69,null],[11,"clone","","",80,null],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",80,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",80,null],[11,"default","","",80,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",81,null],[11,"new","","Creates an empty HashSet.",81,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",81,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",81,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",81,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",81,null],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",81,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",81,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",81,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",81,null],[11,"difference","","Visit the values representing the difference.",81,null],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",81,null],[11,"intersection","","Visit the values representing the intersection.",81,null],[11,"union","","Visit the values representing the union.",81,null],[11,"len","","Returns the number of elements in the set.",81,null],[11,"is_empty","","Returns true if the set contains no elements.",81,null],[11,"drain","","Clears the set, returning all elements in an iterator.",81,null],[11,"clear","","Clears the set, removing all values.",81,null],[11,"contains","","Returns `true` if the set contains a value.",81,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",81,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",81,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",81,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",81,null],[11,"insert","","Adds a value to the set.",81,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",81,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",81,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",81,null],[11,"eq","","",81,null],[11,"fmt","","",81,null],[11,"from_iter","","",81,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",81,null],[11,"extend","","",81,null],[11,"default","","",81,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",81,null],[11,"clone","","",82,null],[11,"next","","",82,null],[11,"size_hint","","",82,null],[11,"len","","",82,null],[11,"next","","",83,null],[11,"size_hint","","",83,null],[11,"len","","",83,null],[11,"next","","",84,null],[11,"size_hint","","",84,null],[11,"len","","",84,null],[11,"clone","","",85,null],[11,"next","","",85,null],[11,"size_hint","","",85,null],[11,"clone","","",86,null],[11,"next","","",86,null],[11,"size_hint","","",86,null],[11,"clone","","",87,null],[11,"next","","",87,null],[11,"size_hint","","",87,null],[11,"clone","","",88,null],[11,"next","","",88,null],[11,"size_hint","","",88,null],[11,"clone","collections::vec_deque","",89,null],[11,"drop","","",89,null],[11,"default","","",89,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",89,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",89,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",89,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",89,null],[11,"swap","","Swaps elements at indices `i` and `j`.",89,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",89,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",89,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",89,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",89,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",89,null],[11,"iter","","Returns a front-to-back iterator.",89,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",89,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",89,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",89,null],[11,"len","","Returns the number of elements in the `VecDeque`.",89,null],[11,"is_empty","","Returns true if the buffer contains no elements",89,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",89,null],[11,"clear","","Clears the buffer, removing all values.",89,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",89,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",89,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",89,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",89,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",89,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",89,null],[11,"push_front","","Inserts an element first in the sequence.",89,null],[11,"push_back","","Appends an element to the back of a buffer",89,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",89,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",89,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",89,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",89,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",89,null],[11,"split_off","","Splits the collection into two at the given index.",89,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",89,null],[11,"retain","","Retains only the elements specified by the predicate.",89,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",89,null],[11,"clone","","",90,null],[11,"next","","",90,null],[11,"size_hint","","",90,null],[11,"next_back","","",90,null],[11,"next","","",91,null],[11,"size_hint","","",91,null],[11,"next_back","","",91,null],[11,"clone","","",92,null],[11,"next","","",92,null],[11,"size_hint","","",92,null],[11,"next_back","","",92,null],[11,"drop","","",93,null],[11,"next","","",93,null],[11,"size_hint","","",93,null],[11,"next_back","","",93,null],[11,"eq","","",89,null],[11,"partial_cmp","","",89,null],[11,"cmp","","",89,null],[11,"hash","","",89,null],[11,"index","","",89,null],[11,"index_mut","","",89,null],[11,"from_iter","","",89,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",89,null],[11,"extend","","",89,null],[11,"extend","","",89,null],[11,"fmt","","",89,null],[11,"from","","",89,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",94,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"clone","collections::binary_heap","",95,null],[11,"clone_from","","",95,null],[11,"default","","",95,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",95,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",95,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",95,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",95,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",95,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",95,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",95,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",95,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",95,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",95,null],[11,"push","","Pushes an item onto the binary heap.",95,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",95,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",95,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",95,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",95,null],[11,"len","","Returns the length of the binary heap.",95,null],[11,"is_empty","","Checks if the binary heap is empty.",95,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",95,null],[11,"clear","","Drops all items from the binary heap.",95,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",95,null],[11,"clone","","",96,null],[11,"next","","",96,null],[11,"size_hint","","",96,null],[11,"next_back","","",96,null],[11,"clone","","",97,null],[11,"next","","",97,null],[11,"size_hint","","",97,null],[11,"next_back","","",97,null],[11,"next","","",98,null],[11,"size_hint","","",98,null],[11,"next_back","","",98,null],[11,"from","","",95,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",94,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",95,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",95,null],[11,"extend","","",95,null],[11,"extend","","",95,null],[11,"clone","collections::linked_list","",99,null],[11,"clone","","",100,null],[11,"default","","",101,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",101,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",101,null],[11,"iter","","Provides a forward iterator.",101,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",101,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",101,null],[11,"len","","Returns the length of the `LinkedList`.",101,null],[11,"clear","","Removes all elements from the `LinkedList`.",101,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",101,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",101,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",101,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",101,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",101,null],[11,"push_front","","Adds an element first in the list.",101,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",101,null],[11,"push_back","","Appends an element to the back of a list",101,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",101,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",101,null],[11,"front_place","","Returns a place for insertion at the front of the list.",101,null],[11,"back_place","","Returns a place for insertion at the back of the list.",101,null],[11,"drop","","",101,null],[11,"next","","",99,null],[11,"size_hint","","",99,null],[11,"next_back","","",99,null],[11,"next","","",102,null],[11,"size_hint","","",102,null],[11,"next_back","","",102,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",102,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",102,null],[11,"next","","",100,null],[11,"size_hint","","",100,null],[11,"next_back","","",100,null],[11,"from_iter","","",101,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",101,null],[11,"extend","","",101,null],[11,"extend","","",101,null],[11,"eq","","",101,null],[11,"ne","","",101,null],[11,"partial_cmp","","",101,null],[11,"cmp","","",101,null],[11,"clone","","",101,null],[11,"fmt","","",101,null],[11,"hash","","",101,null],[11,"make_place","","",103,null],[11,"pointer","","",103,null],[11,"finalize","","",103,null],[11,"make_place","","",104,null],[11,"pointer","","",104,null],[11,"finalize","","",104,null],[11,"next","std::env","",105,null],[11,"size_hint","","",105,null],[11,"next","","",106,null],[11,"size_hint","","",106,null],[11,"clone","","",107,null],[11,"eq","","",107,null],[11,"ne","","",107,null],[11,"fmt","","",107,null],[11,"fmt","","",107,null],[11,"description","","",107,null],[11,"next","","",108,null],[11,"size_hint","","",108,null],[11,"fmt","","",109,null],[11,"fmt","","",109,null],[11,"description","","",109,null],[11,"next","","",110,null],[11,"size_hint","","",110,null],[11,"len","","",110,null],[11,"next","","",111,null],[11,"size_hint","","",111,null],[11,"len","","",111,null],[11,"clone","std::ffi::c_str","",112,null],[11,"hash","","",112,null],[11,"cmp","","",112,null],[11,"partial_cmp","","",112,null],[11,"lt","","",112,null],[11,"le","","",112,null],[11,"gt","","",112,null],[11,"ge","","",112,null],[11,"eq","","",112,null],[11,"ne","","",112,null],[11,"hash","","",113,null],[11,"fmt","","",114,null],[11,"eq","","",114,null],[11,"ne","","",114,null],[11,"clone","","",114,null],[11,"fmt","","",115,null],[11,"eq","","",115,null],[11,"ne","","",115,null],[11,"clone","","",115,null],[11,"fmt","","",116,null],[11,"eq","","",116,null],[11,"ne","","",116,null],[11,"clone","","",116,null],[11,"new","","Creates a new C-compatible string from a container of bytes.",112,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",112,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",112,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",112,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",112,null],[11,"into_bytes","","Returns the underlying byte buffer.",112,null],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",112,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",112,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",112,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",113,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",113,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",113,null],[11,"as_ptr","","Returns the inner pointer to this C string.",113,null],[11,"to_bytes","","Converts this C string to a byte slice.",113,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",113,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",113,null],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",113,null],[11,"deref","","",112,null],[11,"fmt","","",112,null],[11,"from","collections::vec","",94,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",113,null],[11,"default","","",112,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",112,null],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",114,null],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",114,null],[11,"description","","",114,null],[11,"fmt","","",114,null],[11,"from","std::io::error","",117,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",116,null],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",116,null],[11,"description","","",116,null],[11,"cause","","",116,null],[11,"fmt","","",116,null],[11,"eq","","",113,null],[11,"partial_cmp","","",113,null],[11,"cmp","","",113,null],[11,"to_owned","","",113,null],[11,"from","","",112,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",112,null],[11,"as_ref","","",113,null],[11,"as_ref","","",112,null],[11,"clone","std::ffi::os_str","",118,null],[11,"new","","Constructs a new empty `OsString`.",118,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",118,null],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",118,null],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",118,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",118,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",118,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",118,null],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",118,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",118,null],[11,"from","","",118,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",118,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",118,null],[11,"new","","Coerces into an `OsStr` slice.",119,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",119,null],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",119,null],[11,"to_os_string","","Copies the slice into an owned `OsString`.",119,null],[11,"is_empty","","Checks whether the `OsStr` is empty.",119,null],[11,"len","","Returns the length of this `OsStr`.",119,null],[11,"deref","","",118,null],[11,"default","","",118,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",118,null],[11,"eq","","",118,null],[11,"eq","","",118,null],[11,"partial_cmp","","",118,null],[11,"lt","","",118,null],[11,"le","","",118,null],[11,"gt","","",118,null],[11,"ge","","",118,null],[11,"partial_cmp","","",118,null],[11,"cmp","","",118,null],[11,"hash","","",118,null],[11,"eq","","",119,null],[11,"eq","","",119,null],[11,"partial_cmp","","",119,null],[11,"lt","","",119,null],[11,"le","","",119,null],[11,"gt","","",119,null],[11,"ge","","",119,null],[11,"partial_cmp","","",119,null],[11,"cmp","","",119,null],[11,"eq","","",118,null],[11,"eq","","",119,null],[11,"partial_cmp","","",118,null],[11,"partial_cmp","","",119,null],[11,"eq","","",118,null],[11,"partial_cmp","","",118,null],[11,"eq","collections::borrow","",120,null],[11,"eq","std::ffi::os_str","",119,null],[11,"partial_cmp","collections::borrow","",120,null],[11,"partial_cmp","std::ffi::os_str","",119,null],[11,"eq","collections::borrow","",120,null],[11,"partial_cmp","","",120,null],[11,"eq","","",120,null],[11,"eq","std::ffi::os_str","",118,null],[11,"partial_cmp","collections::borrow","",120,null],[11,"partial_cmp","std::ffi::os_str","",118,null],[11,"hash","","",119,null],[11,"fmt","","",119,null],[11,"borrow","","",118,null],[11,"to_owned","","",119,null],[11,"as_ref","","",119,null],[11,"as_ref","","",118,null],[11,"as_ref","collections::string","",121,null],[11,"clone","std::fs","",122,null],[11,"clone","","",123,null],[11,"fmt","","",124,null],[11,"eq","","",124,null],[11,"ne","","",124,null],[11,"clone","","",124,null],[11,"hash","","",125,null],[11,"eq","","",125,null],[11,"ne","","",125,null],[11,"clone","","",125,null],[11,"open","","Attempts to open a file in read-only mode.",126,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",126,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",126,null],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",126,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",126,null],[11,"metadata","","Queries metadata about the underlying file.",126,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",126,null],[11,"fmt","","",126,null],[11,"read","","",126,null],[11,"read_to_end","","",126,null],[11,"write","","",126,null],[11,"flush","","",126,null],[11,"seek","","",126,null],[11,"new","","Creates a blank new set of options ready for configuration.",123,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",123,null],[11,"write","","Sets the option for write access.",123,null],[11,"append","","Sets the option for the append mode.",123,null],[11,"truncate","","Sets the option for truncating a previous file.",123,null],[11,"create","","Sets the option for creating a new file.",123,null],[11,"create_new","","Sets the option to always create a new file.",123,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",123,null],[11,"file_type","","Returns the file type for this metadata.",122,null],[11,"is_dir","","Returns whether this metadata is for a directory.",122,null],[11,"is_file","","Returns whether this metadata is for a regular file.",122,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",122,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",122,null],[11,"modified","","Returns the last modification time listed in this metadata.",122,null],[11,"accessed","","Returns the last access time of this metadata.",122,null],[11,"created","","Returns the creation time listed in the this metadata.",122,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",124,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",124,null],[11,"is_dir","","Test whether this file type represents a directory.",125,null],[11,"is_file","","Test whether this file type represents a regular file.",125,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",125,null],[11,"next","","",127,null],[11,"path","","Returns the full path to the file that this entry represents.",128,null],[11,"metadata","","Return the metadata for the file that this entry points at.",128,null],[11,"file_type","","Return the file type for the file that this entry points at.",128,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",128,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",129,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",129,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",129,null],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",130,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",130,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",130,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",130,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",130,null],[11,"read","","",130,null],[11,"fill_buf","","",130,null],[11,"consume","","",130,null],[11,"fmt","","",130,null],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",130,null],[11,"fmt","","",131,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",132,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",132,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",132,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",132,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",132,null],[11,"write","","",132,null],[11,"flush","","",132,null],[11,"fmt","","",132,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",132,null],[11,"drop","","",132,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",131,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",131,null],[11,"from","std::io::error","",117,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",131,null],[11,"fmt","","",131,null],[11,"new","","Creates a new `LineWriter`.",133,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",133,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",133,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",133,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",133,null],[11,"write","","",133,null],[11,"flush","","",133,null],[11,"fmt","","",133,null],[11,"fmt","std::io::cursor","",134,null],[11,"clone","","",134,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",134,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",134,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",134,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",134,null],[11,"position","","Returns the current position of this cursor.",134,null],[11,"set_position","","Sets the position of this cursor.",134,null],[11,"seek","","",134,null],[11,"read","","",134,null],[11,"fill_buf","","",134,null],[11,"consume","","",134,null],[11,"write","","",134,null],[11,"flush","","",134,null],[11,"write","","",134,null],[11,"flush","","",134,null],[11,"write","","",134,null],[11,"flush","","",134,null],[11,"fmt","std::io::error","",117,null],[11,"fmt","","",135,null],[11,"clone","","",135,null],[11,"eq","","",135,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",117,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",117,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",117,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",117,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",117,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",117,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",117,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",117,null],[11,"fmt","","",117,null],[11,"description","","",117,null],[11,"cause","","",117,null],[11,"read","alloc::boxed","",48,null],[11,"read_to_end","","",48,null],[11,"read_to_string","","",48,null],[11,"read_exact","","",48,null],[11,"write","","",48,null],[11,"flush","","",48,null],[11,"write_all","","",48,null],[11,"write_fmt","","",48,null],[11,"seek","","",48,null],[11,"fill_buf","","",48,null],[11,"consume","","",48,null],[11,"read_until","","",48,null],[11,"read_line","","",48,null],[11,"write","collections::vec","",94,null],[11,"write_all","","",94,null],[11,"flush","","",94,null],[11,"read","std::io::util","",136,null],[11,"fill_buf","","",136,null],[11,"consume","","",136,null],[11,"read","","",137,null],[11,"write","","",138,null],[11,"flush","","",138,null],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",139,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",139,null],[11,"read","","",139,null],[11,"read_to_end","","",139,null],[11,"read_to_string","","",139,null],[11,"read_exact","","",139,null],[11,"read","","",140,null],[11,"read_to_end","","",140,null],[11,"fill_buf","","",140,null],[11,"consume","","",140,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",141,null],[11,"write","","",141,null],[11,"flush","","",141,null],[11,"write_all","","",141,null],[11,"write_fmt","","",141,null],[11,"write","","",142,null],[11,"flush","","",142,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",143,null],[11,"write","","",143,null],[11,"flush","","",143,null],[11,"write_all","","",143,null],[11,"write_fmt","","",143,null],[11,"write","","",144,null],[11,"flush","","",144,null],[11,"fmt","std::io","",145,null],[11,"clone","","",145,null],[11,"eq","","",145,null],[11,"ne","","",145,null],[11,"read","","",146,null],[11,"fill_buf","","",146,null],[11,"consume","","",146,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",147,null],[11,"read","","",147,null],[11,"fill_buf","","",147,null],[11,"consume","","",147,null],[11,"next","","",148,null],[11,"fmt","","",149,null],[11,"next","","",150,null],[11,"description","","",149,null],[11,"cause","","",149,null],[11,"fmt","","",149,null],[11,"next","","",151,null],[11,"next","","",152,null],[11,"cmp","std::net::ip","",153,null],[11,"partial_cmp","","",153,null],[11,"lt","","",153,null],[11,"le","","",153,null],[11,"gt","","",153,null],[11,"ge","","",153,null],[11,"hash","","",153,null],[11,"fmt","","",153,null],[11,"eq","","",153,null],[11,"ne","","",153,null],[11,"clone","","",153,null],[11,"fmt","","",154,null],[11,"hash","","",154,null],[11,"clone","","",154,null],[11,"eq","","",154,null],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",155,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",155,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",155,null],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",155,null],[11,"is_private","","Returns true if this is a private address.",155,null],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",155,null],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",155,null],[11,"is_multicast","","Returns true if this is a multicast address.",155,null],[11,"is_broadcast","","Returns true if this is a broadcast address.",155,null],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",155,null],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",155,null],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",155,null],[11,"fmt","","",153,null],[11,"fmt","","",155,null],[11,"fmt","","",155,null],[11,"clone","","",155,null],[11,"eq","","",155,null],[11,"hash","","",155,null],[11,"partial_cmp","","",155,null],[11,"cmp","","",155,null],[11,"from","","",155,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",155,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",156,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",156,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",156,null],[11,"is_loopback","","Returns true if this is a loopback address (::1).",156,null],[11,"is_global","","Returns true if the address appears to be globally routable.",156,null],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",156,null],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",156,null],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",156,null],[11,"is_documentation","","Returns true if this is an address reserved for documentation\nThis is defined to be 2001:db8::/32 in RFC 3849.",156,null],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",156,null],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",156,null],[11,"is_multicast","","Returns true if this is a multicast address.",156,null],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",156,null],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",156,null],[11,"fmt","","",156,null],[11,"fmt","","",156,null],[11,"clone","","",156,null],[11,"eq","","",156,null],[11,"hash","","",156,null],[11,"partial_cmp","","",156,null],[11,"cmp","","",156,null],[11,"from","","",156,null],[11,"fmt","std::net::addr","",157,null],[11,"hash","","",157,null],[11,"eq","","",157,null],[11,"ne","","",157,null],[11,"clone","","",157,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",157,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",157,null],[11,"set_ip","","Change the IP address associated with this socket address.",157,null],[11,"port","","Returns the port number associated with this socket address.",157,null],[11,"set_port","","Change the port number associated with this socket address.",157,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",158,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",158,null],[11,"set_ip","","Change the IP address associated with this socket address.",158,null],[11,"port","","Returns the port number associated with this socket address.",158,null],[11,"set_port","","Change the port number associated with this socket address.",158,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",159,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",159,null],[11,"set_ip","","Change the IP address associated with this socket address.",159,null],[11,"port","","Returns the port number associated with this socket address.",159,null],[11,"set_port","","Change the port number associated with this socket address.",159,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",159,null],[11,"set_flowinfo","","Change the flow information associated with this socket address.",159,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",159,null],[11,"set_scope_id","","Change the scope ID associated with this socket address.",159,null],[11,"fmt","","",157,null],[11,"fmt","","",158,null],[11,"fmt","","",158,null],[11,"fmt","","",159,null],[11,"fmt","","",159,null],[11,"clone","","",158,null],[11,"clone","","",159,null],[11,"eq","","",158,null],[11,"eq","","",159,null],[11,"hash","","",158,null],[11,"hash","","",159,null],[11,"to_socket_addrs","","",157,null],[11,"to_socket_addrs","","",158,null],[11,"to_socket_addrs","","",159,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",160,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",160,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",160,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",160,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",160,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",160,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",160,null],[11,"read_timeout","","Returns the read timeout of this socket.",160,null],[11,"write_timeout","","Returns the write timeout of this socket.",160,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",160,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",160,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",160,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",160,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",160,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",160,null],[11,"read","","",160,null],[11,"read_to_end","","",160,null],[11,"write","","",160,null],[11,"flush","","",160,null],[11,"fmt","","",160,null],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",161,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",161,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",161,null],[11,"accept","","Accept a new incoming connection from this listener.",161,null],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",161,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",161,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",161,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",161,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",161,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",161,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",161,null],[11,"next","","",162,null],[11,"fmt","","",161,null],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",163,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",163,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",163,null],[11,"local_addr","","Returns the socket address that this socket was created from.",163,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",163,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",163,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",163,null],[11,"read_timeout","","Returns the read timeout of this socket.",163,null],[11,"write_timeout","","Returns the write timeout of this socket.",163,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",163,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",163,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",163,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",163,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",163,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",163,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",163,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",163,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",163,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",163,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",163,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",163,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",163,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",163,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",163,null],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",163,null],[11,"send","","Sends data on the socket to the remote address to which it is connected.",163,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",163,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",163,null],[11,"fmt","","",163,null],[11,"from_str","std::net::ip","",153,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",155,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",156,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",158,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",159,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",157,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",164,null],[11,"ne","","",164,null],[11,"clone","","",164,null],[11,"fmt","","",164,null],[11,"fmt","","",164,null],[11,"description","","",164,null],[11,"fmt","std::net","",165,null],[11,"eq","","",165,null],[11,"clone","","",165,null],[11,"next","","",166,null],[11,"clone","std::os::linux::raw::arch","",167,null],[11,"as_raw_stat","std::fs","",122,null],[11,"st_dev","","",122,null],[11,"st_ino","","",122,null],[11,"st_mode","","",122,null],[11,"st_nlink","","",122,null],[11,"st_uid","","",122,null],[11,"st_gid","","",122,null],[11,"st_rdev","","",122,null],[11,"st_size","","",122,null],[11,"st_atime","","",122,null],[11,"st_atime_nsec","","",122,null],[11,"st_mtime","","",122,null],[11,"st_mtime_nsec","","",122,null],[11,"st_ctime","","",122,null],[11,"st_ctime_nsec","","",122,null],[11,"st_blksize","","",122,null],[11,"st_blocks","","",122,null],[11,"as_raw_fd","","",126,null],[11,"from_raw_fd","","",126,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",126,null],[11,"as_raw_fd","std::net::tcp","",160,null],[11,"as_raw_fd","","",161,null],[11,"as_raw_fd","std::net::udp","",163,null],[11,"from_raw_fd","std::net::tcp","",160,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",161,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",163,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",160,null],[11,"into_raw_fd","","",161,null],[11,"into_raw_fd","std::net::udp","",163,null],[11,"from_vec","std::ffi::os_str","",118,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",118,null],[11,"from_bytes","","",119,null],[11,"as_bytes","","",119,null],[11,"mode","std::fs","",124,null],[11,"set_mode","","",124,null],[11,"from_mode","","",124,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",123,null],[11,"custom_flags","","",123,null],[11,"dev","","",122,null],[11,"ino","","",122,null],[11,"mode","","",122,null],[11,"nlink","","",122,null],[11,"uid","","",122,null],[11,"gid","","",122,null],[11,"rdev","","",122,null],[11,"size","","",122,null],[11,"atime","","",122,null],[11,"atime_nsec","","",122,null],[11,"mtime","","",122,null],[11,"mtime_nsec","","",122,null],[11,"ctime","","",122,null],[11,"ctime_nsec","","",122,null],[11,"blksize","","",122,null],[11,"blocks","","",122,null],[11,"is_block_device","","",125,null],[11,"is_char_device","","",125,null],[11,"is_fifo","","",125,null],[11,"is_socket","","",125,null],[11,"ino","","",128,null],[11,"mode","","",129,null],[11,"uid","std::process","",168,null],[11,"gid","","",168,null],[11,"session_leader","","",168,null],[11,"before_exec","","",168,null],[11,"exec","","",168,null],[11,"from_raw","","",169,{"inputs":[{"name":"i32"}],"output":{"name":"exitstatus"}}],[11,"signal","","",169,null],[11,"from_raw_fd","","",170,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",171,null],[11,"as_raw_fd","","",172,null],[11,"as_raw_fd","","",173,null],[11,"into_raw_fd","","",171,null],[11,"into_raw_fd","","",172,null],[11,"into_raw_fd","","",173,null],[11,"as_pthread_t","std::thread","",68,null],[11,"into_pthread_t","","",68,null],[11,"clone","std::sys::ext::net","",174,null],[11,"is_unnamed","","Returns true iff the address is unnamed.",174,null],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",174,null],[11,"fmt","","",174,null],[11,"fmt","","",175,null],[11,"connect","","Connects to the socket named by `path`.",175,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",175,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",175,null],[11,"local_addr","","Returns the socket address of the local half of this connection.",175,null],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",175,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",175,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",175,null],[11,"read_timeout","","Returns the read timeout of this socket.",175,null],[11,"write_timeout","","Returns the write timeout of this socket.",175,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",175,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",175,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",175,null],[11,"read","","",175,null],[11,"read_to_end","","",175,null],[11,"write","","",175,null],[11,"flush","","",175,null],[11,"as_raw_fd","","",175,null],[11,"from_raw_fd","","",175,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",175,null],[11,"fmt","","",176,null],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",176,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",176,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",176,null],[11,"local_addr","","Returns the local socket address of this listener.",176,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",176,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",176,null],[11,"incoming","","Returns an iterator over incoming connections.",176,null],[11,"as_raw_fd","","",176,null],[11,"from_raw_fd","","",176,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",176,null],[11,"fmt","","",177,null],[11,"next","","",177,null],[11,"size_hint","","",177,null],[11,"fmt","","",178,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",178,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",178,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",178,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",178,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",178,null],[11,"local_addr","","Returns the address of this socket.",178,null],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",178,null],[11,"recv_from","","Receives data from the socket.",178,null],[11,"recv","","Receives data from the socket.",178,null],[11,"send_to","","Sends data on the socket to the specified address.",178,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",178,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",178,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",178,null],[11,"read_timeout","","Returns the read timeout of this socket.",178,null],[11,"write_timeout","","Returns the write timeout of this socket.",178,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",178,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",178,null],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",178,null],[11,"as_raw_fd","","",178,null],[11,"from_raw_fd","","",178,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",178,null],[11,"deref","std::panic","",179,null],[11,"deref_mut","","",179,null],[11,"call_once","","",179,null],[11,"new","","Creates a new `AssertRecoverSafe` wrapper around the provided type.",180,{"inputs":[{"name":"t"}],"output":{"name":"assertrecoversafe"}}],[11,"into_inner","","Consumes the `AssertRecoverSafe`, returning the wrapped value.",180,null],[11,"deref","","",180,null],[11,"deref_mut","","",180,null],[11,"call_once","","",180,null],[11,"eq","std::path","",181,null],[11,"ne","","",181,null],[11,"cmp","","",181,null],[11,"partial_cmp","","",181,null],[11,"lt","","",181,null],[11,"le","","",181,null],[11,"gt","","",181,null],[11,"ge","","",181,null],[11,"hash","","",181,null],[11,"fmt","","",181,null],[11,"clone","","",181,null],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",181,null],[11,"fmt","","",182,null],[11,"clone","","",182,null],[11,"kind","","The parsed prefix data.",182,null],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",182,null],[11,"eq","","",182,null],[11,"partial_cmp","","",182,null],[11,"cmp","","",182,null],[11,"hash","","",182,null],[11,"fmt","","",183,null],[11,"hash","","",183,null],[11,"cmp","","",183,null],[11,"partial_cmp","","",183,null],[11,"lt","","",183,null],[11,"le","","",183,null],[11,"gt","","",183,null],[11,"ge","","",183,null],[11,"eq","","",183,null],[11,"ne","","",183,null],[11,"clone","","",183,null],[11,"as_os_str","","Extracts the underlying `OsStr` slice",183,null],[11,"as_ref","","",183,null],[11,"clone","","",184,null],[11,"clone","","",185,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",184,null],[11,"as_ref","","",184,null],[11,"as_ref","","",184,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",185,null],[11,"as_ref","","",185,null],[11,"as_ref","","",185,null],[11,"next","","",185,null],[11,"next_back","","",185,null],[11,"next","","",184,null],[11,"next_back","","",184,null],[11,"eq","","",184,null],[11,"partial_cmp","","",184,null],[11,"cmp","","",184,null],[11,"clone","","",186,null],[11,"new","","Allocates an empty `PathBuf`.",186,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",186,null],[11,"push","","Extends `self` with `path`.",186,null],[11,"pop","","Truncate `self` to `self.parent()`.",186,null],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",186,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",186,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",186,null],[11,"from","","",186,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",186,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",186,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",186,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",186,null],[11,"fmt","","",186,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",187,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",187,null],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",187,null],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",187,null],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",187,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",187,null],[11,"is_relative","","A path is *relative* if it is not absolute.",187,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",187,null],[11,"parent","","The path without its final component, if any.",187,null],[11,"file_name","","The final component of the path, if it is a normal file.",187,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",187,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",187,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",187,null],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",187,null],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",187,null],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",187,null],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",187,null],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",187,null],[11,"components","","Produce an iterator over the components of the path.",187,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",187,null],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",187,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",187,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",187,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",187,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",187,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",187,null],[11,"exists","","Returns whether the path points at an existing entity.",187,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",187,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",187,null],[11,"deref","","",186,null],[11,"borrow","","",186,null],[11,"from","collections::borrow","",120,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",120,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",187,null],[11,"eq","","",186,null],[11,"hash","","",186,null],[11,"partial_cmp","","",186,null],[11,"cmp","","",186,null],[11,"as_ref","","",186,null],[11,"into","","",186,null],[11,"eq","","",188,null],[11,"ne","","",188,null],[11,"clone","","",188,null],[11,"fmt","","",188,null],[11,"as_ref","","",187,null],[11,"fmt","","",187,null],[11,"fmt","","",189,null],[11,"fmt","","",189,null],[11,"eq","","",187,null],[11,"hash","","",187,null],[11,"partial_cmp","","",187,null],[11,"cmp","","",187,null],[11,"as_ref","","",187,null],[11,"as_ref","std::ffi::os_str","",119,null],[11,"as_ref","collections::borrow","",120,null],[11,"as_ref","std::ffi::os_str","",118,null],[11,"as_ref","collections::string","",121,null],[11,"as_ref","std::path","",186,null],[11,"eq","","",186,null],[11,"eq","","",187,null],[11,"partial_cmp","","",186,null],[11,"partial_cmp","","",187,null],[11,"eq","","",186,null],[11,"partial_cmp","","",186,null],[11,"eq","collections::borrow","",120,null],[11,"eq","std::path","",187,null],[11,"partial_cmp","collections::borrow","",120,null],[11,"partial_cmp","std::path","",187,null],[11,"eq","collections::borrow","",120,null],[11,"partial_cmp","","",120,null],[11,"eq","","",120,null],[11,"eq","std::path","",186,null],[11,"partial_cmp","collections::borrow","",120,null],[11,"partial_cmp","std::path","",186,null],[11,"eq","","",186,null],[11,"eq","std::ffi::os_str","",119,null],[11,"partial_cmp","std::path","",186,null],[11,"partial_cmp","std::ffi::os_str","",119,null],[11,"eq","std::path","",186,null],[11,"partial_cmp","","",186,null],[11,"eq","","",186,null],[11,"eq","collections::borrow","",120,null],[11,"partial_cmp","std::path","",186,null],[11,"partial_cmp","collections::borrow","",120,null],[11,"eq","std::path","",186,null],[11,"eq","std::ffi::os_str","",118,null],[11,"partial_cmp","std::path","",186,null],[11,"partial_cmp","std::ffi::os_str","",118,null],[11,"eq","std::path","",187,null],[11,"eq","std::ffi::os_str","",119,null],[11,"partial_cmp","std::path","",187,null],[11,"partial_cmp","std::ffi::os_str","",119,null],[11,"eq","std::path","",187,null],[11,"partial_cmp","","",187,null],[11,"eq","","",187,null],[11,"eq","collections::borrow","",120,null],[11,"partial_cmp","std::path","",187,null],[11,"partial_cmp","collections::borrow","",120,null],[11,"eq","std::path","",187,null],[11,"eq","std::ffi::os_str","",118,null],[11,"partial_cmp","std::path","",187,null],[11,"partial_cmp","std::ffi::os_str","",118,null],[11,"eq","","",119,null],[11,"partial_cmp","","",119,null],[11,"eq","collections::borrow","",120,null],[11,"partial_cmp","","",120,null],[11,"eq","std::ffi::os_str","",118,null],[11,"partial_cmp","","",118,null],[11,"eq","collections::borrow","",120,null],[11,"eq","std::ffi::os_str","",119,null],[11,"partial_cmp","collections::borrow","",120,null],[11,"partial_cmp","std::ffi::os_str","",119,null],[11,"eq","collections::borrow","",120,null],[11,"partial_cmp","","",120,null],[11,"eq","","",120,null],[11,"eq","std::ffi::os_str","",118,null],[11,"partial_cmp","collections::borrow","",120,null],[11,"partial_cmp","std::ffi::os_str","",118,null],[11,"fmt","std::path","",188,null],[11,"description","","",188,null],[11,"write","std::process","",171,null],[11,"flush","","",171,null],[11,"read","","",172,null],[11,"read_to_end","","",172,null],[11,"read","","",173,null],[11,"read_to_end","","",173,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",168,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",168,null],[11,"args","","Add multiple arguments to pass to the program.",168,null],[11,"env","","Inserts or updates an environment variable mapping.",168,null],[11,"env_remove","","Removes an environment variable mapping.",168,null],[11,"env_clear","","Clears the entire environment map for the child process.",168,null],[11,"current_dir","","Sets the working directory for the child process.",168,null],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",168,null],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",168,null],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",168,null],[11,"spawn","","Executes the command as a child process, returning a handle to it.",168,null],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",168,null],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",168,null],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",168,null],[11,"clone","","",190,null],[11,"eq","","",190,null],[11,"ne","","",190,null],[11,"fmt","","",190,null],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",170,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",170,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",170,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",169,null],[11,"clone","","",169,null],[11,"eq","","",169,null],[11,"ne","","",169,null],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",169,null],[11,"code","","Returns the exit code of the process, if any.",169,null],[11,"fmt","","",169,null],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",191,null],[11,"id","","Returns the OS-assigned process identifier associated with this child.",191,null],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",191,null],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",191,null],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",192,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",192,null],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",192,null],[11,"id","","Retrieves the id of this handle.",193,null],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",193,null],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",193,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",193,null],[11,"drop","","",192,null],[11,"drop","","",193,null],[11,"fmt","","",192,null],[11,"fmt","","",193,null],[11,"clone","std::sync::mpsc","",194,null],[11,"eq","","",194,null],[11,"ne","","",194,null],[11,"fmt","","",195,null],[11,"clone","","",195,null],[11,"eq","","",195,null],[11,"fmt","","",196,null],[11,"clone","","",196,null],[11,"eq","","",196,null],[11,"clone","","",197,null],[11,"eq","","",197,null],[11,"ne","","",197,null],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",198,null],[11,"clone","","",198,null],[11,"drop","","",198,null],[11,"fmt","","",198,null],[11,"send","","Sends a value on this synchronous channel.",199,null],[11,"try_send","","Attempts to send a value on this channel without blocking.",199,null],[11,"clone","","",199,null],[11,"drop","","",199,null],[11,"fmt","","",199,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",200,null],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",200,null],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",200,null],[11,"next","","",201,null],[11,"next","","",202,null],[11,"into_iter","","",200,null],[11,"drop","","",200,null],[11,"fmt","","",200,null],[11,"fmt","","",194,null],[11,"fmt","","",194,null],[11,"description","","",194,null],[11,"cause","","",194,null],[11,"fmt","","",197,null],[11,"fmt","","",197,null],[11,"description","","",197,null],[11,"cause","","",197,null],[11,"fmt","","",195,null],[11,"description","","",195,null],[11,"cause","","",195,null],[11,"fmt","","",196,null],[11,"description","","",196,null],[11,"cause","","",196,null],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",203,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",203,null],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",204,null],[11,"clone","std::sync::condvar","",205,null],[11,"eq","","",205,null],[11,"ne","","",205,null],[11,"fmt","","",205,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",205,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",206,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",206,null],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",206,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",206,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",206,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",206,null],[11,"default","","",206,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",206,null],[11,"new","","Creates a new condition variable",207,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",207,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",207,null],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",207,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",207,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",207,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",207,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",208,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",208,null],[11,"try_lock","","Attempts to acquire this lock.",208,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",208,null],[11,"into_inner","","Consumes this mutex, returning the underlying data.",208,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",208,null],[11,"drop","","",208,null],[11,"default","","",208,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",208,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",209,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",209,null],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",209,null],[11,"destroy","","Deallocates resources associated with this static mutex.",209,null],[11,"deref","","",210,null],[11,"deref_mut","","",210,null],[11,"drop","","",210,null],[11,"new","std::sync::once","Creates a new `Once` value.",211,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",211,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",211,null],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",212,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",213,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",213,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",213,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",213,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",213,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",213,null],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",213,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",213,null],[11,"drop","","",213,null],[11,"fmt","","",213,null],[11,"default","","",213,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",214,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",214,null],[11,"try_read","","Attempts to acquire this lock with shared read access.",214,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",214,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",214,null],[11,"destroy","","Deallocates all resources associated with this static lock.",214,null],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",215,{"inputs":[{"name":"rwlockreadguard"},{"name":"f"}],"output":{"name":"rwlockreadguard"}}],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",216,{"inputs":[{"name":"rwlockwriteguard"},{"name":"f"}],"output":{"name":"rwlockwriteguard"}}],[11,"deref","","",215,null],[11,"deref","","",216,null],[11,"deref_mut","","",216,null],[11,"drop","","",215,null],[11,"drop","","",216,null],[11,"default","core::sync::atomic","",217,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",218,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",219,null],[11,"clone","","",219,null],[11,"new","","Creates a new `AtomicBool`.",217,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",217,null],[11,"store","","Stores a value into the bool.",217,null],[11,"swap","","Stores a value into the bool, returning the old value.",217,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",217,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",217,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",217,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",217,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",217,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",217,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",217,null],[11,"new","","Creates a new `AtomicPtr`.",218,null],[11,"load","","Loads a value from the pointer.",218,null],[11,"store","","Stores a value into the pointer.",218,null],[11,"swap","","Stores a value into the pointer, returning the old value.",218,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",218,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",218,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",218,null],[11,"default","","",220,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",220,null],[11,"new","","Creates a new atomic integer.",220,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",220,null],[11,"store","","Stores a value into the atomic integer.",220,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",220,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",220,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",220,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",220,null],[11,"fetch_add","","Add to the current value, returning the previous value.",220,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",220,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",220,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",220,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",220,null],[11,"default","","",221,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",221,null],[11,"new","","Creates a new atomic integer.",221,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",221,null],[11,"store","","Stores a value into the atomic integer.",221,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",221,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",221,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",221,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",221,null],[11,"fetch_add","","Add to the current value, returning the previous value.",221,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",221,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",221,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",221,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",221,null],[11,"default","","",222,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",222,null],[11,"new","","Creates a new atomic integer.",222,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",222,null],[11,"store","","Stores a value into the atomic integer.",222,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",222,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",222,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",222,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",222,null],[11,"fetch_add","","Add to the current value, returning the previous value.",222,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",222,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",222,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",222,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",222,null],[11,"default","","",223,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",223,null],[11,"new","","Creates a new atomic integer.",223,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",223,null],[11,"store","","Stores a value into the atomic integer.",223,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",223,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",223,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",223,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",223,null],[11,"fetch_add","","Add to the current value, returning the previous value.",223,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",223,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",223,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",223,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",223,null],[11,"default","","",224,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",224,null],[11,"new","","Creates a new atomic integer.",224,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",224,null],[11,"store","","Stores a value into the atomic integer.",224,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",224,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",224,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",224,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",224,null],[11,"fetch_add","","Add to the current value, returning the previous value.",224,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",224,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",224,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",224,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",224,null],[11,"default","","",225,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",225,null],[11,"new","","Creates a new atomic integer.",225,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",225,null],[11,"store","","Stores a value into the atomic integer.",225,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",225,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",225,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",225,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",225,null],[11,"fetch_add","","Add to the current value, returning the previous value.",225,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",225,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",225,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",225,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",225,null],[11,"default","","",226,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",226,null],[11,"new","","Creates a new atomic integer.",226,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",226,null],[11,"store","","Stores a value into the atomic integer.",226,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",226,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",226,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",226,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",226,null],[11,"fetch_add","","Add to the current value, returning the previous value.",226,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",226,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",226,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",226,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",226,null],[11,"default","","",227,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",227,null],[11,"new","","Creates a new atomic integer.",227,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",227,null],[11,"store","","Stores a value into the atomic integer.",227,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",227,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",227,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",227,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",227,null],[11,"fetch_add","","Add to the current value, returning the previous value.",227,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",227,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",227,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",227,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",227,null],[11,"default","","",228,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",228,null],[11,"new","","Creates a new atomic integer.",228,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",228,null],[11,"store","","Stores a value into the atomic integer.",228,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",228,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",228,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",228,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",228,null],[11,"fetch_add","","Add to the current value, returning the previous value.",228,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",228,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",228,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",228,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",228,null],[11,"default","","",229,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",229,null],[11,"new","","Creates a new atomic integer.",229,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",229,null],[11,"store","","Stores a value into the atomic integer.",229,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",229,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",229,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",229,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",229,null],[11,"fetch_add","","Add to the current value, returning the previous value.",229,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",229,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",229,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",229,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",229,null],[11,"fmt","","",217,null],[11,"fmt","","",218,null],[11,"hash","std::time::duration","",47,null],[11,"fmt","","",47,null],[11,"cmp","","",47,null],[11,"partial_cmp","","",47,null],[11,"lt","","",47,null],[11,"le","","",47,null],[11,"gt","","",47,null],[11,"ge","","",47,null],[11,"eq","","",47,null],[11,"ne","","",47,null],[11,"clone","","",47,null],[11,"add","","",47,null],[11,"add_assign","","",47,null],[11,"sub","","",47,null],[11,"sub_assign","","",47,null],[11,"mul","","",47,null],[11,"mul_assign","","",47,null],[11,"div","","",47,null],[11,"div_assign","","",47,null],[11,"cmp","std::time","",230,null],[11,"partial_cmp","","",230,null],[11,"lt","","",230,null],[11,"le","","",230,null],[11,"gt","","",230,null],[11,"ge","","",230,null],[11,"eq","","",230,null],[11,"ne","","",230,null],[11,"clone","","",230,null],[11,"cmp","","",231,null],[11,"partial_cmp","","",231,null],[11,"lt","","",231,null],[11,"le","","",231,null],[11,"gt","","",231,null],[11,"ge","","",231,null],[11,"eq","","",231,null],[11,"ne","","",231,null],[11,"clone","","",231,null],[11,"fmt","","",232,null],[11,"clone","","",232,null],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",230,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",230,null],[11,"duration_from_earlier","","Deprecated, renamed to `duration_since`",230,null],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",230,null],[11,"add","","",230,null],[11,"add_assign","","",230,null],[11,"sub","","",230,null],[11,"sub_assign","","",230,null],[11,"sub","","",230,null],[11,"fmt","","",230,null],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",231,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",231,null],[11,"duration_from_earlier","","Deprecated, renamed to `duration_since`",231,null],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",231,null],[11,"add","","",231,null],[11,"add_assign","","",231,null],[11,"sub","","",231,null],[11,"sub_assign","","",231,null],[11,"fmt","","",231,null],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",232,null],[11,"description","","",232,null],[11,"fmt","","",232,null],[11,"fmt","std::sys_common::poison","",233,null],[11,"fmt","","",233,null],[11,"description","","",233,null],[11,"new","","Creates a `PoisonError`.",233,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",233,null],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",233,null],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",233,null],[11,"from","","",234,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",234,null],[11,"fmt","","",234,null],[11,"description","","",234,null],[11,"cause","","",234,null],[11,"clone","libc::unix","",235,null],[11,"clone","","",236,null],[11,"clone","","",237,null],[11,"clone","","",238,null],[11,"clone","","",239,null],[11,"clone","","",240,null],[11,"clone","","",241,null],[11,"clone","","",242,null],[11,"clone","","",243,null],[11,"clone","","",244,null],[11,"clone","","",245,null],[11,"clone","","",246,null],[11,"clone","","",247,null],[11,"clone","libc::unix::notbsd","",248,null],[11,"clone","","",249,null],[11,"clone","","",250,null],[11,"clone","","",251,null],[11,"clone","","",252,null],[11,"clone","","",253,null],[11,"clone","","",254,null],[11,"clone","","",255,null],[11,"clone","","",256,null],[11,"clone","","",257,null],[11,"clone","","",258,null],[11,"clone","","",259,null],[11,"clone","","",260,null],[11,"clone","","",261,null],[11,"clone","","",262,null],[11,"clone","libc::unix::notbsd::linux","",263,null],[11,"clone","","",264,null],[11,"clone","","",265,null],[11,"clone","","",266,null],[11,"clone","","",267,null],[11,"clone","","",268,null],[11,"clone","","",269,null],[11,"clone","","",270,null],[11,"clone","","",271,null],[11,"clone","","",272,null],[11,"clone","","",273,null],[11,"clone","","",274,null],[11,"clone","","",275,null],[11,"clone","","",276,null],[11,"clone","","",277,null],[11,"clone","","",278,null],[11,"clone","libc::unix::notbsd::linux::other","",279,null],[11,"clone","","",280,null],[11,"clone","","",281,null],[11,"clone","","",282,null],[11,"clone","","",283,null],[11,"clone","","",284,null],[11,"clone","","",285,null],[11,"clone","","",286,null],[11,"clone","","",287,null],[11,"clone","","",288,null],[11,"clone","","",289,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",290,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",291,null],[11,"clone","","",292,null],[11,"clone","","",293,null],[11,"clone","","",294,null],[11,"clone","","",295,null],[11,"clone","","",296,null],[11,"clone","","",297,null],[11,"clone","","",298,null],[11,"payload","std::panicking","Returns the payload associated with the panic.",299,null],[11,"location","","Returns information about the location from which the panic originated,\nif available.",299,null],[11,"file","","Returns the name of the source file from which the panic originated.",300,null],[11,"line","","Returns the line number from which the panic originated.",300,null],[11,"clone","alloc::boxed","",301,null],[11,"pointer","","",302,null],[11,"make_place","","",302,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",302,null],[11,"finalize","","",48,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",301,null],[11,"drop","","",302,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",48,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",48,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",48,null],[11,"default","","",48,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",48,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",48,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",48,null],[11,"clone","","",48,null],[11,"eq","","",48,null],[11,"ne","","",48,null],[11,"partial_cmp","","",48,null],[11,"lt","","",48,null],[11,"le","","",48,null],[11,"ge","","",48,null],[11,"gt","","",48,null],[11,"cmp","","",48,null],[11,"hash","","",48,null],[11,"from","","",48,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",48,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",48,null],[11,"fmt","","",48,null],[11,"fmt","","",48,null],[11,"fmt","","",48,null],[11,"deref","","",48,null],[11,"deref_mut","","",48,null],[11,"next","","",48,null],[11,"size_hint","","",48,null],[11,"next_back","","",48,null],[11,"call_once","","",48,null],[11,"call_once","","",48,null],[11,"clone","","",48,null],[11,"borrow","","",48,null],[11,"borrow_mut","","",48,null],[11,"as_ref","","",48,null],[11,"as_mut","","",48,null],[11,"borrow","collections::borrow","",120,null],[11,"clone","","",120,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",120,null],[11,"into_owned","","Extracts the owned data.",120,null],[11,"deref","","",120,null],[11,"cmp","","",120,null],[11,"eq","","",120,null],[11,"partial_cmp","","",120,null],[11,"fmt","","",120,null],[11,"fmt","","",120,null],[11,"hash","","",120,null],[11,"as_ref","","",120,null],[11,"cmp","collections::string","",121,null],[11,"partial_cmp","","",121,null],[11,"lt","","",121,null],[11,"le","","",121,null],[11,"gt","","",121,null],[11,"ge","","",121,null],[11,"fmt","","",54,null],[11,"fmt","","",55,null],[11,"new","","Creates a new empty `String`.",121,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",121,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",121,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",121,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",121,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",121,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",121,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",121,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",121,null],[11,"as_str","","Extracts a string slice containing the entire string.",121,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",121,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",121,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",121,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",121,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",121,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",121,null],[11,"push","","Appends the given `char` to the end of this `String`.",121,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",121,null],[11,"truncate","","Shortens this `String` to the specified length.",121,null],[11,"pop","","Removes the last character from the string buffer and returns it.",121,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",121,null],[11,"insert","","Inserts a character into this `String` at a byte position.",121,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",121,null],[11,"len","","Returns the length of this `String`, in bytes.",121,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",121,null],[11,"clear","","Truncates this `String`, removing all contents.",121,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",121,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",121,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",54,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",54,null],[11,"fmt","","",54,null],[11,"fmt","","",55,null],[11,"clone","","",121,null],[11,"clone_from","","",121,null],[11,"from_iter","","",121,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",121,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",121,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",121,null],[11,"extend","","",121,null],[11,"extend","","",121,null],[11,"extend","","",121,null],[11,"eq","","",121,null],[11,"ne","","",121,null],[11,"eq","","",121,null],[11,"ne","","",121,null],[11,"eq","","",121,null],[11,"ne","","",121,null],[11,"eq","collections::borrow","",120,null],[11,"ne","","",120,null],[11,"eq","","",120,null],[11,"ne","","",120,null],[11,"eq","","",120,null],[11,"ne","","",120,null],[11,"eq","collections::string","",121,null],[11,"ne","","",121,null],[11,"default","","",121,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",121,null],[11,"fmt","","",121,null],[11,"hash","","",121,null],[11,"add","","",121,null],[11,"index","","",121,null],[11,"index","","",121,null],[11,"index","","",121,null],[11,"index","","",121,null],[11,"index","","",121,null],[11,"index","","",121,null],[11,"index_mut","","",121,null],[11,"index_mut","","",121,null],[11,"index_mut","","",121,null],[11,"index_mut","","",121,null],[11,"index_mut","","",121,null],[11,"index_mut","","",121,null],[11,"deref","","",121,null],[11,"deref_mut","","",121,null],[11,"from_str","","",121,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",56,null],[11,"fmt","","",56,null],[11,"fmt","","",56,null],[11,"eq","","",56,null],[11,"as_ref","","",121,null],[11,"as_ref","","",121,null],[11,"from","","",121,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",120,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",120,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",121,null],[11,"write_str","","",121,null],[11,"write_char","","",121,null],[11,"drop","","",303,null],[11,"next","","",303,null],[11,"size_hint","","",303,null],[11,"next_back","","",303,null],[11,"borrow","collections::vec","",94,null],[11,"borrow_mut","","",94,null],[11,"fmt","core::hash::sip","",304,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",304,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",304,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",304,null],[11,"finish","","",304,null],[11,"clone","","",304,null],[11,"default","","",304,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",305,null],[11,"build_hasher","","",305,null],[11,"clone","","",305,null],[11,"default","","",305,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"hash","core::option","",306,null],[11,"fmt","","",306,null],[11,"cmp","","",306,null],[11,"partial_cmp","","",306,null],[11,"lt","","",306,null],[11,"le","","",306,null],[11,"gt","","",306,null],[11,"ge","","",306,null],[11,"eq","","",306,null],[11,"ne","","",306,null],[11,"clone","","",306,null],[11,"is_some","","Returns `true` if the option is a `Some` value",306,null],[11,"is_none","","Returns `true` if the option is a `None` value",306,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",306,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",306,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",306,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",306,null],[11,"unwrap_or","","Returns the contained value or a default.",306,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",306,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",306,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",306,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",306,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",306,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",306,null],[11,"iter","","Returns an iterator over the possibly contained value.",306,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",306,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",306,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",306,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",306,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",306,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",306,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",306,null],[11,"unwrap_or_default","","Returns the contained value or a default",306,null],[11,"default","","",306,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",306,null],[11,"fmt","","",307,null],[11,"next","","",307,null],[11,"size_hint","","",307,null],[11,"next_back","","",307,null],[11,"clone","","",307,null],[11,"fmt","","",308,null],[11,"next","","",308,null],[11,"size_hint","","",308,null],[11,"next_back","","",308,null],[11,"fmt","","",309,null],[11,"clone","","",309,null],[11,"next","","",309,null],[11,"size_hint","","",309,null],[11,"next_back","","",309,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",306,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",310,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",310,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",310,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",310,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",310,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",310,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",310,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",310,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",310,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",310,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",310,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",310,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",310,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",310,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",310,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",310,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",310,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",310,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",310,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",310,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",310,null],[11,"hash","","",310,null],[11,"fmt","","",310,null],[11,"fmt","","",310,null],[11,"fmt","","",310,null],[11,"from","","",310,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",311,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",311,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",311,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",311,null],[11,"fmt","","",311,null],[11,"default","","",311,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",310,null],[11,"as_ref","","",310,null],[11,"new","core::ptr","Creates a new `Unique`.",312,null],[11,"get","","Dereferences the content.",312,null],[11,"get_mut","","Mutably dereferences the content.",312,null],[11,"deref","","",312,null],[11,"fmt","","",312,null],[11,"new","","Creates a new `Shared`.",313,null],[11,"clone","","",313,null],[11,"deref","","",313,null],[11,"fmt","","",313,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",94,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",94,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",94,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",94,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",94,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",94,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",94,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",94,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",94,null],[11,"as_slice","","Extracts a slice containing the entire vector.",94,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",94,null],[11,"set_len","","Sets the length of a vector.",94,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",94,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",94,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",94,null],[11,"retain","","Retains only the elements specified by the predicate.",94,null],[11,"push","","Appends an element to the back of a collection.",94,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",94,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",94,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",94,null],[11,"clear","","Clears the vector, removing all values.",94,null],[11,"len","","Returns the number of elements in the vector.",94,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",94,null],[11,"split_off","","Splits the collection into two at the given index.",94,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",94,null],[11,"extend_from_slice","","Appends all elements in a slice to the `Vec`.",94,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",94,null],[11,"clone","","",94,null],[11,"clone_from","","",94,null],[11,"hash","","",94,null],[11,"index","","",94,null],[11,"index_mut","","",94,null],[11,"index","","",94,null],[11,"index","","",94,null],[11,"index","","",94,null],[11,"index","","",94,null],[11,"index","","",94,null],[11,"index","","",94,null],[11,"index_mut","","",94,null],[11,"index_mut","","",94,null],[11,"index_mut","","",94,null],[11,"index_mut","","",94,null],[11,"index_mut","","",94,null],[11,"index_mut","","",94,null],[11,"deref","","",94,null],[11,"deref_mut","","",94,null],[11,"from_iter","","",94,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",94,null],[11,"extend","","",94,null],[11,"extend","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","collections::borrow","",120,null],[11,"ne","","",120,null],[11,"eq","","",120,null],[11,"ne","","",120,null],[11,"eq","","",120,null],[11,"ne","","",120,null],[11,"eq","collections::vec","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"eq","","",94,null],[11,"ne","","",94,null],[11,"partial_cmp","","",94,null],[11,"cmp","","",94,null],[11,"drop","","",94,null],[11,"default","","",94,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",94,null],[11,"as_ref","","",94,null],[11,"as_mut","","",94,null],[11,"as_ref","","",94,null],[11,"as_mut","","",94,null],[11,"from","","",94,null],[11,"from","","",94,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",120,null],[11,"from","","",120,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",120,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",314,null],[11,"size_hint","","",314,null],[11,"count","","",314,null],[11,"next_back","","",314,null],[11,"clone","","",314,null],[11,"drop","","",314,null],[11,"next","","",315,null],[11,"size_hint","","",315,null],[11,"next_back","","",315,null],[11,"drop","","",315,null],[11,"clone","core::raw","",316,null],[11,"clone","","",317,null],[11,"eq","core::ops","",318,null],[11,"clone","","",318,null],[11,"fmt","","",318,null],[11,"eq","","",319,null],[11,"ne","","",319,null],[11,"clone","","",319,null],[11,"fmt","","",319,null],[11,"contains","","# Examples",319,null],[11,"eq","","",320,null],[11,"ne","","",320,null],[11,"clone","","",320,null],[11,"fmt","","",320,null],[11,"contains","","# Examples",320,null],[11,"eq","","",321,null],[11,"ne","","",321,null],[11,"clone","","",321,null],[11,"fmt","","",321,null],[11,"contains","","# Examples",321,null],[11,"eq","","",322,null],[11,"ne","","",322,null],[11,"clone","","",322,null],[11,"fmt","","",322,null],[11,"from","","",322,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",322,null],[11,"eq","","",323,null],[11,"ne","","",323,null],[11,"clone","","",323,null],[11,"fmt","","",323,null],[11,"contains","","# Examples",323,null],[11,"fmt","ethcore::client","",324,null],[11,"fmt","","",324,null],[11,"is","","Returns true if the boxed type is the same as `T`",324,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",324,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",324,null],[11,"is","","Forwards to the method defined on the type `Any`.",324,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",324,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",324,null],[11,"hash","core::any","",325,null],[11,"fmt","","",325,null],[11,"eq","","",325,null],[11,"ne","","",325,null],[11,"clone","","",325,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",325,{"inputs":[],"output":{"name":"typeid"}}],[11,"hash","core::result","",326,null],[11,"fmt","","",326,null],[11,"cmp","","",326,null],[11,"partial_cmp","","",326,null],[11,"lt","","",326,null],[11,"le","","",326,null],[11,"gt","","",326,null],[11,"ge","","",326,null],[11,"eq","","",326,null],[11,"ne","","",326,null],[11,"clone","","",326,null],[11,"is_ok","","Returns true if the result is `Ok`",326,null],[11,"is_err","","Returns true if the result is `Err`",326,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",326,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",326,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",326,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",326,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",326,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",326,null],[11,"iter","","Returns an iterator over the possibly contained value.",326,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",326,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",326,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",326,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",326,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",326,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",326,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",326,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",326,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",326,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",326,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",326,null],[11,"fmt","","",327,null],[11,"next","","",327,null],[11,"size_hint","","",327,null],[11,"next_back","","",327,null],[11,"clone","","",327,null],[11,"fmt","","",328,null],[11,"next","","",328,null],[11,"size_hint","","",328,null],[11,"next_back","","",328,null],[11,"fmt","","",329,null],[11,"next","","",329,null],[11,"size_hint","","",329,null],[11,"next_back","","",329,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",326,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"next","rustc_unicode::char","",330,null],[11,"next","","",331,null],[11,"clone","","",332,null],[11,"eq","","",57,null],[11,"ne","","",57,null],[11,"clone","","",57,null],[11,"fmt","","",57,null],[11,"next","","",332,null],[11,"size_hint","","",332,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",57,null],[11,"fmt","","",57,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",333,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",333,null],[11,"set","","Sets the contained value.",333,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",333,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",333,null],[11,"clone","","",333,null],[11,"default","","",333,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",333,null],[11,"partial_cmp","","",333,null],[11,"lt","","",333,null],[11,"le","","",333,null],[11,"gt","","",333,null],[11,"ge","","",333,null],[11,"cmp","","",333,null],[11,"fmt","","",334,null],[11,"eq","","",334,null],[11,"clone","","",334,null],[11,"new","","Creates a new `RefCell` containing `value`.",335,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",335,null],[11,"borrow_state","","Query the current state of this `RefCell`",335,null],[11,"borrow","","Immutably borrows the wrapped value.",335,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",335,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",335,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",335,null],[11,"clone","","",335,null],[11,"default","","",335,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",335,null],[11,"partial_cmp","","",335,null],[11,"lt","","",335,null],[11,"le","","",335,null],[11,"gt","","",335,null],[11,"ge","","",335,null],[11,"cmp","","",335,null],[11,"deref","","",336,null],[11,"clone","","Copies a `Ref`.",336,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",336,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",336,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",337,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",337,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"deref","","",337,null],[11,"deref_mut","","",337,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",338,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",338,null],[11,"get","","Gets a mutable pointer to the wrapped value.",338,null],[11,"default","","",338,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::iter::range","",339,null],[11,"clone","","",339,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",320,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",319,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",322,null],[11,"next","core::iter::range","",339,null],[11,"size_hint","","",339,null],[11,"next","","",339,null],[11,"size_hint","","",339,null],[11,"next","","",339,null],[11,"size_hint","","",339,null],[11,"next","core::ops","",319,null],[11,"size_hint","","",319,null],[11,"next_back","","",319,null],[11,"next","","",320,null],[11,"next","","",322,null],[11,"size_hint","","",322,null],[11,"next_back","","",322,null],[11,"fmt","core::iter::sources","",340,null],[11,"clone","","",340,null],[11,"next","","",340,null],[11,"size_hint","","",340,null],[11,"next_back","","",340,null],[11,"fmt","","",341,null],[11,"next","","",341,null],[11,"size_hint","","",341,null],[11,"next_back","","",341,null],[11,"len","","",341,null],[11,"clone","","",341,null],[11,"default","","",341,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",342,null],[11,"clone","","",342,null],[11,"next","","",342,null],[11,"size_hint","","",342,null],[11,"next_back","","",342,null],[11,"len","","",342,null],[11,"fmt","core::iter","",343,null],[11,"clone","","",343,null],[11,"next","","",343,null],[11,"size_hint","","",343,null],[11,"next_back","","",343,null],[11,"fmt","","",344,null],[11,"clone","","",344,null],[11,"next","","",344,null],[11,"size_hint","","",344,null],[11,"next_back","","",344,null],[11,"fmt","","",345,null],[11,"clone","","",345,null],[11,"next","","",345,null],[11,"size_hint","","",345,null],[11,"fmt","","",346,null],[11,"clone","","",346,null],[11,"next","","",346,null],[11,"count","","",346,null],[11,"nth","","",346,null],[11,"find","","",346,null],[11,"last","","",346,null],[11,"size_hint","","",346,null],[11,"next_back","","",346,null],[11,"fmt","","",347,null],[11,"clone","","",347,null],[11,"next","","",347,null],[11,"size_hint","","",347,null],[11,"next_back","","",347,null],[11,"clone","","",348,null],[11,"fmt","","",348,null],[11,"next","","",348,null],[11,"size_hint","","",348,null],[11,"next_back","","",348,null],[11,"clone","","",349,null],[11,"fmt","","",349,null],[11,"next","","",349,null],[11,"size_hint","","",349,null],[11,"next_back","","",349,null],[11,"clone","","",350,null],[11,"fmt","","",350,null],[11,"next","","",350,null],[11,"size_hint","","",350,null],[11,"next_back","","",350,null],[11,"fmt","","",351,null],[11,"clone","","",351,null],[11,"next","","# Overflow Behavior",351,null],[11,"size_hint","","",351,null],[11,"nth","","",351,null],[11,"count","","",351,null],[11,"next_back","","",351,null],[11,"fmt","","",352,null],[11,"clone","","",352,null],[11,"next","","",352,null],[11,"count","","",352,null],[11,"nth","","",352,null],[11,"last","","",352,null],[11,"size_hint","","",352,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",352,null],[11,"is_empty","","Checks if the iterator has finished iterating.",352,null],[11,"clone","","",353,null],[11,"fmt","","",353,null],[11,"next","","",353,null],[11,"size_hint","","",353,null],[11,"clone","","",354,null],[11,"fmt","","",354,null],[11,"next","","",354,null],[11,"size_hint","","",354,null],[11,"fmt","","",355,null],[11,"clone","","",355,null],[11,"next","","",355,null],[11,"nth","","",355,null],[11,"count","","",355,null],[11,"last","","",355,null],[11,"size_hint","","",355,null],[11,"next_back","","",355,null],[11,"fmt","","",356,null],[11,"clone","","",356,null],[11,"next","","",356,null],[11,"nth","","",356,null],[11,"size_hint","","",356,null],[11,"clone","","",357,null],[11,"fmt","","",357,null],[11,"next","","",357,null],[11,"size_hint","","",357,null],[11,"clone","","",358,null],[11,"fmt","","",358,null],[11,"next","","",358,null],[11,"size_hint","","",358,null],[11,"next_back","","",358,null],[11,"fmt","","",359,null],[11,"clone","","",359,null],[11,"next","","",359,null],[11,"nth","","",359,null],[11,"last","","",359,null],[11,"count","","",359,null],[11,"size_hint","","",359,null],[11,"next_back","","",359,null],[11,"clone","","",360,null],[11,"fmt","","",360,null],[11,"next","","",360,null],[11,"size_hint","","",360,null],[11,"next_back","","",360,null],[11,"hash","core::marker","",361,null],[11,"eq","","",361,null],[11,"partial_cmp","","",361,null],[11,"cmp","","",361,null],[11,"clone","","",361,null],[11,"default","","",361,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"clone","collections::str","",362,null],[11,"next","","",362,null],[11,"size_hint","","",362,null],[11,"borrow","collections::string","",121,null],[11,"fmt","core::str::pattern","",363,null],[11,"eq","","",363,null],[11,"ne","","",363,null],[11,"clone","","",363,null],[11,"fmt","","",364,null],[11,"clone","","",364,null],[11,"haystack","","",364,null],[11,"next","","",364,null],[11,"next_match","","",364,null],[11,"next_reject","","",364,null],[11,"next_back","","",364,null],[11,"next_match_back","","",364,null],[11,"next_reject_back","","",364,null],[11,"fmt","","",365,null],[11,"clone","","",365,null],[11,"haystack","","",365,null],[11,"next","","",365,null],[11,"next_match","","",365,null],[11,"next_reject","","",365,null],[11,"next_back","","",365,null],[11,"next_match_back","","",365,null],[11,"next_reject_back","","",365,null],[11,"clone","","",366,null],[11,"fmt","","",366,null],[11,"haystack","","",366,null],[11,"next","","",366,null],[11,"next_match","","",366,null],[11,"next_reject","","",366,null],[11,"next_back","","",366,null],[11,"next_match_back","","",366,null],[11,"next_reject_back","","",366,null],[11,"fmt","","",367,null],[11,"clone","","",367,null],[11,"haystack","","",367,null],[11,"next","","",367,null],[11,"next_match","","",367,null],[11,"next_back","","",367,null],[11,"next_match_back","","",367,null],[11,"hash","core::cmp","",368,null],[11,"fmt","","",368,null],[11,"eq","","",368,null],[11,"clone","","",368,null],[11,"reverse","","Reverse the `Ordering`.",368,null],[11,"cmp","","",368,null],[11,"partial_cmp","","",368,null],[11,"eq","ethcore::client","",38,null],[11,"fmt","","",38,null],[11,"default","","",38,{"inputs":[],"output":{"name":"self"}}],[11,"compaction_profile","","Returns corresponding compaction profile.",38,null],[11,"from_str","","",38,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",37,null],[11,"ne","","",37,null],[11,"fmt","","",37,null],[11,"default","","",37,{"inputs":[],"output":{"name":"self"}}],[11,"default","","",26,{"inputs":[],"output":{"name":"clientconfig"}}],[11,"eq","","",26,null],[11,"ne","","",26,null],[11,"fmt","","",26,null],[11,"fmt","","",40,null],[11,"from","","",40,{"inputs":[{"name":"traceerror"}],"output":{"name":"self"}}],[11,"from","","",40,{"inputs":[{"name":"trieerror"}],"output":{"name":"self"}}],[11,"from","","",40,{"inputs":[{"name":"utilerror"}],"output":{"name":"self"}}],[11,"from","","",40,{"inputs":[{"name":"box"}],"output":{"name":"self"}}],[11,"fmt","","",40,null],[11,"clone","","",43,null],[11,"default","","",30,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates new test client.",30,{"inputs":[],"output":{"name":"self"}}],[11,"set_transaction_receipt","","Set the transaction receipt result",30,null],[11,"set_execution_result","","Set the execution result.",30,null],[11,"set_balance","","Set the balance of account `address` to `balance`.",30,null],[11,"set_nonce","","Set nonce of account `address` to `nonce`.",30,null],[11,"set_code","","Set `code` at `address`.",30,null],[11,"set_storage","","Set storage `position` to `value` for account `address`.",30,null],[11,"set_queue_size","","Set block queue size for testing",30,null],[11,"add_blocks","","Add blocks to test client.",30,null],[11,"corrupt_block","","Make a bad block by setting invalid extra data.",30,null],[11,"corrupt_block_parent","","Make a bad block by setting invalid parent hash.",30,null],[11,"block_hash_delta_minus","","TODO:",30,null],[11,"prepare_open_block","","",30,null],[11,"vm_factory","","",30,null],[11,"import_sealed_block","","",30,null],[11,"call","","",30,null],[11,"replay","","",30,null],[11,"block_total_difficulty","","",30,null],[11,"block_hash","","",30,null],[11,"nonce","","",30,null],[11,"latest_nonce","","",30,null],[11,"code","","",30,null],[11,"balance","","",30,null],[11,"latest_balance","","",30,null],[11,"storage_at","","",30,null],[11,"transaction","","",30,null],[11,"uncle","","",30,null],[11,"transaction_receipt","","",30,null],[11,"blocks_with_bloom","","",30,null],[11,"logs","","",30,null],[11,"last_hashes","","",30,null],[11,"best_block_header","","",30,null],[11,"block_header","","",30,null],[11,"block_body","","",30,null],[11,"block","","",30,null],[11,"block_status","","",30,null],[11,"tree_route","","",30,null],[11,"find_uncles","","",30,null],[11,"state_data","","",30,null],[11,"block_receipts","","",30,null],[11,"import_block","","",30,null],[11,"queue_info","","",30,null],[11,"clear_queue","","",30,null],[11,"chain_info","","",30,null],[11,"filter_traces","","",30,null],[11,"trace","","",30,null],[11,"transaction_traces","","",30,null],[11,"block_traces","","",30,null],[11,"queue_transactions","","",30,null],[11,"pending_transactions","","",30,null],[11,"fmt","","",23,null],[11,"eq","","",25,null],[11,"ne","","",25,null],[11,"fmt","","",25,null],[11,"clone","","",25,null],[11,"default","","",25,{"inputs":[],"output":{"name":"clientreport"}}],[11,"accrue_block","","Alter internal reporting to reflect the additional `block` has been processed.",25,null],[11,"new","","Create a new client with given spec and DB path and custom verifier.",369,{"inputs":[{"name":"clientconfig"},{"name":"spec"},{"name":"path"},{"name":"arc"},{"name":"iochannel"}],"output":{"name":"result"}}],[11,"add_notify","","Adds an actor to be notified on certain events",369,null],[11,"flush_queue","","Flush the block import queue.",369,null],[11,"import_verified_blocks","","This is triggered by a message coming from a block queue when the block is ready for insertion",369,null],[11,"import_queued_transactions","","Import transactions from the IO queue",369,null],[11,"state_at","","Attempt to get a copy of a specific block&#39;s final state.",369,null],[11,"state_at_beginning","","Attempt to get a copy of a specific block&#39;s beginning state.",369,null],[11,"state","","Get a copy of the best block&#39;s state.",369,null],[11,"blockchain_cache_info","","Get info on the cache.",369,null],[11,"report","","Get the report.",369,null],[11,"tick","","Tick the client.",369,null],[11,"block_number","","Look up the block number for the given block ID.",369,null],[11,"take_snapshot","","Take a snapshot.",369,null],[11,"call","","",369,null],[11,"replay","","",369,null],[11,"keep_alive","","",369,null],[11,"best_block_header","","",369,null],[11,"block_header","","",369,null],[11,"block_body","","",369,null],[11,"block","","",369,null],[11,"block_status","","",369,null],[11,"block_total_difficulty","","",369,null],[11,"nonce","","",369,null],[11,"block_hash","","",369,null],[11,"code","","",369,null],[11,"balance","","",369,null],[11,"storage_at","","",369,null],[11,"transaction","","",369,null],[11,"uncle","","",369,null],[11,"transaction_receipt","","",369,null],[11,"tree_route","","",369,null],[11,"find_uncles","","",369,null],[11,"state_data","","",369,null],[11,"block_receipts","","",369,null],[11,"import_block","","",369,null],[11,"queue_info","","",369,null],[11,"clear_queue","","",369,null],[11,"chain_info","","",369,null],[11,"blocks_with_bloom","","",369,null],[11,"logs","","",369,null],[11,"filter_traces","","",369,null],[11,"trace","","",369,null],[11,"transaction_traces","","",369,null],[11,"block_traces","","",369,null],[11,"last_hashes","","",369,null],[11,"queue_transactions","","",369,null],[11,"pending_transactions","","",369,null],[11,"prepare_open_block","","",369,null],[11,"vm_factory","","",369,null],[11,"import_sealed_block","","",369,null],[11,"on_panic","","",369,null],[11,"keep_alive","","",370,null],[11,"block_header","","",370,null],[11,"block_body","","",370,null],[11,"block","","",370,null],[11,"block_status","","",370,null],[11,"block_total_difficulty","","",370,null],[11,"nonce","","",370,null],[11,"latest_nonce","","",370,null],[11,"block_hash","","",370,null],[11,"code","","",370,null],[11,"balance","","",370,null],[11,"latest_balance","","",370,null],[11,"storage_at","","",370,null],[11,"latest_storage_at","","",370,null],[11,"transaction","","",370,null],[11,"uncle","","",370,null],[11,"transaction_receipt","","",370,null],[11,"tree_route","","",370,null],[11,"find_uncles","","",370,null],[11,"state_data","","",370,null],[11,"block_receipts","","",370,null],[11,"import_block","","",370,null],[11,"queue_info","","",370,null],[11,"clear_queue","","",370,null],[11,"chain_info","","",370,null],[11,"best_block_header","","",370,null],[11,"blocks_with_bloom","","",370,null],[11,"logs","","",370,null],[11,"call","","",370,null],[11,"replay","","",370,null],[11,"filter_traces","","",370,null],[11,"trace","","",370,null],[11,"transaction_traces","","",370,null],[11,"block_traces","","",370,null],[11,"last_hashes","","",370,null],[11,"queue_transactions","","",370,null],[11,"pending_transactions","","",370,null],[11,"gas_price_statistics","","",370,null],[11,"handshake","","",370,null],[11,"init","","",370,{"inputs":[{"name":"s"}],"output":{"name":"remoteclient"}}],[0,"chain_notify","","Chain notify interface",null,null],[3,"ChainNotifyClient","ethcore::client::chain_notify","",null,null],[8,"ChainNotify","","Represents what has to be handled by actor listening to chain events",null,null],[11,"new_blocks","","fires when chain has new blocks",371,null],[11,"start","","fires when chain achieves active mode",371,null],[11,"stop","","fires when chain achieves passive mode",371,null],[11,"new_blocks","","",372,null],[11,"start","","",372,null],[11,"stop","","",372,null],[11,"handshake","","",372,null],[11,"init","","",372,{"inputs":[{"name":"s"}],"output":{"name":"chainnotifyclient"}}],[11,"dispatch","ethcore::client","",371,null],[11,"dispatch_buf","","",371,null],[6,"LastHashes","","Simple vector of hashes, should be at most 256 items large, can be smaller if being used\nfor a block whose number is less than 257.",null,null],[17,"DB_COL_STATE","","Column for State",null,null],[17,"DB_COL_HEADERS","","Column for Block headers",null,null],[17,"DB_COL_BODIES","","Column for Block bodies",null,null],[17,"DB_COL_EXTRA","","Column for Extras",null,null],[17,"DB_COL_TRACE","","Column for Traces",null,null],[17,"DB_NO_OF_COLUMNS","","Number of columns in DB",null,null],[8,"BlockChainClient","","Blockchain database client. Owns and manages a blockchain and a block queue.",null,null],[11,"keep_alive","","Should be called by any external-facing interface when actively using the client.\nTo minimise chatter, there&#39;s no need to call more than once every 30s.",373,null],[10,"block_header","","Get raw block header data by block id.",373,null],[10,"block_body","","Get raw block body data by block id.\nBlock body is an RLP list of two items: uncles and transactions.",373,null],[10,"block","","Get raw block data by block header hash.",373,null],[10,"block_status","","Get block status by block header hash.",373,null],[10,"block_total_difficulty","","Get block total difficulty.",373,null],[10,"nonce","","Attempt to get address nonce at given block.\nMay not fail on BlockID::Latest.",373,null],[11,"latest_nonce","","Get address nonce at the latest block&#39;s state.",373,null],[10,"block_hash","","Get block hash.",373,null],[10,"code","","Get address code.",373,null],[10,"balance","","Get address balance at the given block&#39;s state.",373,null],[11,"latest_balance","","Get address balance at the latest block&#39;s state.",373,null],[10,"storage_at","","Get value of the storage at given position at the given block&#39;s state.",373,null],[11,"latest_storage_at","","Get value of the storage at given position at the latest block&#39;s state.",373,null],[10,"transaction","","Get transaction with given hash.",373,null],[10,"uncle","","Get uncle with given id.",373,null],[10,"transaction_receipt","","Get transaction receipt with given hash.",373,null],[10,"tree_route","","Get a tree route between `from` and `to`.\nSee `BlockChain::tree_route`.",373,null],[10,"find_uncles","","Get all possible uncle hashes for a block.",373,null],[10,"state_data","","Get latest state node",373,null],[10,"block_receipts","","Get raw block receipts data by block header hash.",373,null],[10,"import_block","","Import a block into the blockchain.",373,null],[10,"queue_info","","Get block queue information.",373,null],[10,"clear_queue","","Clear block queue and abort all import activity.",373,null],[10,"chain_info","","Get blockchain information.",373,null],[10,"best_block_header","","Get the best block header.",373,null],[10,"blocks_with_bloom","","Returns numbers of blocks containing given bloom.",373,null],[10,"logs","","Returns logs matching given filter.",373,null],[10,"call","","Makes a non-persistent transaction call.",373,null],[10,"replay","","Replays a given transaction for inspection.",373,null],[10,"filter_traces","","Returns traces matching given filter.",373,null],[10,"trace","","Returns trace with given id.",373,null],[10,"transaction_traces","","Returns traces created by transaction.",373,null],[10,"block_traces","","Returns traces created by transaction from block.",373,null],[10,"last_hashes","","Get last hashes starting from best block.",373,null],[10,"queue_transactions","","Queue transactions for importing.",373,null],[10,"pending_transactions","","list all transactions",373,null],[11,"gas_price_statistics","","Get the gas price distribution.",373,null],[8,"MiningBlockChainClient","","Extended client interface used for mining",null,null],[10,"prepare_open_block","","Returns OpenBlock prepared for closing.",374,null],[10,"vm_factory","","Returns EvmFactory.",374,null],[10,"import_sealed_block","","Import sealed block. Skips all verifications.",374,null],[0,"error","ethcore","General error types for use in ethcore.",null,null],[4,"ExecutionError","ethcore::error","Result of executing the transaction.",null,null],[13,"NotEnoughBaseGas","","Returned when there gas paid for transaction execution is\nlower than base gas required.",375,null],[12,"required","ethcore::error::ExecutionError","Absolute minimum gas required.",375,null],[12,"got","","Gas provided.",375,null],[13,"BlockGasLimitReached","ethcore::error","Returned when block (gas_used + gas) &gt; gas_limit.",375,null],[12,"gas_limit","ethcore::error::ExecutionError","Gas limit of block for transaction.",375,null],[12,"gas_used","","Gas used in block prior to transaction.",375,null],[12,"gas","","Amount of gas in block.",375,null],[13,"InvalidNonce","ethcore::error","Returned when transaction nonce does not match state nonce.",375,null],[12,"expected","ethcore::error::ExecutionError","Nonce expected.",375,null],[12,"got","","Nonce found.",375,null],[13,"NotEnoughCash","ethcore::error","Returned when cost of transaction (value + gas_price * gas) exceeds\ncurrent sender balance.",375,null],[12,"required","ethcore::error::ExecutionError","Minimum required balance.",375,null],[12,"got","","Actual balance.",375,null],[13,"Internal","ethcore::error","Returned when internal evm error occurs.",375,null],[13,"TransactionMalformed","","Returned when generic transaction occurs",375,null],[4,"CallError","","Result of executing the transaction.",null,null],[13,"TransactionNotFound","","Couldn&#39;t find the transaction in the chain.",376,null],[13,"StatePruned","","Couldn&#39;t find requested block&#39;s state in the chain.",376,null],[13,"Execution","","Error executing.",376,null],[4,"TransactionError","","Errors concerning transaction processing.",null,null],[13,"AlreadyImported","","Transaction is already imported to the queue",377,null],[13,"Old","","Transaction is not valid anymore (state already has higher nonce)",377,null],[13,"TooCheapToReplace","","Transaction has too low fee\n(there is already a transaction with the same sender-nonce but higher gas price)",377,null],[13,"LimitReached","","Transaction was not imported to the queue because limit has been reached.",377,null],[13,"InsufficientGasPrice","","Transaction&#39;s gas price is below threshold.",377,null],[12,"minimal","ethcore::error::TransactionError","Minimal expected gas price",377,null],[12,"got","","Transaction gas price",377,null],[13,"InsufficientBalance","ethcore::error","Sender doesn&#39;t have enough funds to pay for this transaction",377,null],[12,"balance","ethcore::error::TransactionError","Senders balance",377,null],[12,"cost","","Transaction cost",377,null],[13,"GasLimitExceeded","ethcore::error","Transactions gas is higher then current gas limit",377,null],[12,"limit","ethcore::error::TransactionError","Current gas limit",377,null],[12,"got","","Declared transaction gas",377,null],[13,"InvalidGasLimit","ethcore::error","Transaction&#39;s gas limit (aka gas) is invalid.",377,null],[4,"BlockError","","Errors concerning block processing.",null,null],[13,"TooManyUncles","","Block has too many uncles.",378,null],[13,"ExtraDataOutOfBounds","","Extra data is of an invalid length.",378,null],[13,"InvalidSealArity","","Seal is incorrect format.",378,null],[13,"TooMuchGasUsed","","Block has too much gas used.",378,null],[13,"InvalidUnclesHash","","Uncles hash in header is invalid.",378,null],[13,"UncleTooOld","","An uncle is from a generation too old.",378,null],[13,"UncleIsBrother","","An uncle is from the same generation as the block.",378,null],[13,"UncleInChain","","An uncle is already in the chain.",378,null],[13,"UncleParentNotInChain","","An uncle has a parent not in the chain.",378,null],[13,"InvalidStateRoot","","State root header field is invalid.",378,null],[13,"InvalidGasUsed","","Gas used header field is invalid.",378,null],[13,"InvalidTransactionsRoot","","Transactions root header field is invalid.",378,null],[13,"DifficultyOutOfBounds","","Difficulty is out of range; this can be used as an looser error prior to getting a definitive\nvalue for difficulty. This error needs only provide bounds of which it is out.",378,null],[13,"InvalidDifficulty","","Difficulty header field is invalid; this is a strong error used after getting a definitive\nvalue for difficulty (which is provided).",378,null],[13,"MismatchedH256SealElement","","Seal element of type H256 (max_hash for Ethash, but could be something else for\nother seal engines) is out of bounds.",378,null],[13,"InvalidProofOfWork","","Proof-of-work aspect of seal, which we assume is a 256-bit value, is invalid.",378,null],[13,"InvalidSeal","","Some low-level aspect of the seal is incorrect.",378,null],[13,"InvalidGasLimit","","Gas limit header field is invalid.",378,null],[13,"InvalidReceiptsRoot","","Receipts trie root header field is invalid.",378,null],[13,"InvalidTimestamp","","Timestamp header field is invalid.",378,null],[13,"InvalidLogBloom","","Log bloom header field is invalid.",378,null],[13,"InvalidParentHash","","Parent hash field of header is invalid; this is an invalid error indicating a logic flaw in the codebase.\nTODO: remove and favour an assert!/panic!.",378,null],[13,"InvalidNumber","","Number field of header is invalid.",378,null],[13,"RidiculousNumber","","Block number isn&#39;t sensible.",378,null],[13,"UnknownParent","","Parent given is unknown.",378,null],[13,"UnknownUncleParent","","Uncle parent given is unknown.",378,null],[4,"ImportError","","Import to the block queue result",null,null],[13,"AlreadyInChain","","Already in the block chain.",379,null],[13,"AlreadyQueued","","Already in the block queue.",379,null],[13,"KnownBad","","Already marked as bad from a previous import (could mean parent is bad).",379,null],[4,"Error","","General error type which should be capable of representing all errors in ethcore.",null,null],[13,"Client","","Client configuration error.",380,null],[13,"Util","","Error concerning a utility.",380,null],[13,"Block","","Error concerning block processing.",380,null],[13,"UnknownEngineName","","Unknown engine given.",380,null],[13,"Execution","","Error concerning EVM code execution.",380,null],[13,"Transaction","","Error concerning transaction processing.",380,null],[13,"Import","","Error concerning block import.",380,null],[13,"PowHashInvalid","","PoW hash is invalid or out of date.",380,null],[13,"PowInvalid","","The value of the nonce or mishash is invalid.",380,null],[13,"Trie","","Error concerning TrieDBs",380,null],[13,"Io","","Io crate error.",380,null],[13,"StdIo","","Standard io error.",380,null],[13,"Snappy","","Snappy error.",380,null],[13,"Snapshot","","Snapshot error.",380,null],[6,"ImportResult","","Result of import block operation.",null,null],[11,"clone","","",377,null],[11,"eq","","",377,null],[11,"ne","","",377,null],[11,"fmt","","",377,null],[11,"fmt","","",377,null],[11,"eq","","",378,null],[11,"ne","","",378,null],[11,"fmt","","",378,null],[11,"fmt","","",378,null],[11,"eq","","",379,null],[11,"fmt","","",379,null],[11,"fmt","","",379,null],[11,"fmt","","",380,null],[11,"fmt","","",380,null],[11,"from","","",380,{"inputs":[{"name":"clienterror"}],"output":{"name":"error"}}],[11,"from","","",380,{"inputs":[{"name":"transactionerror"}],"output":{"name":"error"}}],[11,"from","","",380,{"inputs":[{"name":"importerror"}],"output":{"name":"error"}}],[11,"from","","",380,{"inputs":[{"name":"blockerror"}],"output":{"name":"error"}}],[11,"from","","",380,{"inputs":[{"name":"executionerror"}],"output":{"name":"error"}}],[11,"from","","",380,{"inputs":[{"name":"cryptoerror"}],"output":{"name":"error"}}],[11,"from","","",380,{"inputs":[{"name":"decodererror"}],"output":{"name":"error"}}],[11,"from","","",380,{"inputs":[{"name":"utilerror"}],"output":{"name":"error"}}],[11,"from","","",380,{"inputs":[{"name":"ioerror"}],"output":{"name":"error"}}],[11,"from","","",380,{"inputs":[{"name":"trieerror"}],"output":{"name":"error"}}],[11,"from","","",380,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",380,{"inputs":[{"name":"blockimporterror"}],"output":{"name":"error"}}],[11,"from","","",380,{"inputs":[{"name":"invalidinput"}],"output":{"name":"error"}}],[11,"from","","",380,{"inputs":[{"name":"snapshoterror"}],"output":{"name":"error"}}],[11,"from","","",380,{"inputs":[{"name":"box"}],"output":{"name":"error"}}],[11,"from_bytes","","",378,null],[11,"to_bytes","","",378,null],[11,"from_bytes","","",379,null],[11,"to_bytes","","",379,null],[11,"from_bytes","","",377,null],[11,"to_bytes","","",377,null],[0,"ethereum","ethcore","Ethereum protocol module.",null,null],[5,"new_olympic","ethcore::ethereum","Create a new Olympic chain spec.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_frontier","","Create a new Frontier mainnet chain spec.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_classic","","Create a new Frontier mainnet chain spec without the DAO hardfork.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_frontier_test","","Create a new Frontier chain spec as though it never changes to Homestead.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_homestead_test","","Create a new Homestead chain spec as though it never changed from Frontier.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_daohardfork_test","","Create a new Frontier/Homestead/DAO chain spec with transition points at #5 and #8.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_mainnet_like","","Create a new Frontier main net chain spec without genesis accounts.",null,{"inputs":[],"output":{"name":"spec"}}],[5,"new_morden","","Create a new Morden chain spec.",null,{"inputs":[],"output":{"name":"spec"}}],[0,"ethash","","Export the ethash module.",null,null],[3,"EthashParams","ethcore::ethereum::ethash","Ethash params.",null,null],[12,"gas_limit_bound_divisor","","Gas limit divisor.",381,null],[12,"minimum_difficulty","","Minimum difficulty.",381,null],[12,"difficulty_bound_divisor","","Difficulty bound divisor.",381,null],[12,"duration_limit","","Block duration.",381,null],[12,"block_reward","","Block reward.",381,null],[12,"registrar","","Namereg contract address.",381,null],[12,"frontier_compatibility_mode_limit","","Homestead transition block number.",381,null],[12,"dao_hardfork_transition","","DAO hard-fork transition block (X).",381,null],[12,"dao_hardfork_beneficiary","","DAO hard-fork refund contract address (C).",381,null],[12,"dao_hardfork_accounts","","DAO hard-fork DAO accounts list (L)",381,null],[3,"Ethash","","Engine using Ethash proof-of-work consensus algorithm, suitable for Ethereum\nmainnet chains in the Olympic, Frontier and Homestead eras.",null,null],[11,"eq","","",381,null],[11,"ne","","",381,null],[11,"fmt","","",381,null],[11,"from","","",381,{"inputs":[{"name":"ethashparams"}],"output":{"name":"self"}}],[11,"new","","Create a new instance of Ethash engine",382,{"inputs":[{"name":"commonparams"},{"name":"ethashparams"},{"name":"btreemap"}],"output":{"name":"self"}}],[11,"name","","",382,null],[11,"version","","",382,null],[11,"seal_fields","","",382,null],[11,"params","","",382,null],[11,"builtins","","",382,null],[11,"extra_info","","Additional engine-specific information for the user/developer concerning `header`.",382,null],[11,"schedule","","",382,null],[11,"populate_from_parent","","",382,null],[11,"on_new_block","","",382,null],[11,"on_close_block","","Apply the block reward on finalisation of the block.\nThis assumes that all uncles are valid uncles (i.e. of at least one generation before the current).",382,null],[11,"verify_block_basic","","",382,null],[11,"verify_block_unordered","","",382,null],[11,"verify_block_family","","",382,null],[11,"verify_transaction_basic","","",382,null],[11,"verify_transaction","","",382,null],[11,"boundary_to_difficulty","","Convert an Ethash boundary to its original difficulty. Basically just `f(x) = 2^256 / x`.",382,{"inputs":[{"name":"h256"}],"output":{"name":"u256"}}],[11,"difficulty_to_boundary","","Convert an Ethash difficulty to the target boundary. Basically just `f(x) = 2^256 / x`.",382,{"inputs":[{"name":"u256"}],"output":{"name":"h256"}}],[0,"denominations","ethcore::ethereum","Export the denominations module.",null,null],[5,"ether","ethcore::ethereum::denominations","1 Ether in Wei",null,{"inputs":[],"output":{"name":"u256"}}],[5,"finney","","1 Finney in Wei",null,{"inputs":[],"output":{"name":"u256"}}],[5,"szabo","","1 Szabo in Wei",null,{"inputs":[],"output":{"name":"u256"}}],[5,"shannon","","1 Shannon in Wei",null,{"inputs":[],"output":{"name":"u256"}}],[5,"wei","","1 Wei in Wei",null,{"inputs":[],"output":{"name":"u256"}}],[0,"header","ethcore","Block header.",null,null],[3,"Header","ethcore::header","A block header.",null,null],[12,"parent_hash","","Parent hash.",383,null],[12,"timestamp","","Block timestamp.",383,null],[12,"number","","Block number.",383,null],[12,"author","","Block author.",383,null],[12,"transactions_root","","Transactions root.",383,null],[12,"uncles_hash","","Block uncles hash.",383,null],[12,"extra_data","","Block extra data.",383,null],[12,"state_root","","State root.",383,null],[12,"receipts_root","","Block receipts root.",383,null],[12,"log_bloom","","Block bloom.",383,null],[12,"gas_used","","Gas used for contracts execution.",383,null],[12,"gas_limit","","Block gas limit.",383,null],[12,"difficulty","","Block difficulty.",383,null],[12,"seal","","Vector of post-RLP-encoded fields.",383,null],[12,"hash","","The memoized hash of the RLP representation *including* the seal fields.",383,null],[12,"bare_hash","","The memoized hash of the RLP representation *without* the seal fields.",383,null],[6,"BlockNumber","","Type for Block number",null,null],[11,"clone","","",383,null],[11,"fmt","","",383,null],[11,"eq","","",383,null],[11,"default","","",383,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Create a new, default-valued, header.",383,{"inputs":[],"output":{"name":"self"}}],[11,"parent_hash","","Get the parent_hash field of the header.",383,null],[11,"timestamp","","Get the timestamp field of the header.",383,null],[11,"number","","Get the number field of the header.",383,null],[11,"author","","Get the author field of the header.",383,null],[11,"extra_data","","Get the extra data field of the header.",383,null],[11,"state_root","","Get the state root field of the header.",383,null],[11,"receipts_root","","Get the receipts root field of the header.",383,null],[11,"transactions_root","","Get the transactions root field of the header.",383,null],[11,"uncles_hash","","Get the uncles hash field of the header.",383,null],[11,"gas_limit","","Get the gas limit field of the header.",383,null],[11,"difficulty","","Get the difficulty field of the header.",383,null],[11,"seal","","Get the seal field of the header.",383,null],[11,"set_parent_hash","","Set the number field of the header.",383,null],[11,"set_uncles_hash","","Set the uncles hash field of the header.",383,null],[11,"set_state_root","","Set the state root field of the header.",383,null],[11,"set_transactions_root","","Set the transactions root field of the header.",383,null],[11,"set_receipts_root","","Set the receipts root field of the header.",383,null],[11,"set_log_bloom","","Set the log bloom field of the header.",383,null],[11,"set_timestamp","","Set the timestamp field of the header.",383,null],[11,"set_timestamp_now","","Set the timestamp field of the header to the current time.",383,null],[11,"set_number","","Set the number field of the header.",383,null],[11,"set_author","","Set the author field of the header.",383,null],[11,"set_extra_data","","Set the extra data field of the header.",383,null],[11,"set_gas_used","","Set the gas used field of the header.",383,null],[11,"set_gas_limit","","Set the gas limit field of the header.",383,null],[11,"set_difficulty","","Set the difficulty field of the header.",383,null],[11,"set_seal","","Set the seal field of the header.",383,null],[11,"hash","","Get the hash of this header (sha3 of the RLP).",383,null],[11,"bare_hash","","Get the hash of the header excluding the seal",383,null],[11,"note_dirty","","Note that some fields have changed. Resets the memoised hash.",383,null],[11,"stream_rlp","","Place this header into an RLP stream `s`, optionally `with_seal`.",383,null],[11,"rlp","","Get the RLP of this header, optionally `with_seal`.",383,null],[11,"rlp_sha3","","Get the SHA3 (Keccak) of this header, optionally `with_seal`.",383,null],[11,"decode","","",383,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"rlp_append","","",383,null],[0,"service","ethcore","Creates and registers client and network services.",null,null],[3,"ClientService","ethcore::service","Client service setup. Creates and registers client and network services with the IO subsystem.",null,null],[4,"ClientIoMessage","","Message type for external and internal events",null,null],[13,"NewChainHead","","Best Block Hash in chain has been changed",384,null],[13,"BlockVerified","","A block is ready",384,null],[13,"NewTransactions","","New transaction RLPs are ready to be imported",384,null],[13,"FeedStateChunk","","Feed a state chunk to the snapshot service",384,null],[13,"FeedBlockChunk","","Feed a block chunk to the snapshot service",384,null],[11,"clone","","",384,null],[11,"start","","Start the service in a separate thread.",385,{"inputs":[{"name":"clientconfig"},{"name":"spec"},{"name":"path"},{"name":"arc"}],"output":{"name":"result"}}],[11,"add_node","","Add a node to network",385,null],[11,"register_io_handler","","Get general IO interface",385,null],[11,"client","","Get client interface",385,null],[11,"snapshot_service","","Get snapshot interface.",385,null],[11,"io","","Get network service component",385,null],[11,"add_notify","","Set the actor to be notified on certain chain events",385,null],[11,"on_panic","","",385,null],[0,"trace","ethcore","Tracing",null,null],[3,"Config","ethcore::trace","Traces config.",null,null],[12,"enabled","","Indicates if tracing should be enabled or not.\nIf it&#39;s None, it will be automatically configured.",386,null],[12,"blooms","","Traces blooms configuration.",386,null],[12,"pref_cache_size","","Preferef cache-size.",386,null],[12,"max_cache_size","","Max cache-size.",386,null],[3,"TraceDB","","Trace database.",null,null],[3,"VMTrace","","A record of a full VM trace for a CALL/CREATE.",null,null],[12,"parent_step","","The step (i.e. index into operations) at which this trace corresponds.",387,null],[12,"code","","The code to be executed.",387,null],[12,"operations","","The operations executed.",387,null],[12,"subs","","The sub traces for each interior action performed as part of this call/create.\nThre is a 1:1 correspondance between these and a CALL/CREATE/CALLCODE/DELEGATECALL instruction.",387,null],[3,"VMOperation","","A record of the execution of a single VM operation.",null,null],[12,"pc","","The program counter.",388,null],[12,"instruction","","The instruction executed.",388,null],[12,"gas_cost","","The gas cost for this instruction.",388,null],[12,"executed","","Information concerning the execution of the operation.",388,null],[3,"VMExecutedOperation","","A record of an executed VM operation.",null,null],[12,"gas_used","","The total gas used.",389,null],[12,"stack_push","","The stack item placed, if any.",389,null],[12,"mem_diff","","If altered, the memory delta.",389,null],[12,"store_diff","","The altered storage value, if any.",389,null],[3,"MemoryDiff","","A diff of some chunk of memory.",null,null],[12,"offset","","Offset into memory the change begins.",390,null],[12,"data","","The changed data.",390,null],[3,"StorageDiff","","A diff of some storage value.",null,null],[12,"location","","Which key in storage is changed.",391,null],[12,"value","","What the value has been changed to.",391,null],[3,"FlatTrace","","Trace localized in vector of traces produced by a single transaction.",null,null],[12,"action","","Type of action performed by a transaction.",392,null],[12,"result","","Result of this action.",392,null],[12,"subtraces","","Number of subtraces.",392,null],[12,"trace_address","","Exact location of trace.",392,null],[3,"FlatTransactionTraces","","Represents all traces produced by a single transaction.",null,null],[3,"FlatBlockTraces","","Represents all traces produced by transactions in a single block.",null,null],[3,"NoopTracer","","Nonoperative tracer. Does not trace anything.",null,null],[3,"NoopVMTracer","","Nonoperative VM tracer. Does not trace anything.",null,null],[3,"ExecutiveTracer","","Simple executive tracer. Traces all calls and creates. Ignores delegatecalls.",null,null],[3,"ExecutiveVMTracer","","Simple VM tracer. Traces all operations.",null,null],[3,"Filter","","Traces filter.",null,null],[12,"range","","Block range.",393,null],[12,"from_address","","From address filter.",393,null],[12,"to_address","","To address filter.",393,null],[3,"AddressesFilter","","Addresses filter.",null,null],[3,"ImportRequest","","Traces import request.",null,null],[12,"traces","","Traces to import.",394,null],[12,"block_hash","","Hash of traces block.",394,null],[12,"block_number","","Number of traces block.",394,null],[12,"enacted","","Blocks enacted by this import.",394,null],[12,"retracted","","Number of blocks retracted by this import.",394,null],[3,"LocalizedTrace","","Localized trace.",null,null],[12,"action","","Type of action performed by a transaction.",395,null],[12,"result","","Result of this action.",395,null],[12,"subtraces","","Number of subtraces.",395,null],[12,"trace_address","","Exact location of trace.",395,null],[12,"transaction_number","","Transaction number within the block.",395,null],[12,"transaction_hash","","Signed transaction hash.",395,null],[12,"block_number","","Block number.",395,null],[12,"block_hash","","Block hash.",395,null],[4,"Switch","","3-value enum.",null,null],[13,"On","","True.",39,null],[13,"Off","","False.",39,null],[13,"Auto","","Auto.",39,null],[4,"Error","","`TraceDB` errors.",null,null],[13,"ResyncRequired","","Returned when tracing is enabled,\nbut database does not contain traces of old transactions.",396,null],[11,"eq","ethcore::client","",39,null],[11,"clone","","",39,null],[11,"fmt","","",39,null],[11,"default","","",39,{"inputs":[],"output":{"name":"self"}}],[11,"from_str","","",39,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"turn_to","","Tries to turn old switch to new value.",39,null],[11,"clone","ethcore::trace","",386,null],[11,"eq","","",386,null],[11,"ne","","",386,null],[11,"fmt","","",386,null],[11,"default","","",386,{"inputs":[],"output":{"name":"self"}}],[11,"blooms_at","","",397,null],[11,"new","","Creates new instance of `TraceDB`.",397,{"inputs":[{"name":"config"},{"name":"arc"},{"name":"arc"}],"output":{"name":"result"}}],[11,"collect_garbage","","Ticks our cache system and throws out any old data.",397,null],[11,"tracing_enabled","","",397,null],[11,"import","","Traces of import request&#39;s enacted blocks are expected to be already in database\nor to be the currently inserted trace.",397,null],[11,"trace","","",397,null],[11,"transaction_traces","","",397,null],[11,"block_traces","","",397,null],[11,"filter","","",397,null],[11,"fmt","","",396,null],[11,"fmt","","",396,null],[11,"default","","",398,{"inputs":[],"output":{"name":"executivetracer"}}],[11,"prepare_trace_call","","",398,null],[11,"prepare_trace_create","","",398,null],[11,"prepare_trace_output","","",398,null],[11,"trace_call","","",398,null],[11,"trace_create","","",398,null],[11,"trace_failed_call","","",398,null],[11,"trace_failed_create","","",398,null],[11,"trace_suicide","","",398,null],[11,"subtracer","","",398,null],[11,"traces","","",398,null],[11,"toplevel","","Create a new top-level instance.",399,{"inputs":[],"output":{"name":"self"}}],[11,"trace_prepare_execute","","",399,null],[11,"trace_executed","","",399,null],[11,"prepare_subtrace","","",399,null],[11,"done_subtrace","","",399,null],[11,"drain","","",399,null],[11,"prepare_trace_call","","",400,null],[11,"prepare_trace_create","","",400,null],[11,"prepare_trace_output","","",400,null],[11,"trace_call","","",400,null],[11,"trace_create","","",400,null],[11,"trace_failed_call","","",400,null],[11,"trace_failed_create","","",400,null],[11,"trace_suicide","","",400,null],[11,"subtracer","","",400,null],[11,"traces","","",400,null],[11,"trace_prepare_execute","","Trace the preparation to execute a single instruction.",401,null],[11,"trace_executed","","Trace the finalised execution of a single instruction.",401,null],[11,"prepare_subtrace","","Spawn subtracer which will be used to trace deeper levels of execution.",401,null],[11,"done_subtrace","","Spawn subtracer which will be used to trace deeper levels of execution.",401,null],[11,"drain","","Consumes self and returns all VM traces.",401,null],[0,"filter","","Trace filters type definitions",null,null],[3,"AddressesFilter","ethcore::trace::filter","Addresses filter.",null,null],[3,"Filter","","Traces filter.",null,null],[12,"range","","Block range.",393,null],[12,"from_address","","From address filter.",393,null],[12,"to_address","","To address filter.",393,null],[0,"flat","ethcore::trace","Flat trace module",null,null],[3,"FlatTrace","ethcore::trace::flat","Trace localized in vector of traces produced by a single transaction.",null,null],[12,"action","","Type of action performed by a transaction.",392,null],[12,"result","","Result of this action.",392,null],[12,"subtraces","","Number of subtraces.",392,null],[12,"trace_address","","Exact location of trace.",392,null],[3,"FlatTransactionTraces","","Represents all traces produced by a single transaction.",null,null],[3,"FlatBlockTraces","","Represents all traces produced by transactions in a single block.",null,null],[0,"trace","ethcore::trace","Tracing datatypes.",null,null],[3,"CallResult","ethcore::trace::trace","`Call` result.",null,null],[12,"gas_used","","Gas used by call.",402,null],[12,"output","","Call Output.",402,null],[3,"CreateResult","","`Create` result.",null,null],[12,"gas_used","","Gas used by create.",403,null],[12,"code","","Code of the newly created contract.",403,null],[12,"address","","Address of the newly created contract.",403,null],[3,"Call","","Description of a _call_ action, either a `CALL` operation or a message transction.",null,null],[12,"from","","The sending account.",404,null],[12,"to","","The destination account.",404,null],[12,"value","","The value transferred to the destination account.",404,null],[12,"gas","","The gas available for executing the call.",404,null],[12,"input","","The input data provided to the call.",404,null],[12,"call_type","","The type of the call.",404,null],[3,"Create","","Description of a _create_ action, either a `CREATE` operation or a create transction.",null,null],[12,"from","","The address of the creator.",405,null],[12,"value","","The value with which the new account is endowed.",405,null],[12,"gas","","The gas available for the creation init code.",405,null],[12,"init","","The init code.",405,null],[3,"Suicide","","Suicide action.",null,null],[12,"address","","Suicided address.",406,null],[12,"refund_address","","Suicided contract heir.",406,null],[12,"balance","","Balance of the contract just before suicide.",406,null],[3,"MemoryDiff","","A diff of some chunk of memory.",null,null],[12,"offset","","Offset into memory the change begins.",390,null],[12,"data","","The changed data.",390,null],[3,"StorageDiff","","A diff of some storage value.",null,null],[12,"location","","Which key in storage is changed.",391,null],[12,"value","","What the value has been changed to.",391,null],[3,"VMExecutedOperation","","A record of an executed VM operation.",null,null],[12,"gas_used","","The total gas used.",389,null],[12,"stack_push","","The stack item placed, if any.",389,null],[12,"mem_diff","","If altered, the memory delta.",389,null],[12,"store_diff","","The altered storage value, if any.",389,null],[3,"VMOperation","","A record of the execution of a single VM operation.",null,null],[12,"pc","","The program counter.",388,null],[12,"instruction","","The instruction executed.",388,null],[12,"gas_cost","","The gas cost for this instruction.",388,null],[12,"executed","","Information concerning the execution of the operation.",388,null],[3,"VMTrace","","A record of a full VM trace for a CALL/CREATE.",null,null],[12,"parent_step","","The step (i.e. index into operations) at which this trace corresponds.",387,null],[12,"code","","The code to be executed.",387,null],[12,"operations","","The operations executed.",387,null],[12,"subs","","The sub traces for each interior action performed as part of this call/create.\nThre is a 1:1 correspondance between these and a CALL/CREATE/CALLCODE/DELEGATECALL instruction.",387,null],[4,"Action","","Description of an action that we trace; will be either a call or a create.",null,null],[13,"Call","","It&#39;s a call action.",407,null],[13,"Create","","It&#39;s a create action.",407,null],[13,"Suicide","","Suicide.",407,null],[4,"Res","","The result of the performed action.",null,null],[13,"Call","","Successful call action result.",408,null],[13,"Create","","Successful create action result.",408,null],[13,"FailedCall","","Failed call.",408,null],[13,"FailedCreate","","Failed create.",408,null],[13,"None","","None",408,null],[0,"localized","ethcore::trace","Localized traces type definitions",null,null],[3,"LocalizedTrace","ethcore::trace::localized","Localized trace.",null,null],[12,"action","","Type of action performed by a transaction.",395,null],[12,"result","","Result of this action.",395,null],[12,"subtraces","","Number of subtraces.",395,null],[12,"trace_address","","Exact location of trace.",395,null],[12,"transaction_number","","Transaction number within the block.",395,null],[12,"transaction_hash","","Signed transaction hash.",395,null],[12,"block_number","","Block number.",395,null],[12,"block_hash","","Block hash.",395,null],[8,"Tracer","ethcore::trace","This trait is used by executive to build traces.",null,null],[10,"prepare_trace_call","","Prepares call trace for given params. Noop tracer should return None.",409,null],[10,"prepare_trace_create","","Prepares create trace for given params. Noop tracer should return None.",409,null],[10,"prepare_trace_output","","Prepare trace output. Noop tracer should return None.",409,null],[10,"trace_call","","Stores trace call info.",409,null],[10,"trace_create","","Stores trace create info.",409,null],[10,"trace_failed_call","","Stores failed call trace.",409,null],[10,"trace_failed_create","","Stores failed create trace.",409,null],[10,"trace_suicide","","Stores suicide info.",409,null],[10,"subtracer","","Spawn subtracer which will be used to trace deeper levels of execution.",409,null],[10,"traces","","Consumes self and returns all traces.",409,null],[8,"VMTracer","","Used by executive to build VM traces.",null,null],[11,"trace_prepare_execute","","Trace the preparation to execute a single instruction.\n@returns true if `trace_executed` should be called.",410,null],[11,"trace_executed","","Trace the finalised execution of a single instruction.",410,null],[10,"prepare_subtrace","","Spawn subtracer which will be used to trace deeper levels of execution.",410,null],[10,"done_subtrace","","Spawn subtracer which will be used to trace deeper levels of execution.",410,null],[10,"drain","","Consumes self and returns the VM trace.",410,null],[8,"DatabaseExtras","","`DbExtras` provides an interface to query extra data which is not stored in tracesdb,\nbut necessary to work correctly.",null,null],[10,"block_hash","","Returns hash of given block number.",411,null],[10,"transaction_hash","","Returns hash of transaction at given position.",411,null],[8,"Database","","Db provides an interface to query tracesdb.",null,null],[10,"tracing_enabled","","Returns true if tracing is enabled. Otherwise false.",412,null],[10,"import","","Imports new block traces.",412,null],[10,"trace","","Returns localized trace at given position.",412,null],[10,"transaction_traces","","Returns localized traces created by a single transaction.",412,null],[10,"block_traces","","Returns localized traces created in given block.",412,null],[10,"filter","","Filter traces matching given filter.",412,null],[0,"spec","ethcore","Blockchain params.",null,null],[3,"Genesis","ethcore::spec","Genesis components.",null,null],[12,"seal","","Seal.",413,null],[12,"difficulty","","Difficulty.",413,null],[12,"author","","Author.",413,null],[12,"timestamp","","Timestamp.",413,null],[12,"parent_hash","","Parent hash.",413,null],[12,"gas_limit","","Gas limit.",413,null],[12,"transactions_root","","Transactions root.",413,null],[12,"receipts_root","","Receipts root.",413,null],[12,"state_root","","State root.",413,null],[12,"gas_used","","Gas used.",413,null],[12,"extra_data","","Extra data.",413,null],[11,"from","","",413,{"inputs":[{"name":"genesis"}],"output":{"name":"self"}}],[0,"spec","","Parameters for a block chain.",null,null],[3,"CommonParams","ethcore::spec::spec","Parameters common to all engines.",null,null],[12,"account_start_nonce","","Account start nonce.",414,null],[12,"maximum_extra_data_size","","Maximum size of extra data.",414,null],[12,"network_id","","Network id.",414,null],[12,"min_gas_limit","","Minimum gas limit.",414,null],[12,"fork_block","","Fork block to check.",414,null],[3,"Spec","","Parameters for a block chain; includes both those intrinsic to the design of the\nchain and those to be interpreted by the active chain engine.",null,null],[12,"name","","User friendly spec name",415,null],[12,"engine","","What engine are we using for this?",415,null],[12,"fork_name","","The fork identifier for this chain. Only needed to distinguish two chains sharing the same genesis.",415,null],[12,"nodes","","Known nodes on the network in enode format.",415,null],[12,"params","","Parameters common to all engines.",415,null],[12,"parent_hash","","The genesis block&#39;s parent hash field.",415,null],[12,"author","","The genesis block&#39;s author field.",415,null],[12,"difficulty","","The genesis block&#39;s difficulty field.",415,null],[12,"gas_limit","","The genesis block&#39;s gas limit field.",415,null],[12,"gas_used","","The genesis block&#39;s gas used field.",415,null],[12,"timestamp","","The genesis block&#39;s timestamp field.",415,null],[12,"transactions_root","","Transactions root of the genesis block. Should be SHA3_NULL_RLP.",415,null],[12,"receipts_root","","Receipts root of the genesis block. Should be SHA3_NULL_RLP.",415,null],[12,"extra_data","","The genesis block&#39;s extra data field.",415,null],[12,"seal_fields","","The number of seal fields in the genesis block.",415,null],[12,"seal_rlp","","Each seal field, expressed as RLP, concatenated.",415,null],[11,"clone","","",414,null],[11,"eq","","",414,null],[11,"ne","","",414,null],[11,"fmt","","",414,null],[11,"from","","",414,{"inputs":[{"name":"params"}],"output":{"name":"self"}}],[11,"from","","",415,{"inputs":[{"name":"spec"}],"output":{"name":"self"}}],[11,"state_root","","Return the state root for the genesis state, memoising accordingly.",415,null],[11,"nodes","","Get the known knodes of the network in enode format.",415,null],[11,"network_id","","Get the configured Network ID.",415,null],[11,"fork_block","","Get the configured network fork block.",415,null],[11,"genesis_header","","Get the header of the genesis block.",415,null],[11,"genesis_block","","Compose the genesis block for this chain.",415,null],[11,"overwrite_genesis_params","","Overwrite the genesis components.",415,null],[11,"set_genesis_state","","Alter the value of the genesis state.",415,null],[11,"is_state_root_valid","","Returns `false` if the memoized state root is invalid. `true` otherwise.",415,null],[11,"ensure_db_good","","Ensure that the given state DB has the trie nodes in for the genesis state.",415,null],[11,"load","","Loads spec from json file.",415,null],[11,"new_test","","Create a new Spec which conforms to the Frontier-era Morden chain except that it&#39;s a NullEngine consensus.",415,{"inputs":[],"output":{"name":"spec"}}],[11,"new_null","","Create a new Spec which is a NullEngine consensus with a premine of address whose secret is sha3(&#39;&#39;).",415,{"inputs":[],"output":{"name":"spec"}}],[0,"views","ethcore","Block oriented views onto rlp.",null,null],[3,"BlockView","ethcore::views","View onto block rlp.",null,null],[3,"HeaderView","","View onto block header rlp.",null,null],[3,"BodyView","","View onto block rlp.",null,null],[3,"TransactionView","","View onto transaction rlp.",null,null],[11,"new","","Creates new view onto block from raw bytes.",416,null],[11,"new_from_rlp","","Creates new view onto block from rlp.",416,{"inputs":[{"name":"rlp"}],"output":{"name":"blockview"}}],[11,"hash","","Block header hash.",416,null],[11,"rlp","","Return reference to underlaying rlp.",416,null],[11,"header","","Create new Header object from header rlp.",416,null],[11,"header_rlp","","Return header rlp.",416,null],[11,"header_view","","Create new header view obto block head rlp.",416,null],[11,"transactions","","Return List of transactions in given block.",416,null],[11,"localized_transactions","","Return List of transactions with additional localization info.",416,null],[11,"transactions_count","","Return number of transactions in given block, without deserializing them.",416,null],[11,"transaction_views","","Return List of transactions in given block.",416,null],[11,"transaction_hashes","","Return transaction hashes.",416,null],[11,"transaction_at","","Returns transaction at given index without deserializing unnecessary data.",416,null],[11,"localized_transaction_at","","Returns localized transaction at given index.",416,null],[11,"uncles","","Return list of uncles of given block.",416,null],[11,"uncles_count","","Return number of uncles in given block, without deserializing them.",416,null],[11,"uncle_views","","Return List of transactions in given block.",416,null],[11,"uncle_hashes","","Return list of uncle hashes of given block.",416,null],[11,"uncle_at","","Return nth uncle.",416,null],[11,"uncle_rlp_at","","Return nth uncle rlp.",416,null],[11,"sha3","","",416,null],[11,"new","","Creates new view onto header from raw bytes.",417,null],[11,"new_from_rlp","","Creates new view onto header from rlp.",417,{"inputs":[{"name":"rlp"}],"output":{"name":"headerview"}}],[11,"hash","","Returns header hash.",417,null],[11,"rlp","","Returns raw rlp.",417,null],[11,"parent_hash","","Returns parent hash.",417,null],[11,"uncles_hash","","Returns uncles hash.",417,null],[11,"author","","Returns author.",417,null],[11,"state_root","","Returns state root.",417,null],[11,"transactions_root","","Returns transactions root.",417,null],[11,"receipts_root","","Returns block receipts root.",417,null],[11,"log_bloom","","Returns block log bloom.",417,null],[11,"difficulty","","Returns block difficulty.",417,null],[11,"number","","Returns block number.",417,null],[11,"gas_limit","","Returns block gas limit.",417,null],[11,"gas_used","","Returns block gas used.",417,null],[11,"timestamp","","Returns timestamp.",417,null],[11,"extra_data","","Returns block extra data.",417,null],[11,"seal","","Returns a vector of post-RLP-encoded seal fields.",417,null],[11,"sha3","","",417,null],[11,"new","","Creates new view onto block from raw bytes.",418,null],[11,"new_from_rlp","","Creates new view onto block from rlp.",418,{"inputs":[{"name":"rlp"}],"output":{"name":"transactionview"}}],[11,"rlp","","Return reference to underlaying rlp.",418,null],[11,"nonce","","Get the nonce field of the transaction.",418,null],[11,"gas_price","","Get the gas_price field of the transaction.",418,null],[11,"gas","","Get the gas field of the transaction.",418,null],[11,"value","","Get the value field of the transaction.",418,null],[11,"data","","Get the data field of the transaction.",418,null],[11,"v","","Get the v field of the transaction.",418,null],[11,"r","","Get the r field of the transaction.",418,null],[11,"s","","Get the s field of the transaction.",418,null],[11,"sha3","","",418,null],[11,"new","","Creates new view onto block from raw bytes.",419,null],[11,"new_from_rlp","","Creates new view onto block from rlp.",419,{"inputs":[{"name":"rlp"}],"output":{"name":"bodyview"}}],[11,"rlp","","Return reference to underlaying rlp.",419,null],[11,"transactions","","Return List of transactions in given block.",419,null],[11,"localized_transactions","","Return List of transactions with additional localization info.",419,null],[11,"transactions_count","","Return number of transactions in given block, without deserializing them.",419,null],[11,"transaction_views","","Return List of transactions in given block.",419,null],[11,"transaction_hashes","","Return transaction hashes.",419,null],[11,"transaction_at","","Returns transaction at given index without deserializing unnecessary data.",419,null],[11,"localized_transaction_at","","Returns localized transaction at given index.",419,null],[11,"uncles","","Return list of uncles of given block.",419,null],[11,"uncles_count","","Return number of uncles in given block, without deserializing them.",419,null],[11,"uncle_views","","Return List of transactions in given block.",419,null],[11,"uncle_hashes","","Return list of uncle hashes of given block.",419,null],[11,"uncle_at","","Return nth uncle.",419,null],[11,"uncle_rlp_at","","Return nth uncle rlp.",419,null],[0,"pod_state","ethcore","State of all accounts in the system expressed in Plain Old Data.",null,null],[3,"PodState","ethcore::pod_state","State of all accounts in the system expressed in Plain Old Data.",null,null],[5,"diff_pod","","Calculate and return diff between `pre` state and `post` state.",null,{"inputs":[{"name":"podstate"},{"name":"podstate"}],"output":{"name":"statediff"}}],[11,"default","","",420,{"inputs":[],"output":{"name":"podstate"}}],[11,"eq","","",420,null],[11,"ne","","",420,null],[11,"clone","","",420,null],[11,"fmt","","",420,null],[11,"new","","Contruct a new object from the `m`.",420,{"inputs":[],"output":{"name":"podstate"}}],[11,"from","","Contruct a new object from the `m`.",420,{"inputs":[{"name":"btreemap"}],"output":{"name":"podstate"}}],[11,"get","","Get the underlying map.",420,null],[11,"root","","Get the root hash of the trie of the RLP of this.",420,null],[11,"drain","","Drain object to get the underlying map.",420,null],[11,"from","","",420,{"inputs":[{"name":"state"}],"output":{"name":"podstate"}}],[11,"from","","",420,{"inputs":[{"name":"state"}],"output":{"name":"podstate"}}],[11,"fmt","","",420,null],[0,"migrations","ethcore","Database migrations.",null,null],[3,"ToV9","ethcore::migrations","Consolidation of extras/block/state databases into single one.",null,null],[4,"Extract","","Which part of block to preserve",null,null],[13,"Header","","Extract block header RLP.",421,null],[13,"Body","","Extract block body RLP.",421,null],[13,"All","","Don&#39;t change the value.",421,null],[0,"state","","State database migrations.",null,null],[3,"ArchiveV7","ethcore::migrations::state","Version for `ArchiveDB`.",null,null],[3,"OverlayRecentV7","","Version for `OverlayRecent` database.\nmore involved than the archive version because of journaling.",null,null],[11,"default","","",422,{"inputs":[],"output":{"name":"archivev7"}}],[11,"columns","","",422,null],[11,"version","","",422,null],[11,"simple_migrate","","",422,null],[11,"default","","",423,{"inputs":[],"output":{"name":"overlayrecentv7"}}],[11,"columns","","",423,null],[11,"version","","",423,null],[11,"migrate","","",423,null],[0,"blocks","ethcore::migrations","Blocks database migrations.",null,null],[3,"V8","ethcore::migrations::blocks","Compressing migration.",null,null],[11,"default","","",424,{"inputs":[],"output":{"name":"v8"}}],[11,"version","","",424,null],[11,"columns","","",424,null],[11,"simple_migrate","","",424,null],[0,"extras","ethcore::migrations","Extras database migrations.",null,null],[3,"ToV6","ethcore::migrations::extras","This migration reduces the sizes of keys and moves `ExtrasIndex` byte from back to the front.",null,null],[11,"columns","","",425,null],[11,"version","","",425,null],[11,"simple_migrate","","",425,null],[11,"new","ethcore::migrations","Creates new V9 migration and assigns all `(key,value)` pairs from `source` DB to given Column Family",426,{"inputs":[{"name":"option"},{"name":"extract"}],"output":{"name":"self"}}],[11,"columns","","",426,null],[11,"version","","",426,null],[11,"migrate","","",426,null],[0,"miner","ethcore","Miner module\nKeeps track of transactions and mined block.",null,null],[3,"TransactionQueue","ethcore::miner","`TransactionQueue` implementation",null,null],[3,"AccountDetails","","Details of account",null,null],[12,"nonce","","Most recent account nonce",427,null],[12,"balance","","Current account balance",427,null],[3,"Miner","","Keeps track of transactions using priority queue and holds currently mined block.",null,null],[3,"MinerOptions","","Configures the behaviour of the miner.",null,null],[12,"new_work_notify","","URLs to notify when there is new work.",428,null],[12,"force_sealing","","Force the miner to reseal, even when nobody has asked for work.",428,null],[12,"reseal_on_external_tx","","Reseal on receipt of new external transactions.",428,null],[12,"reseal_on_own_tx","","Reseal on receipt of new local transactions.",428,null],[12,"reseal_min_period","","Minimum period between transaction-inspired reseals.",428,null],[12,"tx_gas_limit","","Maximum amount of gas to bother considering for block insertion.",428,null],[12,"tx_queue_size","","Maximum size of the transaction queue.",428,null],[12,"pending_set","","Whether we should fallback to providing all the queue&#39;s transactions or just pending.",428,null],[12,"work_queue_size","","How many historical work packages can we store before running out?",428,null],[12,"enable_resubmission","","Can we submit two different solutions for the same block and expect both to result in an import?",428,null],[3,"GasPriceCalibratorOptions","","Options for the dynamic gas price recalibrator.",null,null],[12,"usd_per_tx","","Base transaction price to match against.",429,null],[12,"recalibration_period","","How frequently we should recalibrate.",429,null],[3,"ExternalMiner","","External Miner.",null,null],[3,"MinerStatus","","Mining status",null,null],[12,"transactions_in_pending_queue","","Number of transactions in queue with state `pending` (ready to be included in block)",430,null],[12,"transactions_in_future_queue","","Number of transactions in queue with state `future` (not yet ready to be included in block)",430,null],[12,"transactions_in_pending_block","","Number of transactions included in currently mined block",430,null],[4,"TransactionOrigin","","Transaction origin",null,null],[13,"Local","","Transaction coming from local RPC",431,null],[13,"External","","External transaction received from network",431,null],[4,"PendingSet","","Different possible definitions for pending transaction set.",null,null],[13,"AlwaysQueue","","Always just the transactions in the queue. These have had only cheap checks.",432,null],[13,"AlwaysSealing","","Always just the transactions in the sealing block. These have had full checks but\nmay be empty if the node is not actively mining or has force_sealing enabled.",432,null],[13,"SealingOrElseQueue","","Try the sealing block, but if it is not currently sealing, fallback to the queue.",432,null],[4,"GasPricer","","Struct to look after updating the acceptable gas price of a miner.",null,null],[13,"Fixed","","A fixed gas price in terms of Wei - always the argument given.",433,null],[13,"Calibrated","","Gas price is calibrated according to a fixed amount of USD.",433,null],[4,"TransactionImportResult","","Represents the result of importing transaction.",null,null],[13,"Current","","Transaction was imported to current queue.",45,null],[13,"Future","","Transaction was imported to future queue.",45,null],[11,"eq","","",432,null],[11,"fmt","","",432,null],[11,"eq","","",428,null],[11,"ne","","",428,null],[11,"fmt","","",428,null],[11,"default","","",428,{"inputs":[],"output":{"name":"self"}}],[11,"eq","","",429,null],[11,"ne","","",429,null],[11,"fmt","","",429,null],[11,"eq","","",433,null],[11,"ne","","",433,null],[11,"fmt","","",433,null],[11,"new_calibrated","","Create a new Calibrated `GasPricer`.",433,{"inputs":[{"name":"gaspricecalibratoroptions"}],"output":{"name":"gaspricer"}}],[11,"new_fixed","","Create a new Fixed `GasPricer`.",433,{"inputs":[{"name":"u256"}],"output":{"name":"gaspricer"}}],[11,"with_spec","","Creates new instance of miner without accounts, but with given spec.",434,{"inputs":[{"name":"spec"}],"output":{"name":"miner"}}],[11,"new","","Creates new instance of miner",434,{"inputs":[{"name":"mineroptions"},{"name":"gaspricer"},{"name":"spec"},{"name":"option"}],"output":{"name":"arc"}}],[11,"pending_state","","Get `Some` `clone()` of the current pending block&#39;s state or `None` if we&#39;re not sealing.",434,null],[11,"pending_block","","Get `Some` `clone()` of the current pending block&#39;s state or `None` if we&#39;re not sealing.",434,null],[11,"clear_and_reset","","",434,null],[11,"status","","",434,null],[11,"call","","",434,null],[11,"balance","","",434,null],[11,"storage_at","","",434,null],[11,"nonce","","",434,null],[11,"code","","",434,null],[11,"set_author","","",434,null],[11,"set_extra_data","","",434,null],[11,"set_gas_floor_target","","Set the gas limit we wish to target when sealing a new block.",434,null],[11,"set_gas_ceil_target","","",434,null],[11,"set_minimal_gas_price","","",434,null],[11,"minimal_gas_price","","",434,null],[11,"sensible_gas_price","","",434,null],[11,"sensible_gas_limit","","",434,null],[11,"transactions_limit","","",434,null],[11,"set_transactions_limit","","",434,null],[11,"set_tx_gas_limit","","",434,null],[11,"author","","Get the author that we will seal blocks as.",434,null],[11,"extra_data","","Get the extra_data that we will seal blocks with.",434,null],[11,"gas_floor_target","","Get the gas limit we wish to target when sealing a new block.",434,null],[11,"gas_ceil_target","","Get the gas limit we wish to target when sealing a new block.",434,null],[11,"import_external_transactions","","",434,null],[11,"import_own_transaction","","",434,null],[11,"all_transactions","","",434,null],[11,"pending_transactions","","",434,null],[11,"pending_transactions_hashes","","",434,null],[11,"transaction","","",434,null],[11,"pending_receipts","","",434,null],[11,"last_nonce","","",434,null],[11,"update_sealing","","",434,null],[11,"is_sealing","","",434,null],[11,"map_sealing_work","","",434,null],[11,"submit_seal","","",434,null],[11,"chain_new_blocks","","",434,null],[11,"default","","",435,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates new external miner with prefilled hashrates.",435,{"inputs":[{"name":"arc"}],"output":{"name":"self"}}],[11,"submit_hashrate","","",435,null],[11,"hashrate","","",435,null],[11,"eq","","",431,null],[11,"fmt","","",431,null],[11,"clone","","",431,null],[11,"partial_cmp","","",431,null],[11,"cmp","","",431,null],[11,"default","","",436,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Creates new instance of this Queue",436,{"inputs":[],"output":{"name":"self"}}],[11,"with_limits","","Create new instance of this Queue with specified limits",436,{"inputs":[{"name":"usize"},{"name":"u256"}],"output":{"name":"self"}}],[11,"set_limit","","Set the new limit for `current` and `future` queue.",436,null],[11,"limit","","Returns current limit of transactions in the queue.",436,null],[11,"minimal_gas_price","","Get the minimal gas price.",436,null],[11,"set_minimal_gas_price","","Sets new gas price threshold for incoming transactions.\nAny transaction already imported to the queue is not affected.",436,null],[11,"set_gas_limit","","Sets new gas limit. Transactions with gas slightly (`GAS_LIMIT_HYSTERESIS`) above the limit won&#39;t be imported.\nAny transaction already imported to the queue is not affected.",436,null],[11,"set_tx_gas_limit","","Set the new limit for the amount of gas any individual transaction may have.\nAny transaction already imported to the queue is not affected.",436,null],[11,"status","","Returns current status for this queue",436,null],[11,"add","","Add signed transaction to queue to be verified and imported",436,null],[11,"remove_all","","Removes all transactions from particular sender up to (excluding) given client (state) nonce.\nClient (State) Nonce = next valid nonce for this sender.",436,null],[11,"remove_invalid","","Removes invalid transaction identified by hash from queue.\nAssumption is that this transaction nonce is not related to client nonce,\nso transactions left in queue are processed according to client nonce.",436,null],[11,"top_transactions","","Returns top transactions from the queue ordered by priority.",436,null],[11,"pending_hashes","","Returns hashes of all transactions from current, ordered by priority.",436,null],[11,"has_local_pending_transactions","","Returns true if there is at least one local transaction pending",436,null],[11,"find","","Finds transaction in the queue by hash (if any)",436,null],[11,"clear","","Removes all elements (in any state) from the queue",436,null],[11,"last_nonce","","Returns highest transaction nonce for given address.",436,null],[8,"ExternalMinerService","","External miner interface.",null,null],[10,"submit_hashrate","","Submit hashrate for given miner.",437,null],[10,"hashrate","","Total hashrate.",437,null],[8,"MinerService","","Miner client API",null,null],[10,"status","","Returns miner&#39;s status.",438,null],[10,"author","","Get the author that we will seal blocks as.",438,null],[10,"set_author","","Set the author that we will seal blocks as.",438,null],[10,"extra_data","","Get the extra_data that we will seal blocks with.",438,null],[10,"set_extra_data","","Set the extra_data that we will seal blocks with.",438,null],[10,"minimal_gas_price","","Get current minimal gas price for transactions accepted to queue.",438,null],[10,"set_minimal_gas_price","","Set minimal gas price of transaction to be accepted for mining.",438,null],[10,"gas_floor_target","","Get the lower bound of the gas limit we wish to target when sealing a new block.",438,null],[10,"gas_ceil_target","","Get the upper bound of the gas limit we wish to target when sealing a new block.",438,null],[10,"set_gas_floor_target","","Set the lower bound of gas limit we wish to target when sealing a new block.",438,null],[10,"set_gas_ceil_target","","Set the upper bound of gas limit we wish to target when sealing a new block.",438,null],[10,"transactions_limit","","Get current transactions limit in queue.",438,null],[10,"set_transactions_limit","","Set maximal number of transactions kept in the queue (both current and future).",438,null],[10,"set_tx_gas_limit","","Set maximum amount of gas allowed for any single transaction to mine.",438,null],[10,"import_external_transactions","","Imports transactions to transaction queue.",438,null],[10,"import_own_transaction","","Imports own (node owner) transaction to queue.",438,null],[10,"pending_transactions_hashes","","Returns hashes of transactions currently in pending",438,null],[10,"clear_and_reset","","Removes all transactions from the queue and restart mining operation.",438,null],[10,"chain_new_blocks","","Called when blocks are imported to chain, updates transactions queue.",438,null],[10,"update_sealing","","New chain head event. Restart mining operation.",438,null],[10,"submit_seal","","Submit `seal` as a valid solution for the header of `pow_hash`.\nWill check the seal, but not actually insert the block into the chain.",438,null],[10,"map_sealing_work","","Get the sealing work package and if `Some`, apply some transform.",438,null],[10,"transaction","","Query pending transactions for hash.",438,null],[10,"all_transactions","","Get a list of all transactions.",438,null],[10,"pending_transactions","","Get a list of all pending transactions.",438,null],[10,"pending_receipts","","Get a list of all pending receipts.",438,null],[10,"last_nonce","","Returns highest transaction nonce for given address.",438,null],[10,"is_sealing","","Is it currently sealing?",438,null],[11,"sensible_gas_price","","Suggested gas price.",438,null],[11,"sensible_gas_limit","","Suggested gas limit.",438,null],[10,"balance","","Latest account balance in pending state.",438,null],[10,"call","","Call into contract code using pending state.",438,null],[10,"storage_at","","Get storage value in pending state.",438,null],[10,"nonce","","Get account nonce in pending state.",438,null],[10,"code","","Get contract code in pending state.",438,null],[11,"fmt","","",430,null],[0,"snapshot","ethcore","Snapshot creation, restoration, and network service.",null,null],[3,"ManifestData","ethcore::snapshot","Manifest data.",null,null],[12,"state_hashes","","List of state chunk hashes.",439,null],[12,"block_hashes","","List of block chunk hashes.",439,null],[12,"state_root","","The final, expected state root.",439,null],[12,"block_number","","Block number this snapshot was taken at.",439,null],[12,"block_hash","","Block hash this snapshot was taken at.",439,null],[3,"StateRebuilder","","Used to rebuild the state trie piece by piece.",null,null],[3,"BlockRebuilder","","Rebuilds the blockchain from chunks.",null,null],[4,"Error","","Snapshot-related errors.",null,null],[13,"InvalidStartingBlock","","Invalid starting block for snapshot.",440,null],[13,"BlockNotFound","","Block not found.",440,null],[13,"Trie","","Trie error.",440,null],[13,"Decoder","","Decoder error.",440,null],[13,"Io","","Io error.",440,null],[5,"take_snapshot","","Take a snapshot using the given blockchain, starting block hash, and database, writing into the given writer.",null,{"inputs":[{"name":"blockchain"},{"name":"h256"},{"name":"hashdb"},{"name":"w"}],"output":{"name":"result"}}],[5,"chunk_blocks","","Create and write out all block chunks to disk, returning a vector of all\nthe hashes of block chunks created.",null,null],[5,"chunk_state","","Walk the given state database starting from the given root,\ncreating chunks and writing them out.",null,{"inputs":[{"name":"hashdb"},{"name":"h256"},{"name":"mutex"}],"output":{"name":"result"}}],[0,"io","","Snapshot i/o.\nWays of writing and reading snapshots. This module supports writing and reading\nsnapshots of two different formats: packed and loose.\nPacked snapshots are written to a single file, and loose snapshots are\nwritten to multiple files in one directory.",null,null],[3,"PackedWriter","ethcore::snapshot::io","A packed snapshot writer. This writes snapshots to a single concatenated file.",null,null],[3,"LooseWriter","","A &quot;loose&quot; writer writes chunk files into a directory.",null,null],[3,"PackedReader","","Packed snapshot reader.",null,null],[3,"LooseReader","","reader for &quot;loose&quot; snapshots",null,null],[8,"SnapshotWriter","","Something which can write snapshots.\nWriting the same chunk multiple times will lead to implementation-defined\nbehavior, and is not advised.",null,null],[10,"write_state_chunk","","Write a compressed state chunk.",441,null],[10,"write_block_chunk","","Write a compressed block chunk.",441,null],[10,"finish","","Complete writing. The manifest&#39;s chunk lists must be consistent\nwith the chunks written.",441,null],[8,"SnapshotReader","","Something which can read compressed snapshots.",null,null],[10,"manifest","","Get the manifest data for this snapshot.",442,null],[10,"chunk","","Get raw chunk data by hash. implementation defined behavior\nif a chunk not in the manifest is requested.",442,null],[11,"new","","Create a new &quot;PackedWriter&quot;, to write into the file at the given path.",443,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"write_state_chunk","","",443,null],[11,"write_block_chunk","","",443,null],[11,"finish","","",443,null],[11,"new","","Create a new LooseWriter which will write into the given directory,\ncreating it if it doesn&#39;t exist.",444,{"inputs":[{"name":"pathbuf"}],"output":{"name":"result"}}],[11,"write_state_chunk","","",444,null],[11,"write_block_chunk","","",444,null],[11,"finish","","",444,null],[11,"new","","Create a new `PackedReader` for the file at the given path.\nThis will fail if any io errors are encountered or the file\nis not a valid packed snapshot.",445,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[11,"manifest","","",445,null],[11,"chunk","","",445,null],[11,"new","","Create a new `LooseReader` which will read the manifest and chunk data from\nthe given directory.",446,{"inputs":[{"name":"pathbuf"}],"output":{"name":"result"}}],[11,"manifest","","",446,null],[11,"chunk","","",446,null],[0,"service","ethcore::snapshot","Snapshot network service implementation.",null,null],[3,"Service","ethcore::snapshot::service","Service implementation.",null,null],[4,"RestorationStatus","","Statuses for restorations.",null,null],[13,"Inactive","","No restoration.",447,null],[13,"Ongoing","","Ongoing restoration.",447,null],[13,"Failed","","Failed restoration.",447,null],[6,"Channel","","Type alias for client io channel.",null,null],[8,"SnapshotService","","Restoration info.\nThe interface for a snapshot network service.\nThis handles:\n   - restoration of snapshots to temporary databases.\n   - responding to queries for snapshot manifests and chunks",null,null],[10,"manifest","","Query the most recent manifest data.",448,null],[10,"chunk","","Get raw chunk for a given hash.",448,null],[10,"status","","Ask the snapshot service for the restoration status.",448,null],[10,"chunks_done","","Ask the snapshot service for the number of chunks completed.\nReturn a tuple of (state_chunks, block_chunks).\nUndefined when not restoring.",448,null],[10,"begin_restore","","Begin snapshot restoration.\nIf restoration in-progress, this will reset it.\nFrom this point on, any previous snapshot may become unavailable.\nReturns true if successful, false otherwise.",448,null],[10,"restore_state_chunk","","Feed a raw state chunk to the service to be processed asynchronously.\nno-op if not currently restoring.",448,null],[10,"restore_block_chunk","","Feed a raw block chunk to the service to be processed asynchronously.\nno-op if currently restoring.",448,null],[11,"fmt","","",447,null],[11,"clone","","",447,null],[11,"eq","","",447,null],[11,"new","","Create a new snapshot service.",449,{"inputs":[{"name":"spec"},{"name":"algorithm"},{"name":"pathbuf"},{"name":"channel"}],"output":{"name":"result"}}],[11,"feed_state_chunk","","Feed a state chunk to be processed synchronously.",449,null],[11,"feed_block_chunk","","Feed a block chunk to be processed synchronously.",449,null],[11,"manifest","","",449,null],[11,"chunk","","",449,null],[11,"status","","",449,null],[11,"chunks_done","","",449,null],[11,"begin_restore","","",449,null],[11,"restore_state_chunk","","",449,null],[11,"restore_block_chunk","","",449,null],[11,"fmt","ethcore::snapshot","",440,null],[11,"fmt","","",440,null],[11,"from","","",440,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",440,{"inputs":[{"name":"box"}],"output":{"name":"self"}}],[11,"from","","",440,{"inputs":[{"name":"decodererror"}],"output":{"name":"self"}}],[11,"eq","","",439,null],[11,"ne","","",439,null],[11,"clone","","",439,null],[11,"fmt","","",439,null],[11,"into_rlp","","Encode the manifest data to rlp.",439,null],[11,"from_rlp","","Try to restore manifest data from raw bytes, interpreted as RLP.",439,null],[11,"new","","Create a new state rebuilder to write into the given backing DB.",450,{"inputs":[{"name":"arc"},{"name":"algorithm"}],"output":{"name":"self"}}],[11,"feed","","Feed an uncompressed state chunk into the rebuilder.",450,null],[11,"state_root","","Get the state root of the rebuilder.",450,null],[11,"new","","Create a new BlockRebuilder.",451,{"inputs":[{"name":"blockchain"},{"name":"u64"}],"output":{"name":"result"}}],[11,"feed","","Feed the rebuilder an uncompressed block chunk.\nReturns the number of blocks fed or any errors.",451,null],[11,"glue_chunks","","Glue together any disconnected chunks. To be called at the end.",451,null],[0,"action_params","ethcore","Evm input params.",null,null],[3,"ActionParams","ethcore::action_params","Action (call/create) input params. Everything else should be specified in Externalities.",null,null],[12,"code_address","","Address of currently executed code.",452,null],[12,"address","","Receive address. Usually equal to code_address,\nexcept when called using CALLCODE.",452,null],[12,"sender","","Sender of current part of the transaction.",452,null],[12,"origin","","Transaction initiator.",452,null],[12,"gas","","Gas paid up front for transaction execution",452,null],[12,"gas_price","","Gas price.",452,null],[12,"value","","Transaction value.",452,null],[12,"code","","Code being executed.",452,null],[12,"data","","Input data.",452,null],[12,"call_type","","Type of call",452,null],[4,"ActionValue","","Transaction value",null,null],[13,"Transfer","","Value that should be transfered",453,null],[13,"Apparent","","Apparent value for transaction (not transfered)",453,null],[11,"fmt","","",453,null],[11,"clone","","",453,null],[11,"value","","Returns action value as U256.",453,null],[11,"fmt","","",452,null],[11,"clone","","",452,null],[11,"default","","Returns default ActionParams initialized with zeros",452,{"inputs":[],"output":{"name":"actionparams"}}],[11,"from","","",452,{"inputs":[{"name":"transaction"}],"output":{"name":"self"}}],[0,"evm","ethcore","Ethereum virtual machine.",null,null],[4,"CallType","ethcore::evm","The type of the call-like instruction.",null,null],[13,"None","","Not a CALL.",454,null],[13,"Call","","CALL.",454,null],[13,"CallCode","","CALLCODE.",454,null],[13,"DelegateCall","","DELEGATECALL.",454,null],[0,"ext","","Interface for Evm externalities.",null,null],[4,"ContractCreateResult","ethcore::evm::ext","Result of externalities create function.",null,null],[13,"Created","","Returned when creation was successfull.\nContains an address of newly created contract and gas left.",455,null],[13,"Failed","","Returned when contract creation failed.\nVM doesn&#39;t have to know the reason.",455,null],[4,"MessageCallResult","","Result of externalities call function.",null,null],[13,"Success","","Returned when message call was successfull.\nContains gas left.",456,null],[13,"Failed","","Returned when message call failed.\nVM doesn&#39;t have to know the reason.",456,null],[8,"Ext","","Externalities interface for EVMs",null,null],[10,"storage_at","","Returns a value for given key.",457,null],[10,"set_storage","","Stores a value for given key.",457,null],[10,"exists","","Determine whether an account exists.",457,null],[10,"balance","","Returns address balance.",457,null],[10,"blockhash","","Returns the hash of one of the 256 most recent complete blocks.",457,null],[10,"create","","Creates new contract.",457,null],[10,"call","","Message call.",457,null],[10,"extcode","","Returns code at given address",457,null],[10,"log","","Creates log entry with given topics and data",457,null],[10,"ret","","Should be called when transaction calls `RETURN` opcode.\nReturns gas_left if cost of returning the data is not too high.",457,null],[10,"suicide","","Should be called when contract commits suicide.\nAddress to which funds should be refunded.",457,null],[10,"schedule","","Returns schedule.",457,null],[10,"env_info","","Returns environment info.",457,null],[10,"depth","","Returns current depth of execution.",457,null],[10,"inc_sstore_clears","","Increments sstore refunds count by 1.",457,null],[11,"trace_prepare_execute","","Prepare to trace an operation. Passthrough for the VM trace.",457,null],[11,"trace_executed","","Trace the finalised execution of a single instruction.",457,null],[0,"evm","ethcore::evm","Evm interface.",null,null],[4,"Error","ethcore::evm::evm","Evm errors.",null,null],[13,"OutOfGas","","`OutOfGas` is returned when transaction execution runs out of gas.\nThe state should be reverted to the state from before the\ntransaction execution. But it does not mean that transaction\nwas invalid. Balance still should be transfered and nonce\nshould be increased.",458,null],[13,"BadJumpDestination","","`BadJumpDestination` is returned when execution tried to move\nto position that wasn&#39;t marked with JUMPDEST instruction",458,null],[12,"destination","ethcore::evm::evm::Error","Position the code tried to jump to.",458,null],[13,"BadInstruction","ethcore::evm::evm","`BadInstructions` is returned when given instruction is not supported",458,null],[12,"instruction","ethcore::evm::evm::Error","Unrecognized opcode",458,null],[13,"StackUnderflow","ethcore::evm::evm","`StackUnderflow` when there is not enough stack elements to execute instruction",458,null],[12,"instruction","ethcore::evm::evm::Error","Invoked instruction",458,null],[12,"wanted","","How many stack elements was requested by instruction",458,null],[12,"on_stack","","How many elements were on stack",458,null],[13,"OutOfStack","ethcore::evm::evm","When execution would exceed defined Stack Limit",458,null],[12,"instruction","ethcore::evm::evm::Error","Invoked instruction",458,null],[12,"wanted","","How many stack elements instruction wanted to push",458,null],[12,"limit","","What was the stack limit",458,null],[13,"Internal","ethcore::evm::evm","Returned on evm internal error. Should never be ignored during development.\nLikely to cause consensus issues.",458,null],[4,"GasLeft","","Gas Left: either it is a known value, or it needs to be computed by processing\na return instruction.",null,null],[13,"Known","","Known gas left",459,null],[13,"NeedsReturn","","Return instruction must be processed.",459,null],[6,"Result","","A specialized version of Result over EVM errors.",null,null],[8,"Finalize","","Types that can be &quot;finalized&quot; using an EVM.",null,null],[10,"finalize","","Consume the externalities, call return if necessary, and produce a final amount of gas left.",460,null],[8,"CostType","","Cost calculation type. For low-gas usage we calculate costs using usize instead of U256",null,null],[10,"as_u256","","Converts this cost into `U256`",461,null],[10,"from_u256","","Tries to fit `U256` into this `Cost` type",461,{"inputs":[{"name":"u256"}],"output":{"name":"result"}}],[10,"as_usize","","Convert to usize (may panic)",461,null],[10,"overflow_add","","Add with overflow",461,null],[10,"overflow_mul","","Multiple with overflow",461,null],[10,"overflow_mul_shr","","Single-step full multiplication and shift: `(self*other) &gt;&gt; shr`\nShould not overflow on intermediate steps",461,null],[8,"Evm","","Evm interface",null,null],[10,"exec","","This function should be used to execute transaction.",462,null],[11,"fmt","","",458,null],[11,"cmp","","",459,null],[11,"partial_cmp","","",459,null],[11,"lt","","",459,null],[11,"le","","",459,null],[11,"gt","","",459,null],[11,"ge","","",459,null],[11,"eq","","",459,null],[11,"ne","","",459,null],[11,"fmt","","",459,null],[11,"finalize","","",463,null],[11,"as_u256","bigint::uint","",464,null],[11,"from_u256","","",464,{"inputs":[{"name":"u256"}],"output":{"name":"result"}}],[11,"as_usize","","",464,null],[11,"overflow_add","","",464,null],[11,"overflow_mul","","",464,null],[11,"overflow_mul_shr","","",464,null],[0,"interpreter","ethcore::evm","Rust VM implementation",null,null],[3,"Interpreter","ethcore::evm::interpreter","Intepreter EVM implementation",null,null],[11,"default","","",465,{"inputs":[],"output":{"name":"interpreter"}}],[11,"exec","","",465,null],[0,"factory","ethcore::evm","Evm factory.",null,null],[3,"Factory","ethcore::evm::factory","Evm factory. Creates appropriate Evm.",null,null],[4,"VMType","","Type of EVM to use.",null,null],[13,"Interpreter","","RUST EVM",466,null],[11,"clone","","",466,null],[11,"eq","","",466,null],[11,"fmt","","",466,null],[11,"fmt","","",466,null],[11,"default","","",466,{"inputs":[],"output":{"name":"self"}}],[11,"all","","Return all possible VMs (Interpreter)",466,{"inputs":[],"output":{"name":"vec"}}],[11,"jit","","Return new jit if it&#39;s possible",466,{"inputs":[],"output":{"name":"option"}}],[11,"create","","Create fresh instance of VM\nMight choose implementation depending on supplied gas.",467,null],[11,"new","","Create new instance of specific `VMType` factory",467,{"inputs":[{"name":"vmtype"}],"output":{"name":"self"}}],[11,"default","","Returns native rust evm factory",467,{"inputs":[],"output":{"name":"factory"}}],[0,"schedule","ethcore::evm","Cost schedule and other parameterisations for the EVM.",null,null],[3,"Schedule","ethcore::evm::schedule","Definition of the cost schedule and other parameterisations for the EVM.",null,null],[12,"exceptional_failed_code_deposit","","Does it support exceptional failed code deposit",468,null],[12,"have_delegate_call","","Does it have a delegate cal",468,null],[12,"stack_limit","","VM stack limit",468,null],[12,"max_depth","","Max number of nested calls/creates",468,null],[12,"tier_step_gas","","Gas prices for instructions in all tiers",468,null],[12,"exp_gas","","Gas price for `EXP` opcode",468,null],[12,"exp_byte_gas","","Additional gas for `EXP` opcode for each byte of exponent",468,null],[12,"sha3_gas","","Gas price for `SHA3` opcode",468,null],[12,"sha3_word_gas","","Additional gas for `SHA3` opcode for each word of hashed memory",468,null],[12,"sload_gas","","Gas price for loading from storage",468,null],[12,"sstore_set_gas","","Gas price for setting new value to storage (`storage==0`, `new!=0`)",468,null],[12,"sstore_reset_gas","","Gas price for altering value in storage",468,null],[12,"sstore_refund_gas","","Gas refund for `SSTORE` clearing (when `storage!=0`, `new==0`)",468,null],[12,"jumpdest_gas","","Gas price for `JUMPDEST` opcode",468,null],[12,"log_gas","","Gas price for `LOG*`",468,null],[12,"log_data_gas","","Additional gas for data in `LOG*`",468,null],[12,"log_topic_gas","","Additional gas for each topic in `LOG*`",468,null],[12,"create_gas","","Gas price for `CREATE` opcode",468,null],[12,"call_gas","","Gas price for `*CALL*` opcodes",468,null],[12,"call_stipend","","Stipend for transfer for `CALL|CALLCODE` opcode when `value&gt;0`",468,null],[12,"call_value_transfer_gas","","Additional gas required for value transfer (`CALL|CALLCODE`)",468,null],[12,"call_new_account_gas","","Additional gas for creating new account (`CALL|CALLCODE`)",468,null],[12,"suicide_refund_gas","","Refund for SUICIDE",468,null],[12,"memory_gas","","Gas for used memory",468,null],[12,"quad_coeff_div","","Coefficient used to convert memory size to gas price for memory",468,null],[12,"create_data_gas","","Cost for contract length when executing `CREATE`",468,null],[12,"tx_gas","","Transaction cost",468,null],[12,"tx_create_gas","","`CREATE` transaction cost",468,null],[12,"tx_data_zero_gas","","Additional cost for empty data transaction",468,null],[12,"tx_data_non_zero_gas","","Aditional cost for non-empty data transaction",468,null],[12,"copy_gas","","Gas price for copying memory",468,null],[11,"new_frontier","","Schedule for the Frontier-era of the Ethereum main net.",468,{"inputs":[],"output":{"name":"schedule"}}],[11,"new_homestead","","Schedule for the Homestead-era of the Ethereum main net.",468,{"inputs":[],"output":{"name":"schedule"}}],[11,"fmt","ethcore::client","",34,null],[11,"default","","",34,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",34,{"inputs":[{"name":"env"}],"output":{"name":"self"}}],[11,"default","","",33,{"inputs":[],"output":{"name":"transactoptions"}}],[11,"new","","Basic constructor.",469,{"inputs":[{"name":"state"},{"name":"envinfo"},{"name":"engine"},{"name":"factory"}],"output":{"name":"self"}}],[11,"from_parent","","Populates executive from parent properties. Increments executive depth.",469,{"inputs":[{"name":"state"},{"name":"envinfo"},{"name":"engine"},{"name":"factory"},{"name":"usize"}],"output":{"name":"self"}}],[11,"as_externalities","","Creates `Externalities` from `Executive`.",469,null],[11,"transact","","This function should be used to execute transaction.",469,null],[11,"transact_with_tracer","","Execute transaction/call with tracing enabled",469,null],[11,"call","","Calls contract function with given contract params.\nNOTE. It does not finalize the transaction (doesn&#39;t do refunds, nor suicides).\nModifies the substate and the output.\nReturns either gas_left or `evm::Error`.",469,null],[11,"create","","Creates contract with given contract params.\nNOTE. It does not finalize the transaction (doesn&#39;t do refunds, nor suicides).\nModifies the substate.",469,null],[11,"fmt","","",24,null],[11,"total","","Total amount used by the cache.",24,null],[11,"eq","","",27,null],[11,"ne","","",27,null],[11,"fmt","","",27,null],[11,"default","","",27,{"inputs":[],"output":{"name":"self"}}],[11,"fmt","","",41,null],[11,"eq","","",41,null],[11,"ne","","",41,null],[11,"clone","","",41,null],[11,"hash","","",41,null],[11,"size","","",41,null],[11,"to_bytes","","",41,null],[11,"from_bytes","","",41,null],[11,"len_params","","",41,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",42,null],[11,"eq","","",42,null],[11,"ne","","",42,null],[11,"clone","","",42,null],[11,"hash","","",42,null],[11,"size","","",42,null],[11,"to_bytes","","",42,null],[11,"from_bytes","","",42,null],[11,"len_params","","",42,{"inputs":[],"output":{"name":"usize"}}],[11,"size","","",28,null],[11,"to_bytes","","",28,null],[11,"from_bytes","","",28,null],[11,"len_params","","",28,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",29,null],[11,"size","","",29,null],[11,"to_bytes","","",29,null],[11,"from_bytes","","",29,null],[11,"len_params","","",29,{"inputs":[],"output":{"name":"usize"}}],[11,"clone","","",23,null],[11,"fmt","","",23,null],[11,"size","","",23,null],[11,"to_bytes","","",23,null],[11,"from_bytes","","",23,null],[11,"len_params","","",23,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","ethcore::trace","",470,null],[11,"size","","",470,null],[11,"to_bytes","","",470,null],[11,"from_bytes","","",470,null],[11,"len_params","","",470,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",470,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"matches","","Returns true if address matches one of the searched addresses.",470,null],[11,"matches_all","","Returns true if this address filter matches everything.",470,null],[11,"blooms","","Returns blooms of this addresses filter.",470,null],[11,"with_blooms","","Returns vector of blooms zipped with blooms of this addresses filter.",470,null],[11,"fmt","","",393,null],[11,"size","","",393,null],[11,"to_bytes","","",393,null],[11,"from_bytes","","",393,null],[11,"len_params","","",393,{"inputs":[],"output":{"name":"usize"}}],[11,"bloom_possibilities","","",393,null],[11,"range","","",393,null],[11,"matches","","Returns true if given trace matches the filter.",393,null],[11,"fmt","","",392,null],[11,"eq","","",392,null],[11,"ne","","",392,null],[11,"clone","","",392,null],[11,"size","","",392,null],[11,"to_bytes","","",392,null],[11,"from_bytes","","",392,null],[11,"len_params","","",392,{"inputs":[],"output":{"name":"usize"}}],[11,"bloom","","Returns bloom of the trace.",392,null],[11,"heap_size_of_children","","",392,null],[11,"rlp_append","","",392,null],[11,"decode","","",392,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",471,null],[11,"eq","","",471,null],[11,"ne","","",471,null],[11,"clone","","",471,null],[11,"from","","",471,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"heap_size_of_children","","",471,null],[11,"bloom","","Returns bloom of all traces in the collection.",471,null],[11,"rlp_append","","",471,null],[11,"decode","","",471,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"into","","",471,null],[11,"fmt","","",472,null],[11,"eq","","",472,null],[11,"ne","","",472,null],[11,"clone","","",472,null],[11,"heap_size_of_children","","",472,null],[11,"from","","",472,{"inputs":[{"name":"vec"}],"output":{"name":"self"}}],[11,"bloom","","Returns bloom of all traces in the block.",472,null],[11,"rlp_append","","",472,null],[11,"decode","","",472,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"into","","",472,null],[11,"fmt","ethcore::trace::trace","",402,null],[11,"clone","","",402,null],[11,"eq","","",402,null],[11,"ne","","",402,null],[11,"default","","",402,{"inputs":[],"output":{"name":"callresult"}}],[11,"size","","",402,null],[11,"to_bytes","","",402,null],[11,"from_bytes","","",402,null],[11,"len_params","","",402,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",402,null],[11,"decode","","",402,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",403,null],[11,"clone","","",403,null],[11,"eq","","",403,null],[11,"ne","","",403,null],[11,"size","","",403,null],[11,"to_bytes","","",403,null],[11,"from_bytes","","",403,null],[11,"len_params","","",403,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",403,null],[11,"decode","","",403,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns bloom.",403,null],[11,"fmt","","",404,null],[11,"clone","","",404,null],[11,"eq","","",404,null],[11,"ne","","",404,null],[11,"size","","",404,null],[11,"to_bytes","","",404,null],[11,"from_bytes","","",404,null],[11,"len_params","","",404,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",404,{"inputs":[{"name":"actionparams"}],"output":{"name":"self"}}],[11,"rlp_append","","",404,null],[11,"decode","","",404,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns call action bloom.\nThe bloom contains from and to addresses.",404,null],[11,"fmt","","",405,null],[11,"clone","","",405,null],[11,"eq","","",405,null],[11,"ne","","",405,null],[11,"size","","",405,null],[11,"to_bytes","","",405,null],[11,"from_bytes","","",405,null],[11,"len_params","","",405,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",405,{"inputs":[{"name":"actionparams"}],"output":{"name":"self"}}],[11,"rlp_append","","",405,null],[11,"decode","","",405,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns bloom create action bloom.\nThe bloom contains only from address.",405,null],[11,"fmt","","",406,null],[11,"clone","","",406,null],[11,"eq","","",406,null],[11,"ne","","",406,null],[11,"size","","",406,null],[11,"to_bytes","","",406,null],[11,"from_bytes","","",406,null],[11,"len_params","","",406,{"inputs":[],"output":{"name":"usize"}}],[11,"bloom","","Return suicide action bloom.",406,null],[11,"rlp_append","","",406,null],[11,"decode","","",406,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",407,null],[11,"clone","","",407,null],[11,"eq","","",407,null],[11,"ne","","",407,null],[11,"size","","",407,null],[11,"to_bytes","","",407,null],[11,"from_bytes","","",407,null],[11,"len_params","","",407,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",407,null],[11,"decode","","",407,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns action bloom.",407,null],[11,"fmt","","",408,null],[11,"clone","","",408,null],[11,"eq","","",408,null],[11,"ne","","",408,null],[11,"size","","",408,null],[11,"to_bytes","","",408,null],[11,"from_bytes","","",408,null],[11,"len_params","","",408,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",408,null],[11,"decode","","",408,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"bloom","","Returns result bloom.",408,null],[11,"fmt","ethcore::trace","",390,null],[11,"clone","","",390,null],[11,"eq","","",390,null],[11,"ne","","",390,null],[11,"size","","",390,null],[11,"to_bytes","","",390,null],[11,"from_bytes","","",390,null],[11,"len_params","","",390,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",390,null],[11,"decode","","",390,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",391,null],[11,"clone","","",391,null],[11,"eq","","",391,null],[11,"ne","","",391,null],[11,"size","","",391,null],[11,"to_bytes","","",391,null],[11,"from_bytes","","",391,null],[11,"len_params","","",391,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",391,null],[11,"decode","","",391,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",389,null],[11,"clone","","",389,null],[11,"eq","","",389,null],[11,"ne","","",389,null],[11,"size","","",389,null],[11,"to_bytes","","",389,null],[11,"from_bytes","","",389,null],[11,"len_params","","",389,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",389,null],[11,"decode","","",389,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",388,null],[11,"clone","","",388,null],[11,"eq","","",388,null],[11,"ne","","",388,null],[11,"default","","",388,{"inputs":[],"output":{"name":"vmoperation"}}],[11,"size","","",388,null],[11,"to_bytes","","",388,null],[11,"from_bytes","","",388,null],[11,"len_params","","",388,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",388,null],[11,"decode","","",388,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",387,null],[11,"clone","","",387,null],[11,"eq","","",387,null],[11,"ne","","",387,null],[11,"default","","",387,{"inputs":[],"output":{"name":"vmtrace"}}],[11,"size","","",387,null],[11,"to_bytes","","",387,null],[11,"from_bytes","","",387,null],[11,"len_params","","",387,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",387,null],[11,"decode","","",387,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","","",395,null],[11,"eq","","",395,null],[11,"ne","","",395,null],[11,"size","","",395,null],[11,"to_bytes","","",395,null],[11,"from_bytes","","",395,null],[11,"len_params","","",395,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","ethcore::evm","",454,null],[11,"eq","","",454,null],[11,"clone","","",454,null],[11,"size","","",454,null],[11,"to_bytes","","",454,null],[11,"from_bytes","","",454,null],[11,"len_params","","",454,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",454,null],[11,"decode","","",454,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","ethcore::client","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"clone","","",32,null],[11,"size","","",32,null],[11,"to_bytes","","",32,null],[11,"from_bytes","","",32,null],[11,"len_params","","",32,{"inputs":[],"output":{"name":"usize"}}],[11,"eq","ethcore::error","",375,null],[11,"ne","","",375,null],[11,"fmt","","",375,null],[11,"clone","","",375,null],[11,"size","","",375,null],[11,"to_bytes","","",375,null],[11,"from_bytes","","",375,null],[11,"len_params","","",375,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",375,null],[11,"eq","","",376,null],[11,"ne","","",376,null],[11,"fmt","","",376,null],[11,"clone","","",376,null],[11,"size","","",376,null],[11,"to_bytes","","",376,null],[11,"from_bytes","","",376,null],[11,"len_params","","",376,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",376,{"inputs":[{"name":"executionerror"}],"output":{"name":"self"}}],[11,"fmt","","",376,null],[11,"fmt","ethcore::client","",36,null],[11,"eq","","",36,null],[11,"size","","",36,null],[11,"to_bytes","","",36,null],[11,"from_bytes","","",36,null],[11,"len_params","","",36,{"inputs":[],"output":{"name":"usize"}}],[11,"new","collections::btree::map","Makes a new empty BTreeMap with a reasonable choice for B.",473,{"inputs":[],"output":{"name":"btreemap"}}],[11,"clear","","Clears the map, removing all values.",473,null],[11,"get","","Returns a reference to the value corresponding to the key.",473,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",473,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",473,null],[11,"insert","","Inserts a key-value pair into the map.",473,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",473,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",473,null],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",473,null],[11,"range_mut","","Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",473,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",473,null],[11,"iter","","Gets an iterator over the entries of the map, sorted by key.",473,null],[11,"iter_mut","","Gets a mutable iterator over the entries of the map, sorted by key.",473,null],[11,"keys","","Gets an iterator over the keys of the map, in sorted order.",473,null],[11,"values","","Gets an iterator over the values of the map, in order by key.",473,null],[11,"values_mut","","Gets a mutable iterator over the values of the map, in order by key.",473,null],[11,"len","","Returns the number of elements in the map.",473,null],[11,"is_empty","","Returns true if the map contains no elements.",473,null],[11,"drop","","",473,null],[11,"clone","","",473,null],[11,"next","","",474,null],[11,"size_hint","","",474,null],[11,"next_back","","",474,null],[11,"len","","",474,null],[11,"clone","","",474,null],[11,"next","","",475,null],[11,"size_hint","","",475,null],[11,"next_back","","",475,null],[11,"len","","",475,null],[11,"into_iter","","",473,null],[11,"drop","","",476,null],[11,"next","","",476,null],[11,"size_hint","","",476,null],[11,"next_back","","",476,null],[11,"len","","",476,null],[11,"next","","",477,null],[11,"size_hint","","",477,null],[11,"next_back","","",477,null],[11,"len","","",477,null],[11,"clone","","",477,null],[11,"next","","",478,null],[11,"size_hint","","",478,null],[11,"next_back","","",478,null],[11,"len","","",478,null],[11,"clone","","",478,null],[11,"next","","",479,null],[11,"next","","",480,null],[11,"size_hint","","",480,null],[11,"next_back","","",480,null],[11,"len","","",480,null],[11,"next_back","","",479,null],[11,"clone","","",479,null],[11,"next","","",481,null],[11,"next_back","","",481,null],[11,"from_iter","","",473,{"inputs":[{"name":"t"}],"output":{"name":"btreemap"}}],[11,"extend","","",473,null],[11,"extend","","",473,null],[11,"hash","","",473,null],[11,"default","","",473,{"inputs":[],"output":{"name":"btreemap"}}],[11,"eq","","",473,null],[11,"partial_cmp","","",473,null],[11,"cmp","","",473,null],[11,"fmt","","",473,null],[11,"index","","",473,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",482,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",482,null],[11,"key","","Returns a reference to this entry&#39;s key.",482,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",483,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it.",483,null],[11,"key","","Gets a reference to the key in the entry.",484,null],[11,"get","","Gets a reference to the value in the entry.",484,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",484,null],[11,"into_mut","","Converts the entry into a mutable reference to its value.",484,null],[11,"insert","","Sets the value of the entry with the OccupiedEntry&#39;s key,\nand returns the entry&#39;s old value.",484,null],[11,"remove","","Takes the value of the entry out of the map, and returns it.",484,null],[11,"partial_cmp","collections::btree::set","",485,null],[11,"lt","","",485,null],[11,"le","","",485,null],[11,"gt","","",485,null],[11,"ge","","",485,null],[11,"cmp","","",485,null],[11,"eq","","",485,null],[11,"ne","","",485,null],[11,"hash","","",485,null],[11,"clone","","",485,null],[11,"new","","Makes a new BTreeSet with a reasonable choice of B.",485,{"inputs":[],"output":{"name":"btreeset"}}],[11,"iter","","Gets an iterator over the BTreeSet&#39;s contents.",485,null],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the set, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",485,null],[11,"difference","","Visits the values representing the difference, in ascending order.",485,null],[11,"symmetric_difference","","Visits the values representing the symmetric difference, in ascending order.",485,null],[11,"intersection","","Visits the values representing the intersection, in ascending order.",485,null],[11,"union","","Visits the values representing the union, in ascending order.",485,null],[11,"len","","Returns the number of elements in the set.",485,null],[11,"is_empty","","Returns true if the set contains no elements.",485,null],[11,"clear","","Clears the set, removing all values.",485,null],[11,"contains","","Returns `true` if the set contains a value.",485,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",485,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",485,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",485,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",485,null],[11,"insert","","Adds a value to the set.",485,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",485,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",485,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",485,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",485,null],[11,"from_iter","","",485,{"inputs":[{"name":"i"}],"output":{"name":"btreeset"}}],[11,"into_iter","","Gets an iterator for moving out the BtreeSet&#39;s contents.",485,null],[11,"extend","","",485,null],[11,"extend","","",485,null],[11,"default","","",485,{"inputs":[],"output":{"name":"btreeset"}}],[11,"fmt","","",485,null],[11,"clone","","",486,null],[11,"next","","",486,null],[11,"size_hint","","",486,null],[11,"next_back","","",486,null],[11,"len","","",486,null],[11,"next","","",487,null],[11,"size_hint","","",487,null],[11,"next_back","","",487,null],[11,"len","","",487,null],[11,"clone","","",488,null],[11,"next","","",488,null],[11,"next_back","","",488,null],[11,"clone","","",489,null],[11,"next","","",489,null],[11,"size_hint","","",489,null],[11,"clone","","",490,null],[11,"next","","",490,null],[11,"size_hint","","",490,null],[11,"clone","","",491,null],[11,"next","","",491,null],[11,"size_hint","","",491,null],[11,"clone","","",492,null],[11,"next","","",492,null],[11,"size_hint","","",492,null],[11,"hash","collections::enum_set","",493,null],[11,"cmp","","",493,null],[11,"partial_cmp","","",493,null],[11,"lt","","",493,null],[11,"le","","",493,null],[11,"gt","","",493,null],[11,"ge","","",493,null],[11,"eq","","",493,null],[11,"ne","","",493,null],[11,"clone","","",493,null],[11,"fmt","","",493,null],[11,"new","","Returns an empty `EnumSet`.",493,{"inputs":[],"output":{"name":"enumset"}}],[11,"len","","Returns the number of elements in the given `EnumSet`.",493,null],[11,"is_empty","","Returns true if the `EnumSet` is empty.",493,null],[11,"clear","","",493,null],[11,"is_disjoint","","Returns `false` if the `EnumSet` contains any enum of the given `EnumSet`.",493,null],[11,"is_superset","","Returns `true` if a given `EnumSet` is included in this `EnumSet`.",493,null],[11,"is_subset","","Returns `true` if this `EnumSet` is included in the given `EnumSet`.",493,null],[11,"union","","Returns the union of both `EnumSets`.",493,null],[11,"intersection","","Returns the intersection of both `EnumSets`.",493,null],[11,"insert","","Adds an enum to the `EnumSet`, and returns `true` if it wasn&#39;t there before",493,null],[11,"remove","","Removes an enum from the EnumSet",493,null],[11,"contains","","Returns `true` if an `EnumSet` contains a given enum.",493,null],[11,"iter","","Returns an iterator over an `EnumSet`.",493,null],[11,"sub","","",493,null],[11,"bitor","","",493,null],[11,"bitand","","",493,null],[11,"bitxor","","",493,null],[11,"clone","","",494,null],[11,"next","","",494,null],[11,"size_hint","","",494,null],[11,"from_iter","","",493,{"inputs":[{"name":"i"}],"output":{"name":"enumset"}}],[11,"extend","","",493,null],[11,"extend","","",493,null],[11,"start","core::ops","",320,null],[11,"end","","",321,null],[11,"start","","",319,null],[11,"end","","",319,null],[11,"eq","collections","",495,null],[11,"ne","","",495,null],[11,"hash","","",495,null],[11,"fmt","","",495,null],[11,"clone","","",495,null],[11,"fmt","ethcore::block_queue","",20,null],[11,"size","","",20,null],[11,"to_bytes","","",20,null],[11,"from_bytes","","",20,null],[11,"len_params","","",20,{"inputs":[],"output":{"name":"usize"}}],[11,"size","ethcore::client","",31,null],[11,"to_bytes","","",31,null],[11,"from_bytes","","",31,null],[11,"len_params","","",31,{"inputs":[],"output":{"name":"usize"}}],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"default","","",35,{"inputs":[],"output":{"name":"callanalytics"}}],[11,"clone","","",35,null],[11,"fmt","","",35,null],[11,"size","","",35,null],[11,"to_bytes","","",35,null],[11,"from_bytes","","",35,null],[11,"len_params","","",35,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",45,null],[11,"clone","","",45,null],[11,"eq","","",45,null],[11,"from_bytes","","",45,null],[11,"to_bytes","","",45,null],[11,"fmt","","",46,null],[11,"clone","","",46,null],[11,"size","","",46,null],[11,"to_bytes","","",46,null],[11,"from_bytes","","",46,null],[11,"len_params","","",46,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",46,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"fmt","","",44,null],[11,"size","","",44,null],[11,"to_bytes","","",44,null],[11,"from_bytes","","",44,null],[11,"len_params","","",44,{"inputs":[],"output":{"name":"usize"}}],[11,"from","","",44,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[0,"transaction","ethcore","Transaction data structure.",null,null],[3,"Transaction","ethcore::transaction","A set of information describing an externally-originating message call\nor contract creation operation.",null,null],[12,"nonce","","Nonce.",496,null],[12,"gas_price","","Gas price.",496,null],[12,"gas","","Gas paid up front for transaction execution.",496,null],[12,"action","","Action, can be either call or contract create.",496,null],[12,"value","","Transfered value.",496,null],[12,"data","","Transaction data.",496,null],[3,"SignedTransaction","","Signed transaction information.",null,null],[3,"LocalizedTransaction","","Signed Transaction that is a part of canon blockchain.",null,null],[12,"signed","","Signed part.",497,null],[12,"block_number","","Block number.",497,null],[12,"block_hash","","Block hash.",497,null],[12,"transaction_index","","Transaction index within block.",497,null],[4,"Action","","Transaction action type.",null,null],[13,"Create","","Create creates new contract.",498,null],[13,"Call","","Calls contract at given address.\nIn the case of a transfer, this is the receiver&#39;s address.&#39;",498,null],[0,"ids","ethcore","Unique identifiers.",null,null],[3,"TraceId","ethcore::ids","Uniquely identifies Trace.",null,null],[12,"transaction","","Transaction",28,null],[12,"address","","Trace address within transaction.",28,null],[3,"UncleID","","Uniquely identifies Uncle.",null,null],[12,"block","","Block id.",29,null],[12,"position","","Position in block.",29,null],[4,"BlockID","","Uniquely identifies block.",null,null],[13,"Hash","","Block&#39;s sha3.\nQuerying by hash is always faster.",41,null],[13,"Number","","Block number within canon blockchain.",41,null],[13,"Earliest","","Earliest block (genesis).",41,null],[13,"Latest","","Latest mined block.",41,null],[13,"Pending","","Pending block.",41,null],[4,"TransactionID","","Uniquely identifies transaction.",null,null],[13,"Hash","","Transaction&#39;s sha3.",42,null],[13,"Location","","Block id and transaction index within this block.\nQuerying by block position is always faster.",42,null],[0,"receipt","ethcore","Receipt",null,null],[3,"Receipt","ethcore::receipt","Information describing execution of a transaction.",null,null],[12,"state_root","","The state root after executing the transaction.",499,null],[12,"gas_used","","The total gas used in the block following execution of the transaction.",499,null],[12,"log_bloom","","The OR-wide combination of all logs&#39; blooms for this transaction.",499,null],[12,"logs","","The logs stemming from this transaction.",499,null],[3,"LocalizedReceipt","","Receipt with additional info.",null,null],[12,"transaction_hash","","Transaction hash.",500,null],[12,"transaction_index","","Transaction index.",500,null],[12,"block_hash","","Block hash.",500,null],[12,"block_number","","Block number.",500,null],[12,"cumulative_gas_used","","The total gas used in the block following execution of the transaction.",500,null],[12,"gas_used","","The gas used in the execution of the transaction. Note the difference of meaning to `Receipt::gas_used`.",500,null],[12,"contract_address","","Contract address.",500,null],[12,"logs","","Logs",500,null],[0,"tree_route","ethcore","Tree route info type definition",null,null],[3,"TreeRoute","ethcore::tree_route","Represents a tree route between `from` block and `to` block:",null,null],[12,"blocks","","A vector of hashes of all blocks, ordered from `from` to `to`.",501,null],[12,"ancestor","","Best common ancestor of these blocks.",501,null],[12,"index","","An index where best common ancestor would be.",501,null],[0,"blockchain_info","ethcore","Blockhain info type definition",null,null],[3,"BlockChainInfo","ethcore::blockchain_info","Information about the blockchain gathered together.",null,null],[12,"total_difficulty","","Blockchain difficulty.",23,null],[12,"pending_total_difficulty","","Block queue difficulty.",23,null],[12,"genesis_hash","","Genesis block hash.",23,null],[12,"best_block_hash","","Best blockchain block hash.",23,null],[12,"best_block_number","","Best blockchain block number.",23,null],[0,"log_entry","ethcore","Log entry type definition.",null,null],[3,"LogEntry","ethcore::log_entry","A record of execution for a `LOG` operation.",null,null],[12,"address","","The address of the contract executing at the point of the `LOG` operation.",502,null],[12,"topics","","The topics associated with the `LOG` operation.",502,null],[12,"data","","The data associated with the `LOG` operation.",502,null],[3,"LocalizedLogEntry","","Log localized in a blockchain.",null,null],[12,"entry","","Plain log entry.",503,null],[12,"block_hash","","Block in which this log was created.",503,null],[12,"block_number","","Block number.",503,null],[12,"transaction_hash","","Hash of transaction in which this log was created.",503,null],[12,"transaction_index","","Index of transaction within block.",503,null],[12,"log_index","","Log position in the block.",503,null],[0,"trace_types","ethcore","Types used in the public api",null,null],[0,"filter","ethcore::trace_types","Trace filters type definitions",null,null],[3,"AddressesFilter","ethcore::trace_types::filter","Addresses filter.",null,null],[3,"Filter","","Traces filter.",null,null],[12,"range","","Block range.",393,null],[12,"from_address","","From address filter.",393,null],[12,"to_address","","To address filter.",393,null],[0,"flat","ethcore::trace_types","Flat trace module",null,null],[3,"FlatTrace","ethcore::trace_types::flat","Trace localized in vector of traces produced by a single transaction.",null,null],[12,"action","","Type of action performed by a transaction.",392,null],[12,"result","","Result of this action.",392,null],[12,"subtraces","","Number of subtraces.",392,null],[12,"trace_address","","Exact location of trace.",392,null],[3,"FlatTransactionTraces","","Represents all traces produced by a single transaction.",null,null],[3,"FlatBlockTraces","","Represents all traces produced by transactions in a single block.",null,null],[0,"trace","ethcore::trace_types","Tracing datatypes.",null,null],[3,"CallResult","ethcore::trace_types::trace","`Call` result.",null,null],[12,"gas_used","","Gas used by call.",402,null],[12,"output","","Call Output.",402,null],[3,"CreateResult","","`Create` result.",null,null],[12,"gas_used","","Gas used by create.",403,null],[12,"code","","Code of the newly created contract.",403,null],[12,"address","","Address of the newly created contract.",403,null],[3,"Call","","Description of a _call_ action, either a `CALL` operation or a message transction.",null,null],[12,"from","","The sending account.",404,null],[12,"to","","The destination account.",404,null],[12,"value","","The value transferred to the destination account.",404,null],[12,"gas","","The gas available for executing the call.",404,null],[12,"input","","The input data provided to the call.",404,null],[12,"call_type","","The type of the call.",404,null],[3,"Create","","Description of a _create_ action, either a `CREATE` operation or a create transction.",null,null],[12,"from","","The address of the creator.",405,null],[12,"value","","The value with which the new account is endowed.",405,null],[12,"gas","","The gas available for the creation init code.",405,null],[12,"init","","The init code.",405,null],[3,"Suicide","","Suicide action.",null,null],[12,"address","","Suicided address.",406,null],[12,"refund_address","","Suicided contract heir.",406,null],[12,"balance","","Balance of the contract just before suicide.",406,null],[3,"MemoryDiff","","A diff of some chunk of memory.",null,null],[12,"offset","","Offset into memory the change begins.",390,null],[12,"data","","The changed data.",390,null],[3,"StorageDiff","","A diff of some storage value.",null,null],[12,"location","","Which key in storage is changed.",391,null],[12,"value","","What the value has been changed to.",391,null],[3,"VMExecutedOperation","","A record of an executed VM operation.",null,null],[12,"gas_used","","The total gas used.",389,null],[12,"stack_push","","The stack item placed, if any.",389,null],[12,"mem_diff","","If altered, the memory delta.",389,null],[12,"store_diff","","The altered storage value, if any.",389,null],[3,"VMOperation","","A record of the execution of a single VM operation.",null,null],[12,"pc","","The program counter.",388,null],[12,"instruction","","The instruction executed.",388,null],[12,"gas_cost","","The gas cost for this instruction.",388,null],[12,"executed","","Information concerning the execution of the operation.",388,null],[3,"VMTrace","","A record of a full VM trace for a CALL/CREATE.",null,null],[12,"parent_step","","The step (i.e. index into operations) at which this trace corresponds.",387,null],[12,"code","","The code to be executed.",387,null],[12,"operations","","The operations executed.",387,null],[12,"subs","","The sub traces for each interior action performed as part of this call/create.\nThre is a 1:1 correspondance between these and a CALL/CREATE/CALLCODE/DELEGATECALL instruction.",387,null],[4,"Action","","Description of an action that we trace; will be either a call or a create.",null,null],[13,"Call","","It&#39;s a call action.",407,null],[13,"Create","","It&#39;s a create action.",407,null],[13,"Suicide","","Suicide.",407,null],[4,"Res","","The result of the performed action.",null,null],[13,"Call","","Successful call action result.",408,null],[13,"Create","","Successful create action result.",408,null],[13,"FailedCall","","Failed call.",408,null],[13,"FailedCreate","","Failed create.",408,null],[13,"None","","None",408,null],[0,"localized","ethcore::trace_types","Localized traces type definitions",null,null],[3,"LocalizedTrace","ethcore::trace_types::localized","Localized trace.",null,null],[12,"action","","Type of action performed by a transaction.",395,null],[12,"result","","Result of this action.",395,null],[12,"subtraces","","Number of subtraces.",395,null],[12,"trace_address","","Exact location of trace.",395,null],[12,"transaction_number","","Transaction number within the block.",395,null],[12,"transaction_hash","","Signed transaction hash.",395,null],[12,"block_number","","Block number.",395,null],[12,"block_hash","","Block hash.",395,null],[0,"executed","ethcore","Transaction execution format module.",null,null],[3,"Executed","ethcore::executed","Transaction execution receipt.",null,null],[12,"gas","","Gas paid up front for execution of transaction.",32,null],[12,"gas_used","","Gas used during execution of transaction.",32,null],[12,"refunded","","Gas refunded after the execution of transaction.\nTo get gas that was required up front, add `refunded` and `gas_used`.",32,null],[12,"cumulative_gas_used","","Cumulative gas used in current block so far.",32,null],[12,"logs","","Vector of logs generated by transaction.",32,null],[12,"contracts_created","","Addresses of contracts created during execution of transaction.\nOrdered from earliest creation.",32,null],[12,"output","","Transaction output.",32,null],[12,"trace","","The trace of this transaction.",32,null],[12,"vm_trace","","The VM trace of this transaction.",32,null],[12,"state_diff","","The state diff, if we traced it.",32,null],[4,"CallType","","The type of the call-like instruction.",null,null],[13,"None","","Not a CALL.",454,null],[13,"Call","","CALL.",454,null],[13,"CallCode","","CALLCODE.",454,null],[13,"DelegateCall","","DELEGATECALL.",454,null],[4,"ExecutionError","","Result of executing the transaction.",null,null],[13,"NotEnoughBaseGas","","Returned when there gas paid for transaction execution is\nlower than base gas required.",375,null],[12,"required","ethcore::executed::ExecutionError","Absolute minimum gas required.",375,null],[12,"got","","Gas provided.",375,null],[13,"BlockGasLimitReached","ethcore::executed","Returned when block (gas_used + gas) &gt; gas_limit.",375,null],[12,"gas_limit","ethcore::executed::ExecutionError","Gas limit of block for transaction.",375,null],[12,"gas_used","","Gas used in block prior to transaction.",375,null],[12,"gas","","Amount of gas in block.",375,null],[13,"InvalidNonce","ethcore::executed","Returned when transaction nonce does not match state nonce.",375,null],[12,"expected","ethcore::executed::ExecutionError","Nonce expected.",375,null],[12,"got","","Nonce found.",375,null],[13,"NotEnoughCash","ethcore::executed","Returned when cost of transaction (value + gas_price * gas) exceeds\ncurrent sender balance.",375,null],[12,"required","ethcore::executed::ExecutionError","Minimum required balance.",375,null],[12,"got","","Actual balance.",375,null],[13,"Internal","ethcore::executed","Returned when internal evm error occurs.",375,null],[13,"TransactionMalformed","","Returned when generic transaction occurs",375,null],[4,"CallError","","Result of executing the transaction.",null,null],[13,"TransactionNotFound","","Couldn&#39;t find the transaction in the chain.",376,null],[13,"StatePruned","","Couldn&#39;t find requested block&#39;s state in the chain.",376,null],[13,"Execution","","Error executing.",376,null],[6,"ExecutionResult","","Transaction execution result.",null,null],[0,"block_status","ethcore","Block status description module",null,null],[4,"BlockStatus","ethcore::block_status","General block status",null,null],[13,"InChain","","Part of the blockchain.",36,null],[13,"Queued","","Queued for import.",36,null],[13,"Bad","","Known as bad.",36,null],[13,"Unknown","","Unknown.",36,null],[0,"account_diff","ethcore","Diff between two accounts.",null,null],[3,"AccountDiff","ethcore::account_diff","Account diff.",null,null],[12,"balance","","Change in balance, allowed to be `Diff::Same`.",504,null],[12,"nonce","","Change in nonce, allowed to be `Diff::Same`.",504,null],[12,"code","","Change in code, allowed to be `Diff::Same`.",504,null],[12,"storage","","Change in storage, values are not allowed to be `Diff::Same`.",504,null],[4,"Diff","","Diff type for specifying a change (or not).",null,null],[13,"Same","","Both sides are the same.",505,null],[13,"Born","","Left (pre, source) side doesn&#39;t include value, right side (post, destination) does.",505,null],[13,"Changed","","Both sides include data; it chaged value between them.",505,null],[13,"Died","","Left (pre, source) side does include value, right side (post, destination) does not.",505,null],[4,"Existance","","Change in existance type.",null,null],[13,"Born","","Item came into existance.",506,null],[13,"Alive","","Item stayed in existance.",506,null],[13,"Died","","Item went out of existance.",506,null],[0,"state_diff","ethcore","State diff module.",null,null],[3,"StateDiff","ethcore::state_diff","Expression for the delta between two system states. Encoded the\ndelta of every altered account.",null,null],[12,"raw","","Raw diff key-value",507,null],[0,"block_queue_info","ethcore","Block queue info types",null,null],[3,"BlockQueueInfo","ethcore::block_queue_info","Block queue status",null,null],[12,"unverified_queue_size","","Number of queued blocks pending verification",20,null],[12,"verified_queue_size","","Number of verified queued blocks pending import",20,null],[12,"verifying_queue_size","","Number of blocks being verified",20,null],[12,"max_queue_size","","Configured maximum number of blocks in the queue",20,null],[12,"max_mem_use","","Configured maximum number of bytes to use",20,null],[12,"mem_used","","Heap memory used in bytes",20,null],[0,"filter","ethcore","Blockchain filter",null,null],[3,"Filter","ethcore::filter","Blockchain Filter.",null,null],[12,"from_block","","Blockchain will be searched from this block.",508,null],[12,"to_block","","Till this block.",508,null],[12,"address","","Search addresses.",508,null],[12,"topics","","Search topics.",508,null],[0,"trace_filter","ethcore","Trace filter related types",null,null],[3,"Filter","ethcore::trace_filter","Easy to use trace filter.",null,null],[12,"range","","Range of filtering.",31,null],[12,"from_address","","From address.",31,null],[12,"to_address","","To address.",31,null],[0,"call_analytics","ethcore","Call analytics related types",null,null],[3,"CallAnalytics","ethcore::call_analytics","Options concerning what analytics we run on the call.",null,null],[12,"transaction_tracing","","Make a transaction trace.",35,null],[12,"vm_tracing","","Make a VM trace.",35,null],[12,"state_diffing","","Make a diff.",35,null],[0,"transaction_import","ethcore","Transaction import result related types",null,null],[4,"TransactionImportResult","ethcore::transaction_import","Represents the result of importing transaction.",null,null],[13,"Current","","Transaction was imported to current queue.",45,null],[13,"Future","","Transaction was imported to future queue.",45,null],[4,"TransactionImportError","","Api-level error for transaction import",null,null],[13,"Transaction","","Transaction error",46,null],[13,"Other","","Other error",46,null],[0,"block_import_error","ethcore","Block import error related types",null,null],[4,"BlockImportError","ethcore::block_import_error","Error dedicated to import block function",null,null],[13,"Import","","Import error",44,null],[13,"Block","","Block error",44,null],[13,"Other","","Other error",44,null],[14,"evm_test!","ethcore","Create tests by injecting different VM factories",null,null],[14,"evm_test_ignore!","","Create ignored tests by injecting different VM factories",null,null],[11,"signature","ethcore::header","Get the none field of the header.",383,null],[11,"keep_alive","ethcore::client","Should be called by any external-facing interface when actively using the client.\nTo minimise chatter, there&#39;s no need to call more than once every 30s.",373,null],[11,"latest_nonce","","Get address nonce at the latest block&#39;s state.",373,null],[11,"latest_balance","","Get address balance at the latest block&#39;s state.",373,null],[11,"latest_storage_at","","Get value of the storage at given position at the latest block&#39;s state.",373,null],[11,"gas_price_statistics","","Get the gas price distribution.",373,null],[11,"dispatch","","",373,null],[11,"dispatch_buf","","",373,null],[11,"nonce","ethcore::header","Get the none field of the header.",383,null],[11,"mix_hash","","Get the mix hash field of the header.",383,null],[11,"set_nonce_and_mix_hash","","Set the nonce and mix hash fields of the header.",383,null],[11,"fmt","ethcore::transaction","",498,null],[11,"clone","","",498,null],[11,"eq","","",498,null],[11,"ne","","",498,null],[11,"size","","",498,null],[11,"to_bytes","","",498,null],[11,"from_bytes","","",498,null],[11,"len_params","","",498,{"inputs":[],"output":{"name":"usize"}}],[11,"default","","",498,{"inputs":[],"output":{"name":"action"}}],[11,"decode","","",498,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","","",496,{"inputs":[],"output":{"name":"transaction"}}],[11,"fmt","","",496,null],[11,"clone","","",496,null],[11,"eq","","",496,null],[11,"ne","","",496,null],[11,"size","","",496,null],[11,"to_bytes","","",496,null],[11,"from_bytes","","",496,null],[11,"len_params","","",496,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append_unsigned_transaction","","Append object with a without signature into RLP stream",496,null],[11,"from","","",509,{"inputs":[{"name":"transaction"}],"output":{"name":"self"}}],[11,"from","","",509,{"inputs":[{"name":"transaction"}],"output":{"name":"self"}}],[11,"hash","","The message hash of the transaction.",496,null],[11,"sign","","Signs the transaction as coming from `sender`.",496,null],[11,"with_signature","","Signs the transaction with signature.",496,null],[11,"fake_sign","","Specify the sender; this won&#39;t survive the serialize/deserialize process, but can be cloned.",496,null],[11,"gas_required_for","","Get the transaction cost in gas for the given params.",496,null],[11,"gas_required","","Get the transaction cost in gas for this transaction.",496,null],[11,"fmt","","",509,null],[11,"clone","","",509,null],[11,"size","","",509,null],[11,"to_bytes","","",509,null],[11,"from_bytes","","",509,null],[11,"len_params","","",509,{"inputs":[],"output":{"name":"usize"}}],[11,"eq","","",509,null],[11,"deref","","",509,null],[11,"decode","","",509,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"rlp_append","","",509,null],[11,"rlp_append_sealed_transaction","","Append object with a signature into RLP stream",509,null],[11,"hash","","Get the hash of this header (sha3 of the RLP).",509,null],[11,"standard_v","","0 is `v` is 27, 1 if 28, and 4 otherwise.",509,null],[11,"signature","","Construct a signature object from the sig.",509,null],[11,"check_low_s","","Checks whether the signature has a low &#39;s&#39; value.",509,null],[11,"sender","","Returns transaction sender.",509,null],[11,"fmt","","",497,null],[11,"eq","","",497,null],[11,"ne","","",497,null],[11,"size","","",497,null],[11,"to_bytes","","",497,null],[11,"from_bytes","","",497,null],[11,"len_params","","",497,{"inputs":[],"output":{"name":"usize"}}],[11,"deref","","",497,null],[11,"default","ethcore::receipt","",499,{"inputs":[],"output":{"name":"receipt"}}],[11,"fmt","","",499,null],[11,"clone","","",499,null],[11,"size","","",499,null],[11,"to_bytes","","",499,null],[11,"from_bytes","","",499,null],[11,"len_params","","",499,{"inputs":[],"output":{"name":"usize"}}],[11,"new","","Create a new receipt.",499,{"inputs":[{"name":"h256"},{"name":"u256"},{"name":"vec"}],"output":{"name":"receipt"}}],[11,"rlp_append","","",499,null],[11,"decode","","",499,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"heap_size_of_children","","",499,null],[11,"fmt","","",500,null],[11,"clone","","",500,null],[11,"eq","","",500,null],[11,"ne","","",500,null],[11,"size","","",500,null],[11,"to_bytes","","",500,null],[11,"from_bytes","","",500,null],[11,"len_params","","",500,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","ethcore::tree_route","",501,null],[11,"size","","",501,null],[11,"to_bytes","","",501,null],[11,"from_bytes","","",501,null],[11,"len_params","","",501,{"inputs":[],"output":{"name":"usize"}}],[11,"default","ethcore::log_entry","",502,{"inputs":[],"output":{"name":"logentry"}}],[11,"fmt","","",502,null],[11,"clone","","",502,null],[11,"eq","","",502,null],[11,"ne","","",502,null],[11,"size","","",502,null],[11,"to_bytes","","",502,null],[11,"from_bytes","","",502,null],[11,"len_params","","",502,{"inputs":[],"output":{"name":"usize"}}],[11,"rlp_append","","",502,null],[11,"decode","","",502,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"heap_size_of_children","","",502,null],[11,"bloom","","Calculates the bloom of this log entry.",502,null],[11,"from","","",502,{"inputs":[{"name":"log"}],"output":{"name":"self"}}],[11,"default","","",503,{"inputs":[],"output":{"name":"localizedlogentry"}}],[11,"fmt","","",503,null],[11,"eq","","",503,null],[11,"ne","","",503,null],[11,"clone","","",503,null],[11,"size","","",503,null],[11,"to_bytes","","",503,null],[11,"from_bytes","","",503,null],[11,"len_params","","",503,{"inputs":[],"output":{"name":"usize"}}],[11,"deref","","",503,null],[11,"fmt","ethcore::account_diff","",505,null],[11,"eq","","",505,null],[11,"ne","","",505,null],[11,"clone","","",505,null],[11,"size","","",505,null],[11,"to_bytes","","",505,null],[11,"from_bytes","","",505,null],[11,"len_params","","",505,{"inputs":[],"output":{"name":"usize"}}],[11,"new","","Construct new object with given `pre` and `post`.",505,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"self"}}],[11,"pre","","Get the before value, if there is one.",505,null],[11,"post","","Get the after value, if there is one.",505,null],[11,"is_same","","Determine whether there was a change or not.",505,null],[11,"fmt","","",504,null],[11,"eq","","",504,null],[11,"ne","","",504,null],[11,"clone","","",504,null],[11,"size","","",504,null],[11,"to_bytes","","",504,null],[11,"from_bytes","","",504,null],[11,"len_params","","",504,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",506,null],[11,"eq","","",506,null],[11,"clone","","",506,null],[11,"size","","",506,null],[11,"to_bytes","","",506,null],[11,"from_bytes","","",506,null],[11,"len_params","","",506,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",506,null],[11,"existance","","Get `Existance` projection.",504,null],[11,"fmt","","",504,null],[11,"fmt","ethcore::state_diff","",507,null],[11,"eq","","",507,null],[11,"ne","","",507,null],[11,"clone","","",507,null],[11,"size","","",507,null],[11,"to_bytes","","",507,null],[11,"from_bytes","","",507,null],[11,"len_params","","",507,{"inputs":[],"output":{"name":"usize"}}],[11,"get","","Get the actual data.",507,null],[11,"fmt","","",507,null],[11,"deref","","",507,null],[11,"size","ethcore::filter","",508,null],[11,"to_bytes","","",508,null],[11,"from_bytes","","",508,null],[11,"len_params","","",508,{"inputs":[],"output":{"name":"usize"}}],[11,"clone","","",508,null],[11,"bloom_possibilities","","Returns combinations of each address and topic.",508,null],[11,"matches","","Returns true if given log entry matches filter.",508,null]],"paths":[[3,"AccountMeta"],[4,"Error"],[3,"Secret"],[3,"Message"],[3,"Address"],[3,"AccountProvider"],[3,"NullEngine"],[3,"InstantSeal"],[3,"BasicAuthority"],[8,"Engine"],[3,"Block"],[3,"BlockRefMut"],[3,"BlockRef"],[8,"IsBlock"],[8,"Drain"],[3,"ExecutedBlock"],[3,"ClosedBlock"],[3,"LockedBlock"],[3,"OpenBlock"],[3,"SealedBlock"],[3,"BlockQueueInfo"],[3,"BlockQueueConfig"],[3,"BlockQueue"],[3,"BlockChainInfo"],[3,"BlockChainCacheSize"],[3,"ClientReport"],[3,"ClientConfig"],[3,"Config"],[3,"TraceId"],[3,"UncleID"],[3,"TestBlockChainClient"],[3,"TraceFilter"],[3,"Executed"],[3,"TransactOptions"],[3,"EnvInfo"],[3,"CallAnalytics"],[4,"BlockStatus"],[4,"Mode"],[4,"DatabaseCompactionProfile"],[4,"Switch"],[4,"Error"],[4,"BlockID"],[4,"TransactionID"],[4,"EachBlockWith"],[4,"BlockImportError"],[4,"TransactionImportResult"],[4,"TransactionImportError"],[3,"Duration"],[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"TryFromIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[8,"Error"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"FromBytesWithNulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[3,"AssertRecoverSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Mutex"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Drain"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Rc"],[3,"Weak"],[3,"Unique"],[3,"Shared"],[3,"IntoIter"],[3,"Drain"],[3,"Slice"],[3,"TraitObject"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[8,"Any"],[3,"TypeId"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"PhantomData"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"Ordering"],[3,"Client"],[3,"RemoteClient"],[8,"ChainNotify"],[3,"ChainNotifyClient"],[8,"BlockChainClient"],[8,"MiningBlockChainClient"],[4,"ExecutionError"],[4,"CallError"],[4,"TransactionError"],[4,"BlockError"],[4,"ImportError"],[4,"Error"],[3,"EthashParams"],[3,"Ethash"],[3,"Header"],[4,"ClientIoMessage"],[3,"ClientService"],[3,"Config"],[3,"VMTrace"],[3,"VMOperation"],[3,"VMExecutedOperation"],[3,"MemoryDiff"],[3,"StorageDiff"],[3,"FlatTrace"],[3,"Filter"],[3,"ImportRequest"],[3,"LocalizedTrace"],[4,"Error"],[3,"TraceDB"],[3,"ExecutiveTracer"],[3,"ExecutiveVMTracer"],[3,"NoopTracer"],[3,"NoopVMTracer"],[3,"CallResult"],[3,"CreateResult"],[3,"Call"],[3,"Create"],[3,"Suicide"],[4,"Action"],[4,"Res"],[8,"Tracer"],[8,"VMTracer"],[8,"DatabaseExtras"],[8,"Database"],[3,"Genesis"],[3,"CommonParams"],[3,"Spec"],[3,"BlockView"],[3,"HeaderView"],[3,"TransactionView"],[3,"BodyView"],[3,"PodState"],[4,"Extract"],[3,"ArchiveV7"],[3,"OverlayRecentV7"],[3,"V8"],[3,"ToV6"],[3,"ToV9"],[3,"AccountDetails"],[3,"MinerOptions"],[3,"GasPriceCalibratorOptions"],[3,"MinerStatus"],[4,"TransactionOrigin"],[4,"PendingSet"],[4,"GasPricer"],[3,"Miner"],[3,"ExternalMiner"],[3,"TransactionQueue"],[8,"ExternalMinerService"],[8,"MinerService"],[3,"ManifestData"],[4,"Error"],[8,"SnapshotWriter"],[8,"SnapshotReader"],[3,"PackedWriter"],[3,"LooseWriter"],[3,"PackedReader"],[3,"LooseReader"],[4,"RestorationStatus"],[8,"SnapshotService"],[3,"Service"],[3,"StateRebuilder"],[3,"BlockRebuilder"],[3,"ActionParams"],[4,"ActionValue"],[4,"CallType"],[4,"ContractCreateResult"],[4,"MessageCallResult"],[8,"Ext"],[4,"Error"],[4,"GasLeft"],[8,"Finalize"],[8,"CostType"],[8,"Evm"],[6,"Result"],[3,"U256"],[3,"Interpreter"],[4,"VMType"],[3,"Factory"],[3,"Schedule"],[3,"Executive"],[3,"AddressesFilter"],[3,"FlatTransactionTraces"],[3,"FlatBlockTraces"],[3,"BTreeMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Range"],[3,"ValuesMut"],[3,"RangeMut"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"BTreeSet"],[3,"Iter"],[3,"IntoIter"],[3,"Range"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[3,"EnumSet"],[3,"Iter"],[4,"Bound"],[3,"Transaction"],[3,"LocalizedTransaction"],[4,"Action"],[3,"Receipt"],[3,"LocalizedReceipt"],[3,"TreeRoute"],[3,"LogEntry"],[3,"LocalizedLogEntry"],[3,"AccountDiff"],[4,"Diff"],[4,"Existance"],[3,"StateDiff"],[3,"Filter"],[3,"SignedTransaction"]]};
searchIndex["ethcore_ipc_tests"] = {"doc":"","items":[[0,"service","ethcore_ipc_tests","",null,null],[3,"Service","ethcore_ipc_tests::service","",null,null],[12,"commits","","",0,null],[12,"rollbacks","","",0,null],[3,"CustomData","","",null,null],[12,"a","","",1,null],[12,"b","","",1,null],[3,"ServiceClient","","",null,null],[11,"size","","",1,null],[11,"to_bytes","","",1,null],[11,"from_bytes","","",1,null],[11,"len_params","","",1,{"inputs":[],"output":{"name":"usize"}}],[11,"rollback","","",0,null],[11,"push_custom","","",0,null],[11,"void","","",0,null],[11,"commit","","",2,null],[11,"rollback","","",2,null],[11,"push_custom","","",2,null],[11,"void","","",2,null],[11,"handshake","","",2,null],[11,"init","","",2,{"inputs":[{"name":"s"}],"output":{"name":"serviceclient"}}],[11,"dispatch","","",0,null],[11,"dispatch_buf","","",0,null],[11,"new","","",0,{"inputs":[],"output":{"name":"service"}}]],"paths":[[3,"Service"],[3,"CustomData"],[3,"ServiceClient"]]};
searchIndex["ethstore"] = {"doc":"","items":[[3,"SafeAccount","ethstore","",null,null],[12,"id","","",0,null],[12,"version","","",0,null],[12,"address","","",0,null],[12,"crypto","","",0,null],[12,"filename","","",0,null],[12,"name","","",0,null],[12,"meta","","",0,null],[3,"EthStore","","",null,null],[3,"PresaleWallet","","",null,null],[4,"Error","","",null,null],[13,"Io","","",1,null],[13,"InvalidPassword","","",1,null],[13,"InvalidSecret","","",1,null],[13,"InvalidAccount","","",1,null],[13,"InvalidKeyFile","","",1,null],[13,"CreationFailed","","",1,null],[13,"EthKey","","",1,null],[13,"Custom","","",1,null],[5,"import_accounts","","",null,{"inputs":[{"name":"keydirectory"},{"name":"keydirectory"}],"output":{"name":"result"}}],[0,"dir","","",null,null],[3,"DiskDirectory","ethstore::dir","",null,null],[3,"GethDirectory","","",null,null],[3,"ParityDirectory","","",null,null],[4,"DirectoryType","","",null,null],[13,"Testnet","","",2,null],[13,"Main","","",2,null],[11,"create","","",3,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"at","","",3,{"inputs":[{"name":"p"}],"output":{"name":"self"}}],[11,"load","","",3,null],[11,"insert","","",3,null],[11,"remove","","",3,null],[11,"create","","",4,{"inputs":[{"name":"directorytype"}],"output":{"name":"result"}}],[11,"open","","",4,{"inputs":[{"name":"directorytype"}],"output":{"name":"self"}}],[11,"load","","",4,null],[11,"insert","","",4,null],[11,"remove","","",4,null],[11,"create","","",5,{"inputs":[{"name":"directorytype"}],"output":{"name":"result"}}],[11,"open","","",5,{"inputs":[{"name":"directorytype"}],"output":{"name":"self"}}],[11,"load","","",5,null],[11,"insert","","",5,null],[11,"remove","","",5,null],[8,"KeyDirectory","","",null,null],[10,"load","","",6,null],[10,"insert","","",6,null],[10,"remove","","",6,null],[0,"ethkey","ethstore","ethkey reexport to make documentation look pretty.",null,null],[11,"into","ethkey::primitive","",7,null],[11,"from","","",7,{"inputs":[{"name":"h160"}],"output":{"name":"self"}}],[11,"from","","",7,{"inputs":[{"name":"h160"}],"output":{"name":"self"}}],[11,"clone","ethstore","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"into","","",0,null],[11,"create","","",0,null],[11,"from_file","","",0,{"inputs":[{"name":"keyfile"},{"name":"string"}],"output":{"name":"self"}}],[11,"sign","","",0,null],[11,"change_password","","",0,null],[11,"check_password","","",0,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"from","","",1,{"inputs":[{"name":"ioerror"}],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"ethkeyerror"}],"output":{"name":"self"}}],[11,"open","","",8,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"open_with_iterations","","",8,{"inputs":[{"name":"box"},{"name":"u32"}],"output":{"name":"result"}}],[11,"insert_account","","",8,null],[11,"accounts","","",8,null],[11,"change_password","","",8,null],[11,"remove_account","","",8,null],[11,"sign","","",8,null],[11,"uuid","","",8,null],[11,"name","","",8,null],[11,"meta","","",8,null],[11,"set_name","","",8,null],[11,"set_meta","","",8,null],[11,"from","","",9,{"inputs":[{"name":"presalewallet"}],"output":{"name":"self"}}],[11,"open","","",9,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"decrypt","","",9,null],[8,"SecretStore","","",null,null],[10,"insert_account","","",10,null],[10,"accounts","","",10,null],[10,"change_password","","",10,null],[10,"remove_account","","",10,null],[10,"sign","","",10,null],[10,"uuid","","",10,null],[10,"name","","",10,null],[10,"meta","","",10,null],[10,"set_name","","",10,null],[10,"set_meta","","",10,null]],"paths":[[3,"SafeAccount"],[4,"Error"],[4,"DirectoryType"],[3,"DiskDirectory"],[3,"GethDirectory"],[3,"ParityDirectory"],[8,"KeyDirectory"],[3,"Address"],[3,"EthStore"],[3,"PresaleWallet"],[8,"SecretStore"]]};
searchIndex["ethcore_io"] = {"doc":"General IO module.","items":[[3,"IoContext","ethcore_io","IO access point. This is passed to all IO handlers and provides an interface to the IO subsystem.",null,null],[3,"IoService","","General IO Service. Starts an event loop and dispatches IO requests.\n&#39;Message&#39; is a notification message type",null,null],[3,"IoChannel","","Allows sending messages into the event loop. All the IO handlers will get the message\nin the `message` callback.",null,null],[3,"IoManager","","Root IO handler. Manages user handlers, messages and IO timers.",null,null],[3,"PanicHandler","","Structure that allows to catch panics and notify listeners",null,null],[4,"IoError","","IO Error",null,null],[13,"Mio","","Low level error from mio crate",0,null],[13,"StdIo","","Error concerning the Rust standard library&#39;s IO subsystem.",0,null],[11,"new","","Create a new IO access point. Takes references to all the data that can be updated within the IO handler.",1,{"inputs":[{"name":"iochannel"},{"name":"handlerid"}],"output":{"name":"iocontext"}}],[11,"register_timer","","Register a new IO timer. &#39;IoHandler::timeout&#39; will be called with the token.",1,null],[11,"clear_timer","","Delete a timer.",1,null],[11,"register_stream","","Register a new IO stream.",1,null],[11,"deregister_stream","","Deregister an IO stream.",1,null],[11,"update_registration","","Reregister an IO stream.",1,null],[11,"message","","Broadcast a message to other IO clients",1,null],[11,"channel","","Get message channel",1,null],[11,"unregister_handler","","Unregister current IO handler.",1,null],[11,"start","","Creates a new instance and registers it with the event loop.",2,{"inputs":[{"name":"arc"},{"name":"eventloop"}],"output":{"name":"result"}}],[11,"ready","","",2,null],[11,"timeout","","",2,null],[11,"notify","","",2,null],[11,"clone","","",3,null],[11,"send","","Send a msessage through the channel",3,null],[11,"send_io","","Send low level io message",3,null],[11,"disconnected","","Create a new channel to connected to event loop.",3,{"inputs":[],"output":{"name":"iochannel"}}],[11,"on_panic","","",4,null],[11,"start","","Starts IO event loop",4,{"inputs":[],"output":{"name":"result"}}],[11,"register_handler","","Regiter an IO handler with the event loop.",4,null],[11,"send_message","","Send a message over the network. Normaly `HostIo::send` should be used. This can be used from non-io threads.",4,null],[11,"channel","","Create a new message channel",4,null],[11,"drop","","",4,null],[11,"default","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"new_in_arc","","Creates new `PanicHandler` wrapped in `Arc`",5,{"inputs":[],"output":{"name":"arc"}}],[11,"new","","Creates new `PanicHandler`",5,{"inputs":[],"output":{"name":"self"}}],[11,"catch_panic","","Invoke closure and catch any possible panics.\nIn case of panic notifies all listeners about it.",5,null],[11,"notify_all","","Notifies all listeners in case there is a panic.\nYou should use `catch_panic` instead of calling this method explicitly.",5,null],[11,"on_panic","","",5,null],[11,"forward_from","alloc::arc","",6,null],[6,"TimerToken","ethcore_io","Timer ID",null,null],[6,"StreamToken","","Timer ID",null,null],[17,"TOKENS_PER_HANDLER","","Maximum number of tokens a handler can use",null,null],[8,"IoHandler","","Generic IO handler.\nAll the handler function are called from within IO event loop.\n`Message` type is used as notification data",null,null],[11,"initialize","","Initialize the handler",7,null],[11,"timeout","","Timer function called after a timeout created with `HandlerIo::timeout`.",7,null],[11,"message","","Called when a broadcasted message is received. The message can only be sent from a different IO handler.",7,null],[11,"stream_hup","","Called when an IO stream gets closed",7,null],[11,"stream_readable","","Called when an IO stream can be read from",7,null],[11,"stream_writable","","Called when an IO stream can be written to",7,null],[11,"register_stream","","Register a new stream with the event loop",7,null],[11,"update_stream","","Re-register a stream with the event loop",7,null],[11,"deregister_stream","","Deregister a stream. Called whenstream is removed from event loop",7,null],[8,"MayPanic","","Trait indicating that the structure catches some of the panics (most probably from spawned threads)\nand it&#39;s possbile to be notified when one of the threads panics.",null,null],[10,"on_panic","","`closure` will be invoked whenever panic in thread is caught",8,null],[8,"OnPanicListener","","Thread-safe closure for handling possible panics",null,null],[10,"call","","Invoke listener",9,null],[8,"ForwardPanic","","Forwards panics from child",null,null],[10,"forward_from","","Attach `on_panic` listener to `child` and rethrow all panics",10,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"ioerror"}}],[11,"from","","",0,{"inputs":[{"name":"notifyerror"}],"output":{"name":"ioerror"}}]],"paths":[[4,"IoError"],[3,"IoContext"],[3,"IoManager"],[3,"IoChannel"],[3,"IoService"],[3,"PanicHandler"],[3,"Arc"],[8,"IoHandler"],[8,"MayPanic"],[8,"OnPanicListener"],[8,"ForwardPanic"]]};
searchIndex["ethcore_network"] = {"doc":"Network and general IO module.","items":[[3,"NetworkContext","ethcore_network","IO access point. This is passed to all IO handlers and provides an interface to the IO subsystem.",null,null],[3,"NetworkService","","IO Service with networking\n`Message` defines a notification data type.",null,null],[3,"NetworkConfiguration","","Network service configuration",null,null],[12,"config_path","","Directory path to store network configuration. None means nothing will be saved",0,null],[12,"listen_address","","IP address to listen for incoming connections. Listen to all connections by default",0,null],[12,"public_address","","IP address to advertise. Detected automatically if none.",0,null],[12,"udp_port","","Port for UDP connections, same as TCP by default",0,null],[12,"nat_enabled","","Enable NAT configuration",0,null],[12,"discovery_enabled","","Enable discovery",0,null],[12,"boot_nodes","","List of initial node addresses",0,null],[12,"use_secret","","Use provided node key instead of default",0,null],[12,"min_peers","","Minimum number of connected peers to maintain",0,null],[12,"max_peers","","Maximum allowd number of peers",0,null],[12,"reserved_nodes","","List of reserved node addresses.",0,null],[12,"non_reserved_mode","","The non-reserved peer mode.",0,null],[3,"NetworkStats","","Network statistics structure",null,null],[4,"NetworkIoMessage","","Messages used to communitate with the event loop from other threads.",null,null],[13,"AddHandler","","Register a new protocol handler.",1,null],[12,"handler","ethcore_network::NetworkIoMessage","Handler shared instance.",1,null],[12,"protocol","","Protocol Id.",1,null],[12,"versions","","Supported protocol versions.",1,null],[13,"AddTimer","ethcore_network","Register a new protocol timer",1,null],[12,"protocol","ethcore_network::NetworkIoMessage","Protocol Id.",1,null],[12,"token","","Timer token.",1,null],[12,"delay","","Timer delay in milliseconds.",1,null],[13,"InitPublicInterface","ethcore_network","Initliaze public interface.",1,null],[13,"Disconnect","","Disconnect a peer.",1,null],[13,"DisablePeer","","Disconnect and temporary disable peer.",1,null],[13,"NetworkStarted","","Network has been started with the host as the given enode.",1,null],[4,"NetworkError","","Network error.",null,null],[13,"Auth","","Authentication error.",2,null],[13,"BadProtocol","","Unrecognised protocol.",2,null],[13,"Expired","","Message expired.",2,null],[13,"PeerNotFound","","Peer not found.",2,null],[13,"Disconnect","","Peer is diconnected.",2,null],[13,"Util","","Util error.",2,null],[13,"Io","","Socket IO error.",2,null],[13,"AddressParse","","Error concerning the network address parsing subsystem.",2,null],[13,"AddressResolve","","Error concerning the network address resolution subsystem.",2,null],[13,"StdIo","","Error concerning the Rust standard library&#39;s IO subsystem.",2,null],[4,"NonReservedPeerMode","","Non-reserved peer modes.",null,null],[13,"Accept","","Accept them. This is the default.",3,null],[13,"Deny","","Deny them.",3,null],[5,"is_valid_node_url","","Check if node url is valid",null,{"inputs":[{"name":"str"}],"output":{"name":"bool"}}],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Create a new instance of default settings.",0,{"inputs":[],"output":{"name":"self"}}],[11,"new_with_port","","Create new default configuration with sepcified listen port.",0,{"inputs":[{"name":"u16"}],"output":{"name":"networkconfiguration"}}],[11,"new_local","","Create new default configuration for localhost-only connection with random port (usefull for testing)",0,{"inputs":[],"output":{"name":"networkconfiguration"}}],[11,"clone","","",1,null],[11,"send","","Send a packet over the network to another peer.",4,null],[11,"respond","","Respond to a current network message. Panics if no there is no packet in the context. If the session is expired returns nothing.",4,null],[11,"io_channel","","Get an IoChannel.",4,null],[11,"disable_peer","","Disable current protocol capability for given peer. If no capabilities left peer gets disconnected.",4,null],[11,"disconnect_peer","","Disconnect peer. Reconnect can be attempted later.",4,null],[11,"is_expired","","Check if the session is still active.",4,null],[11,"register_timer","","Register a new IO timer. &#39;IoHandler::timeout&#39; will be called with the token.",4,null],[11,"peer_info","","Returns peer identification string",4,null],[11,"new","","Starts IO event loop",5,{"inputs":[{"name":"networkconfiguration"}],"output":{"name":"result"}}],[11,"register_protocol","","Regiter a new protocol handler with the event loop.",5,null],[11,"host_info","","Returns host identifier string as advertised to other peers",5,null],[11,"io","","Returns underlying io service.",5,null],[11,"stats","","Returns network statistics.",5,null],[11,"config","","Returns network configuration.",5,null],[11,"external_url","","Returns external url if available.",5,null],[11,"local_url","","Returns external url if available.",5,null],[11,"start","","Start network IO",5,null],[11,"stop","","Stop network IO",5,null],[11,"add_reserved_peer","","Try to add a reserved peer.",5,null],[11,"remove_reserved_peer","","Try to remove a reserved peer.",5,null],[11,"set_non_reserved_mode","","Set the non-reserved peer mode.",5,null],[11,"with_context","","Executes action in the network context",5,null],[11,"on_panic","","",5,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"from","","",2,{"inputs":[{"name":"decodererror"}],"output":{"name":"networkerror"}}],[11,"from","","",2,{"inputs":[{"name":"error"}],"output":{"name":"networkerror"}}],[11,"from","","",2,{"inputs":[{"name":"ioerror"}],"output":{"name":"networkerror"}}],[11,"from","","",2,{"inputs":[{"name":"utilerror"}],"output":{"name":"networkerror"}}],[11,"from","","",2,{"inputs":[{"name":"cryptoerror"}],"output":{"name":"networkerror"}}],[11,"from","","",2,{"inputs":[{"name":"addrparseerror"}],"output":{"name":"networkerror"}}],[11,"from_reader","rustc_serialize::json","Decodes a json value from an `&amp;mut io::Read`",6,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",6,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",6,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",6,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",6,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",6,null],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",6,null],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",6,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",6,null],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",6,null],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",6,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",6,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",6,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",6,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",6,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",6,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",6,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",6,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",6,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",6,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",6,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",6,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",6,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",6,null],[11,"encode","collections::string","",7,null],[11,"decode","","",7,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",8,null],[11,"decode","","",8,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"decode","","",8,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",9,null],[11,"decode","","",9,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::borrow","",10,null],[11,"decode","","",10,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",11,null],[11,"decode","","",11,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::option","",12,null],[11,"decode","","",12,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",13,null],[11,"decode","","",13,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::path","",14,null],[11,"encode","","",15,null],[11,"decode","","",15,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",16,null],[11,"decode","","",16,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",17,null],[11,"decode","","",17,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::arc","",18,null],[11,"decode","","",18,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",19,null],[11,"decode","","",19,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",20,null],[11,"decode","","",20,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",21,null],[11,"decode","","",21,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",22,null],[11,"decode","","",22,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",23,null],[11,"decode","","",23,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",24,null],[11,"decode","","",24,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","rustc_serialize::base64","",25,null],[11,"clone","","",25,null],[11,"fmt","","",26,null],[11,"clone","","",26,null],[11,"fmt","","",27,null],[11,"clone","","",27,null],[11,"clone","","",28,null],[11,"fmt","","",28,null],[11,"description","","",28,null],[11,"fmt","","",28,null],[11,"clone","rustc_serialize::hex","",29,null],[11,"fmt","","",29,null],[11,"description","","",29,null],[11,"fmt","","",29,null],[11,"fmt","rustc_serialize::json","",6,null],[11,"partial_cmp","","",6,null],[11,"lt","","",6,null],[11,"le","","",6,null],[11,"gt","","",6,null],[11,"ge","","",6,null],[11,"eq","","",6,null],[11,"ne","","",6,null],[11,"clone","","",6,null],[11,"eq","","",30,null],[11,"clone","","",30,null],[11,"fmt","","",31,null],[11,"eq","","",31,null],[11,"fmt","","",32,null],[11,"eq","","",32,null],[11,"ne","","",32,null],[11,"fmt","","",33,null],[11,"clone","","",33,null],[11,"fmt","","",30,null],[11,"description","","",32,null],[11,"cause","","",32,null],[11,"fmt","","",32,null],[11,"from","","",32,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",31,null],[11,"fmt","","",31,null],[11,"from","","",31,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",33,null],[11,"fmt","","",33,null],[11,"from","","",33,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",34,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",34,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",34,null],[11,"emit_nil","","",34,null],[11,"emit_usize","","",34,null],[11,"emit_u64","","",34,null],[11,"emit_u32","","",34,null],[11,"emit_u16","","",34,null],[11,"emit_u8","","",34,null],[11,"emit_isize","","",34,null],[11,"emit_i64","","",34,null],[11,"emit_i32","","",34,null],[11,"emit_i16","","",34,null],[11,"emit_i8","","",34,null],[11,"emit_bool","","",34,null],[11,"emit_f64","","",34,null],[11,"emit_f32","","",34,null],[11,"emit_char","","",34,null],[11,"emit_str","","",34,null],[11,"emit_enum","","",34,null],[11,"emit_enum_variant","","",34,null],[11,"emit_enum_variant_arg","","",34,null],[11,"emit_enum_struct_variant","","",34,null],[11,"emit_enum_struct_variant_field","","",34,null],[11,"emit_struct","","",34,null],[11,"emit_struct_field","","",34,null],[11,"emit_tuple","","",34,null],[11,"emit_tuple_arg","","",34,null],[11,"emit_tuple_struct","","",34,null],[11,"emit_tuple_struct_arg","","",34,null],[11,"emit_option","","",34,null],[11,"emit_option_none","","",34,null],[11,"emit_option_some","","",34,null],[11,"emit_seq","","",34,null],[11,"emit_seq_elt","","",34,null],[11,"emit_map","","",34,null],[11,"emit_map_elt_key","","",34,null],[11,"emit_map_elt_val","","",34,null],[11,"encode","","",6,null],[11,"index","","",6,null],[11,"index","","",6,null],[11,"fmt","","",35,null],[11,"eq","","",35,null],[11,"ne","","",35,null],[11,"fmt","","",36,null],[11,"clone","","",36,null],[11,"eq","","",36,null],[11,"ne","","",36,null],[11,"new","","",37,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",37,null],[11,"is_empty","","Returns true if the stack is empty.",37,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",37,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",37,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",37,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",37,null],[11,"top","","Returns the top-most element (if any).",37,null],[11,"next","","",38,null],[11,"new","","Creates the JSON parser.",38,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",38,null],[11,"new","","Create a JSON Builder.",39,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",39,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",40,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",40,null],[11,"read_usize","","",40,null],[11,"read_u8","","",40,null],[11,"read_u16","","",40,null],[11,"read_u32","","",40,null],[11,"read_u64","","",40,null],[11,"read_isize","","",40,null],[11,"read_i8","","",40,null],[11,"read_i16","","",40,null],[11,"read_i32","","",40,null],[11,"read_i64","","",40,null],[11,"read_f32","","",40,null],[11,"read_f64","","",40,null],[11,"read_bool","","",40,null],[11,"read_char","","",40,null],[11,"read_str","","",40,null],[11,"read_enum","","",40,null],[11,"read_enum_variant","","",40,null],[11,"read_enum_variant_arg","","",40,null],[11,"read_enum_struct_variant","","",40,null],[11,"read_enum_struct_variant_field","","",40,null],[11,"read_struct","","",40,null],[11,"read_struct_field","","",40,null],[11,"read_tuple","","",40,null],[11,"read_tuple_arg","","",40,null],[11,"read_tuple_struct","","",40,null],[11,"read_tuple_struct_arg","","",40,null],[11,"read_option","","",40,null],[11,"read_seq","","",40,null],[11,"read_seq_elt","","",40,null],[11,"read_map","","",40,null],[11,"read_map_elt_key","","",40,null],[11,"read_map_elt_val","","",40,null],[11,"error","","",40,null],[11,"to_json","","",6,null],[11,"to_json","collections::string","",7,null],[11,"to_json","collections::vec","",11,null],[11,"to_json","collections::btree::map","",21,null],[11,"to_json","std::collections::hash::map","",23,null],[11,"to_json","core::option","",12,null],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",6,null],[11,"fmt","","Encodes a json value into a string",41,null],[11,"fmt","","Encodes a json value into a string",42,null],[11,"indent","","Set the indentation level for the emitted JSON",43,null],[11,"fmt","","Encodes a json value into a string",43,null],[11,"from_str","","",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","ethcore_network","",44,null],[11,"default","","",44,{"inputs":[],"output":{"name":"networkstats"}}],[11,"inc_recv","","Increase bytes received.",44,null],[11,"inc_send","","Increase bytes sent.",44,null],[11,"inc_sessions","","Increase number of sessions.",44,null],[11,"send","","Get bytes sent.",44,null],[11,"recv","","Get bytes received.",44,null],[11,"sessions","","Get total number of sessions created.",44,null],[11,"new","","Create a new empty instance.",44,{"inputs":[],"output":{"name":"networkstats"}}],[6,"PeerId","","Local (temporary) peer session ID.",null,null],[6,"PacketId","","Protocol handler level packet id",null,null],[8,"NetworkProtocolHandler","","Network IO protocol handler. This needs to be implemented for each new subprotocol.\nAll the handler function are called from within IO event loop.\n`Message` is the type for message data.",null,null],[11,"initialize","","Initialize the handler",45,null],[10,"read","","Called when new network packet received.",45,null],[10,"connected","","Called when new peer is connected. Only called when peer supports the same protocol.",45,null],[10,"disconnected","","Called when a previously connected peer disconnects.",45,null],[11,"timeout","","Timer function called after a timeout created with `NetworkContext::timeout`.",45,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"clone","","",3,null],[11,"parse","","Attempt to parse the peer mode from a string.",3,{"inputs":[{"name":"str"}],"output":{"name":"option"}}]],"paths":[[3,"NetworkConfiguration"],[4,"NetworkIoMessage"],[4,"NetworkError"],[4,"NonReservedPeerMode"],[3,"NetworkContext"],[3,"NetworkService"],[4,"Json"],[3,"String"],[3,"Box"],[3,"Rc"],[4,"Cow"],[3,"Vec"],[4,"Option"],[3,"PhantomData"],[3,"Path"],[3,"PathBuf"],[3,"Cell"],[3,"RefCell"],[3,"Arc"],[3,"LinkedList"],[3,"VecDeque"],[3,"BTreeMap"],[3,"BTreeSet"],[3,"HashMap"],[3,"HashSet"],[4,"CharacterSet"],[4,"Newline"],[3,"Config"],[4,"FromBase64Error"],[4,"FromHexError"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[3,"Encoder"],[4,"JsonEvent"],[4,"StackElement"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[3,"NetworkStats"],[8,"NetworkProtocolHandler"]]};
searchIndex["ethcore_ipc"] = {"doc":"IPC RPC interface","items":[[0,"interface","ethcore_ipc","IPC RPC interface",null,null],[3,"Handshake","ethcore_ipc::interface","Handshake for client and server to negotiate api/protocol version",null,null],[12,"protocol_version","","",0,null],[12,"api_version","","",0,null],[4,"Error","","Error in dispatching or invoking methods via IPC",null,null],[13,"UnkownSystemCall","","",1,null],[13,"ClientUnsupported","","",1,null],[13,"RemoteServiceUnsupported","","",1,null],[13,"HandshakeFailed","","",1,null],[5,"invoke","","serializes method invocation (method_num and parameters) to the stream specified by `w`",null,{"inputs":[{"name":"u16"},{"name":"option"},{"name":"w"}],"output":null}],[8,"IpcConfig","","Allows to configure custom version and custom handshake response for\nipc host",null,null],[11,"api_version","","Current service api version\nShould be increased if any of the methods changes signature",2,{"inputs":[],"output":{"name":"version"}}],[11,"protocol_version","","Current ipc protocol version\nShould be increased only if signature of system methods changes",2,{"inputs":[],"output":{"name":"version"}}],[11,"handshake","","Default handshake requires exact versions match",2,{"inputs":[{"name":"handshake"}],"output":{"name":"bool"}}],[8,"IpcInterface","","Allows implementor to be attached to generic worker and dispatch rpc requests\nover IPC",null,null],[10,"dispatch","","reads the message from io, dispatches the call and returns serialized result",3,null],[10,"dispatch_buf","","deserializes the payload from buffer, dispatches invoke and returns serialized result\n(for non-blocking io)",3,null],[8,"IpcSocket","","IpcSocket, read/write generalization",null,null],[8,"WithSocket","","Basically something that needs only socket to be spawned",null,null],[10,"init","","",4,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",1,null],[0,"binary","ethcore_ipc","Binary representation of types",null,null],[3,"BinaryConvertError","ethcore_ipc::binary","",null,null],[3,"BinHandshake","","Fixed-sized version of Handshake struct",null,null],[3,"BinVersion","","Shorten version of semver Version without `pre` and `build` information",null,null],[12,"major","","",5,null],[12,"minor","","",5,null],[12,"patch","","",5,null],[4,"BinaryConvertErrorKind","","",null,null],[13,"SizeMismatch","","",6,null],[12,"expected","ethcore_ipc::binary::BinaryConvertErrorKind","",6,null],[12,"found","","",6,null],[13,"TargetPayloadEmpty","ethcore_ipc::binary","",6,null],[13,"UnexpectedVariant","","",6,null],[13,"MissingLengthValue","","",6,null],[13,"InconsistentBoundaries","","",6,null],[13,"NotSupported","","",6,null],[4,"BinaryError","","",null,null],[13,"Serialization","","",7,null],[13,"Io","","",7,null],[5,"deserialize_from","","",null,{"inputs":[{"name":"r"}],"output":{"name":"result"}}],[5,"deserialize","","",null,null],[5,"serialize_into","","",null,{"inputs":[{"name":"t"},{"name":"w"}],"output":{"name":"result"}}],[5,"serialize","","",null,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[8,"BinaryConvertable","","",null,null],[11,"size","","",8,null],[10,"to_bytes","","",8,null],[10,"from_bytes","","",8,null],[11,"from_empty_bytes","","",8,{"inputs":[],"output":{"name":"result"}}],[11,"len_params","","",8,{"inputs":[],"output":{"name":"usize"}}],[11,"fmt","","",6,null],[11,"fmt","","",9,null],[11,"size","","",9,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"binaryconverterror"}}],[11,"empty","","",9,{"inputs":[],"output":{"name":"binaryconverterror"}}],[11,"variant","","",9,{"inputs":[{"name":"u8"}],"output":{"name":"binaryconverterror"}}],[11,"length","","",9,{"inputs":[],"output":{"name":"binaryconverterror"}}],[11,"boundaries","","",9,{"inputs":[],"output":{"name":"binaryconverterror"}}],[11,"not_supported","","",9,{"inputs":[],"output":{"name":"binaryconverterror"}}],[11,"named","","",9,null],[11,"fmt","","",7,null],[11,"from","","",7,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"from","","",7,{"inputs":[{"name":"binaryconverterror"}],"output":{"name":"self"}}],[11,"size","core::option","",10,null],[11,"to_bytes","","",10,null],[11,"from_bytes","","",10,null],[11,"from_empty_bytes","","",10,{"inputs":[],"output":{"name":"result"}}],[11,"len_params","","",10,{"inputs":[],"output":{"name":"usize"}}],[11,"size","core::result","",11,null],[11,"to_bytes","","",11,null],[11,"from_bytes","","",11,null],[11,"from_empty_bytes","","",11,{"inputs":[],"output":{"name":"result"}}],[11,"len_params","","",11,{"inputs":[],"output":{"name":"usize"}}],[11,"size","","",11,null],[11,"to_bytes","","",11,null],[11,"from_bytes","","",11,null],[11,"from_empty_bytes","","",11,{"inputs":[],"output":{"name":"result"}}],[11,"len_params","","",11,{"inputs":[],"output":{"name":"usize"}}],[11,"size","","",11,null],[11,"to_bytes","","",11,null],[11,"from_bytes","","",11,null],[11,"len_params","","",11,{"inputs":[],"output":{"name":"usize"}}],[11,"size","collections::btree::map","",12,null],[11,"to_bytes","","",12,null],[11,"from_bytes","","",12,null],[11,"from_empty_bytes","","",12,{"inputs":[],"output":{"name":"result"}}],[11,"len_params","","",12,{"inputs":[],"output":{"name":"usize"}}],[11,"size","collections::vec_deque","",13,null],[11,"to_bytes","","",13,null],[11,"from_bytes","","",13,null],[11,"from_empty_bytes","","",13,{"inputs":[],"output":{"name":"result"}}],[11,"len_params","","",13,{"inputs":[],"output":{"name":"usize"}}],[11,"size","collections::vec","",14,null],[11,"to_bytes","","",14,null],[11,"from_bytes","","",14,null],[11,"from_empty_bytes","","",14,{"inputs":[],"output":{"name":"result"}}],[11,"len_params","","",14,{"inputs":[],"output":{"name":"usize"}}],[11,"size","collections::string","",15,null],[11,"from_empty_bytes","","",15,{"inputs":[],"output":{"name":"result"}}],[11,"to_bytes","","",15,null],[11,"from_bytes","","",15,null],[11,"len_params","","",15,{"inputs":[],"output":{"name":"usize"}}],[11,"size","core::ops","",16,null],[11,"from_empty_bytes","","",16,{"inputs":[],"output":{"name":"result"}}],[11,"to_bytes","","",16,null],[11,"from_bytes","","",16,null],[11,"len_params","","",16,{"inputs":[],"output":{"name":"usize"}}],[11,"size","core::cell","",17,null],[11,"from_empty_bytes","","",17,{"inputs":[],"output":{"name":"result"}}],[11,"from_bytes","","",17,null],[11,"to_bytes","","",17,null],[11,"len_params","","",17,{"inputs":[],"output":{"name":"usize"}}],[11,"size","","",18,null],[11,"from_empty_bytes","","",18,{"inputs":[],"output":{"name":"result"}}],[11,"from_bytes","","",18,null],[11,"to_bytes","","",18,null],[11,"len_params","","",18,{"inputs":[],"output":{"name":"usize"}}],[11,"size","collections::vec","",14,null],[11,"from_empty_bytes","","",14,{"inputs":[],"output":{"name":"result"}}],[11,"to_bytes","","",14,null],[11,"from_bytes","","",14,null],[11,"len_params","","",14,{"inputs":[],"output":{"name":"usize"}}],[11,"eq","ethcore_ipc::binary","",19,null],[11,"ne","","",19,null],[11,"fmt","","",19,null],[11,"clone","","",19,null],[11,"eq","","",5,null],[11,"ne","","",5,null],[11,"fmt","","",5,null],[11,"clone","","",5,null],[11,"from","","",19,{"inputs":[{"name":"handshake"}],"output":{"name":"self"}}],[11,"to_semver","","",19,null],[11,"to_semver","","",5,null],[11,"from","","",5,{"inputs":[{"name":"version"}],"output":{"name":"self"}}],[11,"from_bytes","bigint::uint","",20,null],[11,"to_bytes","","",20,null],[11,"from_bytes","","",21,null],[11,"to_bytes","","",21,null],[11,"from_bytes","ethcore_util::hash","",22,null],[11,"to_bytes","","",22,null],[11,"from_bytes","","",23,null],[11,"to_bytes","","",23,null],[11,"from_bytes","","",24,null],[11,"to_bytes","","",24,null],[11,"from_bytes","ethcore_ipc::binary","",19,null],[11,"to_bytes","","",19,null],[14,"binary_fixed_size!","ethcore_ipc","",null,null]],"paths":[[3,"Handshake"],[4,"Error"],[8,"IpcConfig"],[8,"IpcInterface"],[8,"WithSocket"],[3,"BinVersion"],[4,"BinaryConvertErrorKind"],[4,"BinaryError"],[8,"BinaryConvertable"],[3,"BinaryConvertError"],[4,"Option"],[4,"Result"],[3,"BTreeMap"],[3,"VecDeque"],[3,"Vec"],[3,"String"],[3,"Range"],[3,"RefCell"],[3,"Cell"],[3,"BinHandshake"],[3,"U256"],[3,"U512"],[3,"H256"],[3,"H2048"],[3,"Address"]]};
searchIndex["ethcore_ipc_nano"] = {"doc":"IPC over nanomsg transport","items":[[11,"clone","ethcore_ipc::interface","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",1,null],[11,"fmt","ethcore_ipc::binary","",2,null],[11,"fmt","","",3,null],[11,"size","","",3,{"inputs":[{"name":"usize"},{"name":"usize"}],"output":{"name":"binaryconverterror"}}],[11,"empty","","",3,{"inputs":[],"output":{"name":"binaryconverterror"}}],[11,"variant","","",3,{"inputs":[{"name":"u8"}],"output":{"name":"binaryconverterror"}}],[11,"length","","",3,{"inputs":[],"output":{"name":"binaryconverterror"}}],[11,"boundaries","","",3,{"inputs":[],"output":{"name":"binaryconverterror"}}],[11,"not_supported","","",3,{"inputs":[],"output":{"name":"binaryconverterror"}}],[11,"named","","",3,null],[11,"fmt","","",4,null],[11,"from","","",4,{"inputs":[{"name":"error"}],"output":{"name":"binaryerror"}}],[11,"from","","",4,{"inputs":[{"name":"binaryconverterror"}],"output":{"name":"binaryerror"}}],[11,"size","core::option","",5,null],[11,"to_bytes","","",5,null],[11,"from_bytes","","",5,null],[11,"from_empty_bytes","","",5,{"inputs":[],"output":{"name":"result"}}],[11,"len_params","","",5,{"inputs":[],"output":{"name":"usize"}}],[11,"size","core::result","",6,null],[11,"to_bytes","","",6,null],[11,"from_bytes","","",6,null],[11,"from_empty_bytes","","",6,{"inputs":[],"output":{"name":"result"}}],[11,"len_params","","",6,{"inputs":[],"output":{"name":"usize"}}],[11,"size","","",6,null],[11,"to_bytes","","",6,null],[11,"from_bytes","","",6,null],[11,"from_empty_bytes","","",6,{"inputs":[],"output":{"name":"result"}}],[11,"len_params","","",6,{"inputs":[],"output":{"name":"usize"}}],[11,"size","","",6,null],[11,"to_bytes","","",6,null],[11,"from_bytes","","",6,null],[11,"len_params","","",6,{"inputs":[],"output":{"name":"usize"}}],[11,"size","collections::btree::map","",7,null],[11,"to_bytes","","",7,null],[11,"from_bytes","","",7,null],[11,"from_empty_bytes","","",7,{"inputs":[],"output":{"name":"result"}}],[11,"len_params","","",7,{"inputs":[],"output":{"name":"usize"}}],[11,"size","collections::vec_deque","",8,null],[11,"to_bytes","","",8,null],[11,"from_bytes","","",8,null],[11,"from_empty_bytes","","",8,{"inputs":[],"output":{"name":"result"}}],[11,"len_params","","",8,{"inputs":[],"output":{"name":"usize"}}],[11,"size","collections::vec","",9,null],[11,"to_bytes","","",9,null],[11,"from_bytes","","",9,null],[11,"from_empty_bytes","","",9,{"inputs":[],"output":{"name":"result"}}],[11,"len_params","","",9,{"inputs":[],"output":{"name":"usize"}}],[11,"size","collections::string","",10,null],[11,"from_empty_bytes","","",10,{"inputs":[],"output":{"name":"result"}}],[11,"to_bytes","","",10,null],[11,"from_bytes","","",10,null],[11,"len_params","","",10,{"inputs":[],"output":{"name":"usize"}}],[11,"size","core::ops","",11,null],[11,"from_empty_bytes","","",11,{"inputs":[],"output":{"name":"result"}}],[11,"to_bytes","","",11,null],[11,"from_bytes","","",11,null],[11,"len_params","","",11,{"inputs":[],"output":{"name":"usize"}}],[11,"size","core::cell","",12,null],[11,"from_empty_bytes","","",12,{"inputs":[],"output":{"name":"result"}}],[11,"from_bytes","","",12,null],[11,"to_bytes","","",12,null],[11,"len_params","","",12,{"inputs":[],"output":{"name":"usize"}}],[11,"size","","",13,null],[11,"from_empty_bytes","","",13,{"inputs":[],"output":{"name":"result"}}],[11,"from_bytes","","",13,null],[11,"to_bytes","","",13,null],[11,"len_params","","",13,{"inputs":[],"output":{"name":"usize"}}],[11,"size","collections::vec","",9,null],[11,"from_empty_bytes","","",9,{"inputs":[],"output":{"name":"result"}}],[11,"to_bytes","","",9,null],[11,"from_bytes","","",9,null],[11,"len_params","","",9,{"inputs":[],"output":{"name":"usize"}}],[11,"eq","ethcore_ipc::binary","",14,null],[11,"ne","","",14,null],[11,"fmt","","",14,null],[11,"clone","","",14,null],[11,"eq","","",15,null],[11,"ne","","",15,null],[11,"fmt","","",15,null],[11,"clone","","",15,null],[11,"from","","",14,{"inputs":[{"name":"handshake"}],"output":{"name":"binhandshake"}}],[11,"to_semver","","",14,null],[11,"to_semver","","",15,null],[11,"from","","",15,{"inputs":[{"name":"version"}],"output":{"name":"binversion"}}],[11,"from_bytes","bigint::uint","",16,null],[11,"to_bytes","","",16,null],[11,"from_bytes","","",17,null],[11,"to_bytes","","",17,null],[11,"from_bytes","ethcore_util::hash","",18,null],[11,"to_bytes","","",18,null],[11,"from_bytes","","",19,null],[11,"to_bytes","","",19,null],[11,"from_bytes","","",20,null],[11,"to_bytes","","",20,null],[11,"from_bytes","ethcore_ipc::binary","",14,null],[11,"to_bytes","","",14,null],[8,"WithSocket","ethcore_ipc_nano","Basically something that needs only socket to be spawned",null,null],[10,"init","","",21,{"inputs":[{"name":"s"}],"output":{"name":"self"}}],[8,"IpcInterface","","Allows implementor to be attached to generic worker and dispatch rpc requests\nover IPC",null,null],[10,"dispatch","","reads the message from io, dispatches the call and returns serialized result",22,null],[10,"dispatch_buf","","deserializes the payload from buffer, dispatches invoke and returns serialized result\n(for non-blocking io)",22,null],[8,"IpcConfig","","Allows to configure custom version and custom handshake response for\nipc host",null,null],[11,"api_version","","Current service api version\nShould be increased if any of the methods changes signature",23,{"inputs":[],"output":{"name":"version"}}],[11,"protocol_version","","Current ipc protocol version\nShould be increased only if signature of system methods changes",23,{"inputs":[],"output":{"name":"version"}}],[11,"handshake","","Default handshake requires exact versions match",23,{"inputs":[{"name":"handshake"}],"output":{"name":"bool"}}],[11,"new","nanomsg","Allocate and initialize a new Nanomsg socket which returns\na new file descriptor behind the scene. The safe interface doesn&#39;t\nexpose any of the underlying file descriptors and such.",24,{"inputs":[{"name":"protocol"}],"output":{"name":"result"}}],[11,"new_for_device","","Allocate and initialize a new Nanomsg socket meant to be used in a device",24,{"inputs":[{"name":"protocol"}],"output":{"name":"result"}}],[11,"bind","","Creating a new socket through `Socket::new` does **not**\nbind that socket to a listening state. Instead, one has to be\nexplicit in enabling the socket to listen onto a specific address.",24,null],[11,"connect","","Connects the socket to a remote endpoint.\nReturns the endpoint on success.",24,null],[11,"nb_read","","Non-blocking version of the `read` function.\nAny bytes exceeding the length specified by `buf.len()` will be truncated.\nReturns the number of bytes of the message stored in the buffer on success.\nPlease note that it differs from nanomsg&#39;s nn_recv which returns the msg size instead.\nAn error with the `Error::TryAgain` kind is returned if there&#39;s no message to receive for the moment.",24,null],[11,"nb_read_to_end","","Non-blocking version of the `read_to_end` function.\nCopy the message allocated by nanomsg into the buffer on success.\nAn error with the `Error::TryAgain` kind is returned if there&#39;s no message to receive for the moment.",24,null],[11,"nb_write","","Non-blocking version of the `write` function.\nAn error with the `Error::TryAgain` kind is returned if the message cannot be sent at the moment.",24,null],[11,"zc_write","","Zero-copy version of the `write` function.",24,null],[11,"allocate_msg","","Allocate a message of the specified size to be sent in zero-copy fashion.\nThe content of the message is undefined after allocation and it should be filled in by the user.\nWhile `write` functions allow to send arbitrary buffers, \nbuffers allocated using `allocate_msg` can be more efficient for large messages \nas they allow for using zero-copy techniques.",24,{"inputs":[{"name":"usize"}],"output":{"name":"result"}}],[11,"free_msg","","Deallocates a message allocated using `allocate_msg` function",24,null],[11,"new_pollfd","","Creates a poll request for the socket with the specified check criteria.\n- **pollinout:** See `PollInOut` for options",24,null],[11,"poll","","Checks a set of sockets and reports whether it’s possible to send a message to the socket and/or receive a message from each socket.\nUpon successful completion, the number of `PollFd` structures with events signaled is returned. ",24,{"inputs":[{"name":"pollrequest"},{"name":"isize"}],"output":{"name":"result"}}],[11,"device","","Starts a device to forward messages between two sockets.\nIf both sockets are valid, `device` function loops\nand sends and messages received from s1 to s2 and vice versa.\nIf only one socket is valid and the other is negative,\n`device` works in a &quot;loopback&quot; mode — \nit loops and sends any messages received from the socket back to itself.\nTo break the loop and make `device` function exit use `terminate` function.",24,{"inputs":[{"name":"socket"},{"name":"socket"}],"output":{"name":"result"}}],[11,"terminate","","Notify all sockets about process termination.\nTo help with shutdown of multi-threaded programs nanomsg provides the `terminate` function \nwhich informs all the open sockets that process termination is underway.\nIf a socket is blocked inside a blocking function, such as `read`,\nit will be unblocked and `Terminating` error will be returned to the user. \nSimilarly, any subsequent attempt to invoke a socket function other than `drop` after `terminate` was called will result in `Terminating` error.\nIf waiting inside a polling function, the call will unblock with both read and write signaled.\nThe `terminate` function itself is non-blocking.",24,null],[11,"set_linger","","Specifies how long the socket should try to send pending outbound messages after `drop` have been called.\nNegative value means infinite linger. Default value is 1000 (1 second).",24,null],[11,"set_send_buffer_size","","Size of the send buffer, in bytes. To prevent blocking for messages larger than the buffer,\nexactly one message may be buffered in addition to the data in the send buffer.\nDefault value is 128kB.",24,null],[11,"set_receive_buffer_size","","Size of the receive buffer, in bytes. To prevent blocking for messages larger than the buffer,\nexactly one message may be buffered in addition to the data in the receive buffer.\nDefault value is 128kB.",24,null],[11,"set_send_timeout","","The timeout for send operation on the socket.\nIf message cannot be sent within the specified timeout, TryAgain error is returned.\nNegative value means infinite timeout. Default value is infinite timeout.",24,null],[11,"set_receive_timeout","","The timeout for recv operation on the socket.\nIf message cannot be received within the specified timeout, TryAgain error is returned.\nNegative value means infinite timeout. Default value is infinite timeout.",24,null],[11,"set_reconnect_interval","","For connection-based transports such as TCP, this option specifies how long to wait,\nwhen connection is broken before trying to re-establish it.\nNote that actual reconnect interval may be randomised to some extent to prevent severe reconnection storms.\nDefault value is 100 milliseconds.",24,null],[11,"set_max_reconnect_interval","","This option is to be used only in addition to `set_reconnect_interval` option.\nIt specifies maximum reconnection interval. On each reconnect attempt,\nthe previous interval is doubled until `max_reconnect_interval` is reached.\nValue of zero means that no exponential backoff is performed and\nreconnect interval is based only on `reconnect_interval`.\nIf `max_reconnect_interval` is less than `reconnect_interval`, it is ignored.\nDefault value is 0.",24,null],[11,"set_send_priority","","Sets outbound priority for endpoints subsequently added to the socket.\nThis option has no effect on socket types that send messages to all the peers.\nHowever, if the socket type sends each message to a single peer (or a limited set of peers),\npeers with high priority take precedence over peers with low priority.\nHighest priority is 1, lowest priority is 16. Default value is 8.",24,null],[11,"set_receive_priority","","Sets inbound priority for endpoints subsequently added to the socket.\nThis option has no effect on socket types that are not able to receive messages.\nWhen receiving a message, messages from peer with higher priority are received before messages\nfrom peer with lower priority. \nHighest priority is 1, lowest priority is 16. Default value is 8.",24,null],[11,"set_ipv4_only","","If set to true, only IPv4 addresses are used.\nIf set to false, both IPv4 and IPv6 addresses are used.\nDefault value is true.",24,null],[11,"set_socket_name","","Socket name for error reporting and statistics.\nDefault value is &quot;socket.N&quot; where N is socket integer.\n**This option is experimental, see `Socket::env` for details**",24,null],[11,"set_tcp_nodelay","","This option, when set to `true`, disables Nagle’s algorithm.\nIt also disables delaying of TCP acknowledgments.\nUsing this option improves latency at the expense of throughput.",24,null],[11,"get_receive_fd","","Retrieve a file descriptor that is readable when a message can\nbe received on the unerlying socket",24,null],[11,"get_send_fd","","Retrieve a file descriptor that is writeable when a message\ncan be sent on the underlying socket",24,null],[11,"get_socket_name","","Retrieve the name for this socket for error reporting and\nstatistics.\n**This option is experimental, see `Socket::env` for details",24,null],[11,"subscribe","","Defined on full `Sub` socket.\nSubscribes for a particular topic.\nType of the option is string.\nA single `Sub` socket can handle multiple subscriptions.",24,null],[11,"unsubscribe","","Defined on full `Sub` socket. Unsubscribes from a particular topic.",24,null],[11,"set_survey_deadline","","Specifies how long to wait for responses to the survey.\nOnce the deadline expires, receive function will return `Timeout` error and all subsequent responses to the survey will be silently dropped.\nThe deadline is measured in milliseconds. Default value is 1 second.",24,null],[11,"set_request_resend_interval","","This option is defined on the full `Req` socket.\nIf reply is not received in specified amount of milliseconds, the request will be automatically resent.\nThe type of this option is int. Default value is 1 minute.",24,null],[11,"eq","nanomsg::result","",25,null],[11,"clone","","",25,null],[11,"to_raw","","",25,null],[11,"from_raw","","",25,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"description","","",25,null],[11,"from","","",25,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","std::io::error","",26,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","nanomsg::result","",25,null],[11,"fmt","","",25,null],[11,"new","nanomsg::endpoint","",27,{"inputs":[{"name":"i32"},{"name":"i32"}],"output":{"name":"endpoint"}}],[11,"shutdown","","Removes an endpoint from the socket that created it (via `bind` or `connect`).\nThe call will return immediately, however, \nthe library will try to deliver any outstanding outbound messages to the endpoint \nfor the time specified by `Socket::set_linger`.",27,null],[11,"clone","nanomsg","",28,null],[11,"eq","","",28,null],[11,"fmt","","",28,null],[11,"clone","","",29,null],[11,"eq","","",29,null],[11,"fmt","","",29,null],[11,"to_raw","","",29,null],[11,"clone","","",30,null],[11,"clone","","",31,null],[11,"can_read","","Checks whether at least one message can be received from the socket without blocking.",31,null],[11,"can_write","","Checks whether at least one message can be sent to the fd socket without blocking.",31,null],[11,"new","","Creates a request from the specified individualsocket requests.",32,null],[11,"get_fds","","Returns a reference to the socket requests, so they can be checked.",32,null],[11,"read","","Receive a message from the socket and store it in the buffer argument.\nAny bytes exceeding the length specified by `buffer.len()` will be truncated.\nReturns the number of bytes of the message stored in the buffer on success.\nPlease note that it differs from nanomsg&#39;s nn_recv which returns the msg size instead.",24,null],[11,"read_to_end","","Receive a message from the socket. Copy the message allocated by nanomsg into the buffer on success.",24,null],[11,"read_to_string","","Receive a message from the socket. Copy the message allocated by nanomsg into the buffer on success.\nIf the data in the message is not valid UTF-8 then an error is returned and buffer is unchanged.",24,null],[11,"write","","The function will send a message containing the data from the buf parameter to the socket.\nWhich of the peers the message will be sent to is determined by the particular socket type.",24,null],[11,"flush","","",24,null],[11,"drop","","Closes the socket.\nAny buffered inbound messages that were not yet received by the application will be discarded.\nThe library will try to deliver any outstanding outbound messages for the time specified by `set_linger`. \nThe call will block in the meantime.",24,null],[3,"NanoSocket","ethcore_ipc_nano","A type-safe socket wrapper around nanomsg&#39;s own socket implementation. This\nprovides a safe interface for dealing with initializing the sockets, sending\nand receiving messages.",null,null],[3,"Worker","","Generic worker to handle service (binded) sockets",null,null],[3,"GuardedSocket","","struct for guarding `_endpoint` (so that it wont drop)\nderefs to client `S`",null,null],[4,"SocketError","","Error occurred while establising socket or endpoint",null,null],[13,"DuplexLink","","Error establising duplex (paired) socket and/or endpoint",33,null],[13,"RequestLink","","Error establising duplex (paired) socket and/or endpoint",33,null],[5,"init_duplex_client","","Spawns client &lt;`S`&gt; over specified address\ncreates socket and connects endpoint to it\nfor duplex (paired) connections with the service",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"init_client","","Spawns client &lt;`S`&gt; over specified address\ncreates socket and connects endpoint to it\nfor request-reply connections to the service",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"service","","",34,null],[11,"new","alloc::arc","Constructs a new `Arc&lt;T&gt;`.",35,{"inputs":[{"name":"t"}],"output":{"name":"arc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Arc&lt;T&gt;` has exactly one strong reference.",35,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"downgrade","","Downgrades the `Arc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",35,{"inputs":[{"name":"arc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",35,{"inputs":[{"name":"arc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",35,{"inputs":[{"name":"arc"}],"output":{"name":"usize"}}],[11,"make_mut","","Make a mutable reference into the given `Arc&lt;T&gt;`.\nIf the `Arc&lt;T&gt;` has more than one strong reference, or any weak\nreferences, the inner data is cloned.",35,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Arc&lt;T&gt;` has\none strong reference and no weak references.",35,{"inputs":[{"name":"arc"}],"output":{"name":"option"}}],[11,"clone","alloc::boxed","",36,null],[11,"pointer","","",37,null],[11,"make_place","","",37,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",37,null],[11,"finalize","","",38,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",36,null],[11,"drop","","",37,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",38,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",38,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",38,null],[11,"default","","",38,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",38,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",38,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",38,null],[11,"clone","","",38,null],[11,"eq","","",38,null],[11,"ne","","",38,null],[11,"partial_cmp","","",38,null],[11,"lt","","",38,null],[11,"le","","",38,null],[11,"ge","","",38,null],[11,"gt","","",38,null],[11,"cmp","","",38,null],[11,"hash","","",38,null],[11,"from","","",38,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",38,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",38,null],[11,"fmt","","",38,null],[11,"fmt","","",38,null],[11,"fmt","","",38,null],[11,"deref","","",38,null],[11,"deref_mut","","",38,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"next_back","","",38,null],[11,"call_once","","",38,null],[11,"call_once","","",38,null],[11,"clone","","",38,null],[11,"borrow","","",38,null],[11,"borrow_mut","","",38,null],[11,"as_ref","","",38,null],[11,"as_mut","","",38,null],[11,"fmt","alloc::arc","",39,null],[11,"clone","","Makes a clone of the `Arc&lt;T&gt;`.",35,null],[11,"deref","","",35,null],[11,"drop","","Drops the `Arc&lt;T&gt;`.",35,null],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",39,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",39,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",39,null],[11,"default","","",39,{"inputs":[],"output":{"name":"weak"}}],[11,"drop","","Drops the `Weak&lt;T&gt;`.",39,null],[11,"eq","","Equality for two `Arc&lt;T&gt;`s.",35,null],[11,"ne","","Inequality for two `Arc&lt;T&gt;`s.",35,null],[11,"partial_cmp","","Partial comparison for two `Arc&lt;T&gt;`s.",35,null],[11,"lt","","Less-than comparison for two `Arc&lt;T&gt;`s.",35,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Arc&lt;T&gt;`s.",35,null],[11,"gt","","Greater-than comparison for two `Arc&lt;T&gt;`s.",35,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Arc&lt;T&gt;`s.",35,null],[11,"cmp","","",35,null],[11,"fmt","","",35,null],[11,"fmt","","",35,null],[11,"fmt","","",35,null],[11,"default","","",35,{"inputs":[],"output":{"name":"arc"}}],[11,"hash","","",35,null],[11,"from","","",35,{"inputs":[{"name":"t"}],"output":{"name":"arc"}}],[11,"borrow","","",35,null],[11,"as_ref","","",35,null],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",40,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",40,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",40,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",40,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",40,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",40,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",40,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",40,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",40,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",40,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",40,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",40,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",40,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",40,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",40,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",40,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",40,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",40,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",40,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",40,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",40,null],[11,"hash","","",40,null],[11,"fmt","","",40,null],[11,"fmt","","",40,null],[11,"fmt","","",40,null],[11,"from","","",40,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",41,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",41,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",41,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",41,null],[11,"fmt","","",41,null],[11,"default","","",41,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",40,null],[11,"as_ref","","",40,null],[11,"new","alloc::raw_vec","Creates the biggest possible RawVec without allocating. If T has positive\nsize, then this makes a RawVec with capacity 0. If T has 0 size, then it\nit makes a RawVec with capacity `usize::MAX`. Useful for implementing\ndelayed allocation.",42,{"inputs":[],"output":{"name":"rawvec"}}],[11,"with_capacity","","Creates a RawVec with exactly the capacity and alignment requirements\nfor a `[T; cap]`. This is equivalent to calling RawVec::new when `cap` is 0\nor T is zero-sized. Note that if `T` is zero-sized this means you will *not*\nget a RawVec with the requested capacity!",42,{"inputs":[{"name":"usize"}],"output":{"name":"rawvec"}}],[11,"from_raw_parts","","Reconstitutes a RawVec from a pointer and capacity.",42,null],[11,"from_box","","Converts a `Box&lt;[T]&gt;` into a `RawVec&lt;T&gt;`.",42,{"inputs":[{"name":"box"}],"output":{"name":"rawvec"}}],[11,"ptr","","Gets a raw pointer to the start of the allocation. Note that this is\nheap::EMPTY if `cap = 0` or T is zero-sized. In the former case, you must\nbe careful.",42,null],[11,"cap","","Gets the capacity of the allocation.",42,null],[11,"double","","Doubles the size of the type&#39;s backing allocation. This is common enough\nto want to do that it&#39;s easiest to just have a dedicated method. Slightly\nmore efficient logic can be provided for this than the general case.",42,null],[11,"double_in_place","","Attempts to double the size of the type&#39;s backing allocation in place. This is common\nenough to want to do that it&#39;s easiest to just have a dedicated method. Slightly\nmore efficient logic can be provided for this than the general case.",42,null],[11,"reserve_exact","","Ensures that the buffer contains at least enough space to hold\n`used_cap + needed_extra_cap` elements. If it doesn&#39;t already,\nwill reallocate the minimum possible amount of memory necessary.\nGenerally this will be exactly the amount of memory necessary,\nbut in principle the allocator is free to give back more than\nwe asked for.",42,null],[11,"reserve","","Ensures that the buffer contains at least enough space to hold\n`used_cap + needed_extra_cap` elements. If it doesn&#39;t already have\nenough capacity, will reallocate enough space plus comfortable slack\nspace to get amortized `O(1)` behavior. Will limit this behavior\nif it would needlessly cause itself to panic.",42,null],[11,"reserve_in_place","","Attempts to ensure that the buffer contains at least enough space to hold\n`used_cap + needed_extra_cap` elements. If it doesn&#39;t already have\nenough capacity, will reallocate in place enough space plus comfortable slack\nspace to get amortized `O(1)` behaviour. Will limit this behaviour\nif it would needlessly cause itself to panic.",42,null],[11,"shrink_to_fit","","Shrinks the allocation down to the specified amount. If the given amount\nis 0, actually completely deallocates.",42,null],[11,"into_box","","Converts the entire buffer into `Box&lt;[T]&gt;`.",42,null],[11,"unsafe_no_drop_flag_needs_drop","","This is a stupid name in the hopes that someone will find this in the\nnot too distant future and remove it with the rest of\n#[unsafe_no_drop_flag]",42,null],[11,"drop","","Frees the memory owned by the RawVec *without* trying to Drop its contents.",42,null],[11,"deref","ethcore_ipc_nano","",34,null],[11,"fmt","","",33,null],[11,"new","","New worker over specified `service`",43,{"inputs":[{"name":"arc"}],"output":{"name":"worker"}}],[11,"poll","","Polls all sockets, reads and dispatches method invocations",43,null],[11,"add_duplex","","Add exclusive socket for paired client\nOnly one connection over this address is allowed",43,null],[11,"add_reqrep","","Add generic socket for request-reply style communications\nwith multiple clients",43,null]],"paths":[[3,"Handshake"],[4,"Error"],[4,"BinaryConvertErrorKind"],[3,"BinaryConvertError"],[4,"BinaryError"],[4,"Option"],[4,"Result"],[3,"BTreeMap"],[3,"VecDeque"],[3,"Vec"],[3,"String"],[3,"Range"],[3,"RefCell"],[3,"Cell"],[3,"BinHandshake"],[3,"BinVersion"],[3,"U256"],[3,"U512"],[3,"H256"],[3,"H2048"],[3,"Address"],[8,"WithSocket"],[8,"IpcInterface"],[8,"IpcConfig"],[3,"NanoSocket"],[4,"Error"],[3,"Error"],[3,"Endpoint"],[4,"Protocol"],[4,"Transport"],[4,"PollInOut"],[3,"PollFd"],[3,"PollRequest"],[4,"SocketError"],[3,"GuardedSocket"],[3,"Arc"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Box"],[3,"Weak"],[3,"Rc"],[3,"Weak"],[3,"RawVec"],[3,"Worker"]]};
searchIndex["ethcore_util"] = {"doc":"Ethcore-util library","items":[[3,"PerfTimer","ethcore_util","Performance timer with logging. Starts measuring time in the constructor, prints\nelapsed time in the destructor or when `stop` is called.",null,null],[5,"log2","","Returns log2.",null,{"inputs":[{"name":"usize"}],"output":{"name":"u32"}}],[0,"standard","","Std lib global reexports.",null,null],[0,"io","ethcore_util::standard","Traits, helpers, and type definitions for core I/O functionality.",null,null],[0,"prelude","ethcore_util::standard::io","The I/O Prelude",null,null],[11,"from","alloc::boxed","",0,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",0,{"inputs":[{"name":"e"}],"output":{"name":"box"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",0,{"inputs":[{"name":"string"}],"output":{"name":"box"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"from","","",0,{"inputs":[{"name":"str"}],"output":{"name":"box"}}],[11,"description","core::str","",1,null],[11,"description","","",2,null],[11,"description","core::num","",3,null],[11,"description","","",4,null],[11,"description","core::num::dec2flt","",5,null],[11,"description","collections::string","",6,null],[11,"description","","",7,null],[11,"description","","",8,null],[11,"description","rustc_unicode::char","",9,null],[11,"description","alloc::boxed","",0,null],[11,"cause","","",0,null],[11,"is","ethcore_util::standard::io","Returns true if the boxed type is the same as `T`",10,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",10,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",10,null],[11,"is","","Forwards to the method defined on the type `Any`.",10,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",10,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",10,null],[11,"is","","Forwards to the method defined on the type `Any`.",10,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",10,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",10,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",10,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",10,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",10,{"inputs":[{"name":"box"}],"output":{"name":"result"}}],[11,"next","std::ascii","",11,null],[11,"size_hint","","",11,null],[11,"next_back","","",11,null],[11,"clone","std::thread::local","",12,null],[11,"eq","","",12,null],[11,"with","","Acquires a reference to the value in this TLS key.",13,null],[11,"state","","Query the current state of this key.",13,null],[11,"new","std::thread::local::elf","",14,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",14,null],[11,"new","std::thread::local::os","",15,{"inputs":[],"output":{"name":"key"}}],[11,"get","","",15,null],[11,"set","std::thread::scoped_tls","Inserts a value into this scoped thread local storage slot for a\nduration of a closure.",16,null],[11,"with","","Gets a value out of this scoped variable.",16,null],[11,"is_set","","Test whether this TLS key has been `set` for the current thread.",16,null],[11,"new","std::thread::scoped_tls::imp","",17,{"inputs":[],"output":{"name":"keyinner"}}],[11,"set","","",17,null],[11,"get","","",17,null],[11,"new","std::thread","Generates the base configuration for spawning a thread, from which\nconfiguration methods can be chained.",18,{"inputs":[],"output":{"name":"builder"}}],[11,"name","","Names the thread-to-be. Currently the name is used for identification\nonly in panic messages.",18,null],[11,"stack_size","","Sets the size of the stack for the new thread.",18,null],[11,"spawn","","Spawns a new thread, and returns a join handle for it.",18,null],[11,"clone","","",19,null],[11,"unpark","","Atomically makes the handle&#39;s token available if it is not already.",19,null],[11,"name","","Gets the thread&#39;s name.",19,null],[11,"fmt","","",19,null],[11,"thread","","Extracts a handle to the underlying thread",20,null],[11,"join","","Waits for the associated thread to finish.",20,null],[11,"clone","std::collections::hash::map","",21,null],[11,"new","","Creates an empty HashMap.",21,{"inputs":[],"output":{"name":"hashmap"}}],[11,"with_capacity","","Creates an empty hash map with the given initial capacity.",21,{"inputs":[{"name":"usize"}],"output":{"name":"hashmap"}}],[11,"with_hasher","","Creates an empty hashmap which will use the given hash builder to hash\nkeys.",21,{"inputs":[{"name":"s"}],"output":{"name":"hashmap"}}],[11,"with_capacity_and_hasher","","Creates an empty HashMap with space for at least `capacity`\nelements, using `hasher` to hash the keys.",21,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashmap"}}],[11,"hasher","","Returns a reference to the map&#39;s hasher.",21,null],[11,"capacity","","Returns the number of elements the map can hold without reallocating.",21,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashMap`. The collection may reserve more space to avoid\nfrequent reallocations.",21,null],[11,"shrink_to_fit","","Shrinks the capacity of the map as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",21,null],[11,"keys","","An iterator visiting all keys in arbitrary order.\nIterator element type is `&amp;&#39;a K`.",21,null],[11,"values","","An iterator visiting all values in arbitrary order.\nIterator element type is `&amp;&#39;a V`.",21,null],[11,"values_mut","","An iterator visiting all values mutably in arbitrary order.\nIterator element type is `&amp;&#39;a mut V`.",21,null],[11,"iter","","An iterator visiting all key-value pairs in arbitrary order.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a V)`.",21,null],[11,"iter_mut","","An iterator visiting all key-value pairs in arbitrary order,\nwith mutable references to the values.\nIterator element type is `(&amp;&#39;a K, &amp;&#39;a mut V)`.",21,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",21,null],[11,"len","","Returns the number of elements in the map.",21,null],[11,"is_empty","","Returns true if the map contains no elements.",21,null],[11,"drain","","Clears the map, returning all key-value pairs as an iterator. Keeps the\nallocated memory for reuse.",21,null],[11,"clear","","Clears the map, removing all key-value pairs. Keeps the allocated memory\nfor reuse.",21,null],[11,"get","","Returns a reference to the value corresponding to the key.",21,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",21,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",21,null],[11,"insert","","Inserts a key-value pair into the map.",21,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",21,null],[11,"eq","","",21,null],[11,"fmt","","",21,null],[11,"default","","",21,{"inputs":[],"output":{"name":"hashmap"}}],[11,"index","","",21,null],[11,"clone","","",22,null],[11,"clone","","",23,null],[11,"clone","","",24,null],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each key-value\npair out of the map in arbitrary order. The map cannot be used after\ncalling this.",21,null],[11,"next","","",22,null],[11,"size_hint","","",22,null],[11,"len","","",22,null],[11,"next","","",25,null],[11,"size_hint","","",25,null],[11,"len","","",25,null],[11,"next","","",26,null],[11,"size_hint","","",26,null],[11,"len","","",26,null],[11,"next","","",23,null],[11,"size_hint","","",23,null],[11,"len","","",23,null],[11,"next","","",24,null],[11,"size_hint","","",24,null],[11,"len","","",24,null],[11,"next","","",27,null],[11,"size_hint","","",27,null],[11,"len","","",27,null],[11,"next","","",28,null],[11,"size_hint","","",28,null],[11,"len","","",28,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",29,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",29,null],[11,"key","","Returns a reference to this entry&#39;s key.",29,null],[11,"key","","Gets a reference to the key in the entry.",30,null],[11,"get","","Gets a reference to the value in the entry.",30,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",30,null],[11,"into_mut","","Converts the OccupiedEntry into a mutable reference to the value in the entry\nwith a lifetime bound to the map itself",30,null],[11,"insert","","Sets the value of the entry, and returns the entry&#39;s old value",30,null],[11,"remove","","Takes the value out of the entry, and returns it",30,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",31,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it",31,null],[11,"from_iter","","",21,{"inputs":[{"name":"t"}],"output":{"name":"hashmap"}}],[11,"extend","","",21,null],[11,"extend","","",21,null],[11,"clone","","",32,null],[11,"new","","Constructs a new `RandomState` that is initialized with random keys.",32,{"inputs":[],"output":{"name":"randomstate"}}],[11,"build_hasher","","",32,null],[11,"default","","",32,{"inputs":[],"output":{"name":"randomstate"}}],[11,"clone","std::collections::hash::set","",33,null],[11,"new","","Creates an empty HashSet.",33,{"inputs":[],"output":{"name":"hashset"}}],[11,"with_capacity","","Creates an empty HashSet with space for at least `n` elements in\nthe hash table.",33,{"inputs":[{"name":"usize"}],"output":{"name":"hashset"}}],[11,"with_hasher","","Creates a new empty hash set which will use the given hasher to hash\nkeys.",33,{"inputs":[{"name":"s"}],"output":{"name":"hashset"}}],[11,"with_capacity_and_hasher","","Creates an empty HashSet with space for at least `capacity`\nelements in the hash table, using `hasher` to hash the keys.",33,{"inputs":[{"name":"usize"},{"name":"s"}],"output":{"name":"hashset"}}],[11,"hasher","","Returns a reference to the set&#39;s hasher.",33,null],[11,"capacity","","Returns the number of elements the set can hold without reallocating.",33,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the `HashSet`. The collection may reserve more space to avoid\nfrequent reallocations.",33,null],[11,"shrink_to_fit","","Shrinks the capacity of the set as much as possible. It will drop\ndown as much as possible while maintaining the internal rules\nand possibly leaving some space in accordance with the resize policy.",33,null],[11,"iter","","An iterator visiting all elements in arbitrary order.\nIterator element type is &amp;&#39;a T.",33,null],[11,"difference","","Visit the values representing the difference.",33,null],[11,"symmetric_difference","","Visit the values representing the symmetric difference.",33,null],[11,"intersection","","Visit the values representing the intersection.",33,null],[11,"union","","Visit the values representing the union.",33,null],[11,"len","","Returns the number of elements in the set.",33,null],[11,"is_empty","","Returns true if the set contains no elements.",33,null],[11,"drain","","Clears the set, returning all elements in an iterator.",33,null],[11,"clear","","Clears the set, removing all values.",33,null],[11,"contains","","Returns `true` if the set contains a value.",33,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",33,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",33,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",33,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",33,null],[11,"insert","","Adds a value to the set.",33,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",33,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",33,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",33,null],[11,"eq","","",33,null],[11,"fmt","","",33,null],[11,"from_iter","","",33,{"inputs":[{"name":"i"}],"output":{"name":"hashset"}}],[11,"extend","","",33,null],[11,"extend","","",33,null],[11,"default","","",33,{"inputs":[],"output":{"name":"hashset"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out\nof the set in arbitrary order. The set cannot be used after calling\nthis.",33,null],[11,"clone","","",34,null],[11,"next","","",34,null],[11,"size_hint","","",34,null],[11,"len","","",34,null],[11,"next","","",35,null],[11,"size_hint","","",35,null],[11,"len","","",35,null],[11,"next","","",36,null],[11,"size_hint","","",36,null],[11,"len","","",36,null],[11,"clone","","",37,null],[11,"next","","",37,null],[11,"size_hint","","",37,null],[11,"clone","","",38,null],[11,"next","","",38,null],[11,"size_hint","","",38,null],[11,"clone","","",39,null],[11,"next","","",39,null],[11,"size_hint","","",39,null],[11,"clone","","",40,null],[11,"next","","",40,null],[11,"size_hint","","",40,null],[11,"clone","collections::vec_deque","",41,null],[11,"drop","","",41,null],[11,"default","","",41,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"new","","Creates an empty `VecDeque`.",41,{"inputs":[],"output":{"name":"vecdeque"}}],[11,"with_capacity","","Creates an empty `VecDeque` with space for at least `n` elements.",41,{"inputs":[{"name":"usize"}],"output":{"name":"vecdeque"}}],[11,"get","","Retrieves an element in the `VecDeque` by index.",41,null],[11,"get_mut","","Retrieves an element in the `VecDeque` mutably by index.",41,null],[11,"swap","","Swaps elements at indices `i` and `j`.",41,null],[11,"capacity","","Returns the number of elements the `VecDeque` can hold without\nreallocating.",41,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `VecDeque`. Does nothing if the capacity is already sufficient.",41,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the given\n`VecDeque`. The collection may reserve more space to avoid frequent reallocations.",41,null],[11,"shrink_to_fit","","Shrinks the capacity of the `VecDeque` as much as possible.",41,null],[11,"truncate","","Shortens a `VecDeque`, dropping excess elements from the back.",41,null],[11,"iter","","Returns a front-to-back iterator.",41,null],[11,"iter_mut","","Returns a front-to-back iterator that returns mutable references.",41,null],[11,"as_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",41,null],[11,"as_mut_slices","","Returns a pair of slices which contain, in order, the contents of the\n`VecDeque`.",41,null],[11,"len","","Returns the number of elements in the `VecDeque`.",41,null],[11,"is_empty","","Returns true if the buffer contains no elements",41,null],[11,"drain","","Create a draining iterator that removes the specified range in the\n`VecDeque` and yields the removed items.",41,null],[11,"clear","","Clears the buffer, removing all values.",41,null],[11,"contains","","Returns `true` if the `VecDeque` contains an element equal to the\ngiven value.",41,null],[11,"front","","Provides a reference to the front element, or `None` if the sequence is\nempty.",41,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the\nsequence is empty.",41,null],[11,"back","","Provides a reference to the back element, or `None` if the sequence is\nempty.",41,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the\nsequence is empty.",41,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the sequence is\nempty.",41,null],[11,"push_front","","Inserts an element first in the sequence.",41,null],[11,"push_back","","Appends an element to the back of a buffer",41,null],[11,"pop_back","","Removes the last element from a buffer and returns it, or `None` if\nit is empty.",41,null],[11,"swap_remove_back","","Removes an element from anywhere in the `VecDeque` and returns it, replacing it with the\nlast element.",41,null],[11,"swap_remove_front","","Removes an element from anywhere in the `VecDeque` and returns it,\nreplacing it with the first element.",41,null],[11,"insert","","Inserts an element at `index` within the `VecDeque`. Whichever\nend is closer to the insertion point will be moved to make room,\nand all the affected elements will be moved to new positions.",41,null],[11,"remove","","Removes and returns the element at `index` from the `VecDeque`.\nWhichever end is closer to the removal point will be moved to make\nroom, and all the affected elements will be moved to new positions.\nReturns `None` if `index` is out of bounds.",41,null],[11,"split_off","","Splits the collection into two at the given index.",41,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",41,null],[11,"retain","","Retains only the elements specified by the predicate.",41,null],[11,"resize","","Modifies the `VecDeque` in-place so that `len()` is equal to new_len,\neither by removing excess elements or by appending copies of a value to the back.",41,null],[11,"clone","","",42,null],[11,"next","","",42,null],[11,"size_hint","","",42,null],[11,"next_back","","",42,null],[11,"next","","",43,null],[11,"size_hint","","",43,null],[11,"next_back","","",43,null],[11,"clone","","",44,null],[11,"next","","",44,null],[11,"size_hint","","",44,null],[11,"next_back","","",44,null],[11,"drop","","",45,null],[11,"next","","",45,null],[11,"size_hint","","",45,null],[11,"next_back","","",45,null],[11,"eq","","",41,null],[11,"partial_cmp","","",41,null],[11,"cmp","","",41,null],[11,"hash","","",41,null],[11,"index","","",41,null],[11,"index_mut","","",41,null],[11,"from_iter","","",41,{"inputs":[{"name":"t"}],"output":{"name":"vecdeque"}}],[11,"into_iter","","Consumes the list into a front-to-back iterator yielding elements by\nvalue.",41,null],[11,"extend","","",41,null],[11,"extend","","",41,null],[11,"fmt","","",41,null],[11,"from","","",41,{"inputs":[{"name":"vec"}],"output":{"name":"vecdeque"}}],[11,"from","collections::vec","",46,{"inputs":[{"name":"vecdeque"}],"output":{"name":"vec"}}],[11,"clone","collections::binary_heap","",47,null],[11,"clone_from","","",47,null],[11,"default","","",47,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"fmt","","",47,null],[11,"new","","Creates an empty `BinaryHeap` as a max-heap.",47,{"inputs":[],"output":{"name":"binaryheap"}}],[11,"with_capacity","","Creates an empty `BinaryHeap` with a specific capacity.\nThis preallocates enough memory for `capacity` elements,\nso that the `BinaryHeap` does not have to be reallocated\nuntil it contains at least that many values.",47,{"inputs":[{"name":"usize"}],"output":{"name":"binaryheap"}}],[11,"iter","","Returns an iterator visiting all values in the underlying vector, in\narbitrary order.",47,null],[11,"peek","","Returns the greatest item in the binary heap, or `None` if it is empty.",47,null],[11,"capacity","","Returns the number of elements the binary heap can hold without reallocating.",47,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to be inserted in the\ngiven `BinaryHeap`. Does nothing if the capacity is already sufficient.",47,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted in the\n`BinaryHeap`. The collection may reserve more space to avoid frequent reallocations.",47,null],[11,"shrink_to_fit","","Discards as much additional capacity as possible.",47,null],[11,"pop","","Removes the greatest item from the binary heap and returns it, or `None` if it\nis empty.",47,null],[11,"push","","Pushes an item onto the binary heap.",47,null],[11,"push_pop","","Pushes an item onto the binary heap, then pops the greatest item off the queue in\nan optimized fashion.",47,null],[11,"replace","","Pops the greatest item off the binary heap, then pushes an item onto the queue in\nan optimized fashion. The push is done regardless of whether the binary heap\nwas empty.",47,null],[11,"into_vec","","Consumes the `BinaryHeap` and returns the underlying vector\nin arbitrary order.",47,null],[11,"into_sorted_vec","","Consumes the `BinaryHeap` and returns a vector in sorted\n(ascending) order.",47,null],[11,"len","","Returns the length of the binary heap.",47,null],[11,"is_empty","","Checks if the binary heap is empty.",47,null],[11,"drain","","Clears the binary heap, returning an iterator over the removed elements.",47,null],[11,"clear","","Drops all items from the binary heap.",47,null],[11,"append","","Moves all the elements of `other` into `self`, leaving `other` empty.",47,null],[11,"clone","","",48,null],[11,"next","","",48,null],[11,"size_hint","","",48,null],[11,"next_back","","",48,null],[11,"clone","","",49,null],[11,"next","","",49,null],[11,"size_hint","","",49,null],[11,"next_back","","",49,null],[11,"next","","",50,null],[11,"size_hint","","",50,null],[11,"next_back","","",50,null],[11,"from","","",47,{"inputs":[{"name":"vec"}],"output":{"name":"binaryheap"}}],[11,"from","collections::vec","",46,{"inputs":[{"name":"binaryheap"}],"output":{"name":"vec"}}],[11,"from_iter","collections::binary_heap","",47,{"inputs":[{"name":"i"}],"output":{"name":"binaryheap"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe binary heap in arbitrary order. The binary heap cannot be used\nafter calling this.",47,null],[11,"extend","","",47,null],[11,"extend","","",47,null],[11,"clone","collections::linked_list","",51,null],[11,"clone","","",52,null],[11,"default","","",53,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"new","","Creates an empty `LinkedList`.",53,{"inputs":[],"output":{"name":"linkedlist"}}],[11,"append","","Moves all elements from `other` to the end of the list.",53,null],[11,"iter","","Provides a forward iterator.",53,null],[11,"iter_mut","","Provides a forward iterator with mutable references.",53,null],[11,"is_empty","","Returns `true` if the `LinkedList` is empty.",53,null],[11,"len","","Returns the length of the `LinkedList`.",53,null],[11,"clear","","Removes all elements from the `LinkedList`.",53,null],[11,"contains","","Returns `true` if the `LinkedList` contains an element equal to the\ngiven value.",53,null],[11,"front","","Provides a reference to the front element, or `None` if the list is\nempty.",53,null],[11,"front_mut","","Provides a mutable reference to the front element, or `None` if the list\nis empty.",53,null],[11,"back","","Provides a reference to the back element, or `None` if the list is\nempty.",53,null],[11,"back_mut","","Provides a mutable reference to the back element, or `None` if the list\nis empty.",53,null],[11,"push_front","","Adds an element first in the list.",53,null],[11,"pop_front","","Removes the first element and returns it, or `None` if the list is\nempty.",53,null],[11,"push_back","","Appends an element to the back of a list",53,null],[11,"pop_back","","Removes the last element from a list and returns it, or `None` if\nit is empty.",53,null],[11,"split_off","","Splits the list into two at the given index. Returns everything after the given index,\nincluding the index.",53,null],[11,"front_place","","Returns a place for insertion at the front of the list.",53,null],[11,"back_place","","Returns a place for insertion at the back of the list.",53,null],[11,"drop","","",53,null],[11,"next","","",51,null],[11,"size_hint","","",51,null],[11,"next_back","","",51,null],[11,"next","","",54,null],[11,"size_hint","","",54,null],[11,"next_back","","",54,null],[11,"insert_next","","Inserts `elt` just after the element most recently returned by `.next()`.\nThe inserted element does not appear in the iteration.",54,null],[11,"peek_next","","Provides a reference to the next element, without changing the iterator.",54,null],[11,"next","","",52,null],[11,"size_hint","","",52,null],[11,"next_back","","",52,null],[11,"from_iter","","",53,{"inputs":[{"name":"t"}],"output":{"name":"linkedlist"}}],[11,"into_iter","","Consumes the list into an iterator yielding elements by value.",53,null],[11,"extend","","",53,null],[11,"extend","","",53,null],[11,"eq","","",53,null],[11,"ne","","",53,null],[11,"partial_cmp","","",53,null],[11,"cmp","","",53,null],[11,"clone","","",53,null],[11,"fmt","","",53,null],[11,"hash","","",53,null],[11,"make_place","","",55,null],[11,"pointer","","",55,null],[11,"finalize","","",55,null],[11,"make_place","","",56,null],[11,"pointer","","",56,null],[11,"finalize","","",56,null],[11,"next","std::env","",57,null],[11,"size_hint","","",57,null],[11,"next","","",58,null],[11,"size_hint","","",58,null],[11,"clone","","",59,null],[11,"eq","","",59,null],[11,"ne","","",59,null],[11,"fmt","","",59,null],[11,"fmt","","",59,null],[11,"description","","",59,null],[11,"next","","",60,null],[11,"size_hint","","",60,null],[11,"fmt","","",61,null],[11,"fmt","","",61,null],[11,"description","","",61,null],[11,"next","","",62,null],[11,"size_hint","","",62,null],[11,"len","","",62,null],[11,"next","","",63,null],[11,"size_hint","","",63,null],[11,"len","","",63,null],[11,"clone","std::ffi::c_str","",64,null],[11,"hash","","",64,null],[11,"cmp","","",64,null],[11,"partial_cmp","","",64,null],[11,"lt","","",64,null],[11,"le","","",64,null],[11,"gt","","",64,null],[11,"ge","","",64,null],[11,"eq","","",64,null],[11,"ne","","",64,null],[11,"hash","","",65,null],[11,"fmt","","",66,null],[11,"eq","","",66,null],[11,"ne","","",66,null],[11,"clone","","",66,null],[11,"fmt","","",67,null],[11,"eq","","",67,null],[11,"ne","","",67,null],[11,"clone","","",67,null],[11,"fmt","","",68,null],[11,"eq","","",68,null],[11,"ne","","",68,null],[11,"clone","","",68,null],[11,"new","","Creates a new C-compatible string from a container of bytes.",64,{"inputs":[{"name":"t"}],"output":{"name":"result"}}],[11,"from_vec_unchecked","","Creates a C-compatible string from a byte vector without checking for\ninterior 0 bytes.",64,{"inputs":[{"name":"vec"}],"output":{"name":"cstring"}}],[11,"from_raw","","Retakes ownership of a `CString` that was transferred to C.",64,null],[11,"into_raw","","Transfers ownership of the string to a C caller.",64,null],[11,"into_string","","Converts the `CString` into a `String` if it contains valid Unicode data.",64,null],[11,"into_bytes","","Returns the underlying byte buffer.",64,null],[11,"into_bytes_with_nul","","Equivalent to the `into_bytes` function except that the returned vector\nincludes the trailing nul byte.",64,null],[11,"as_bytes","","Returns the contents of this `CString` as a slice of bytes.",64,null],[11,"as_bytes_with_nul","","Equivalent to the `as_bytes` function except that the returned slice\nincludes the trailing nul byte.",64,null],[11,"from_ptr","","Casts a raw C string to a safe C string wrapper.",65,null],[11,"from_bytes_with_nul","","Creates a C string wrapper from a byte slice.",65,null],[11,"from_bytes_with_nul_unchecked","","Unsafely creates a C string wrapper from a byte slice.",65,null],[11,"as_ptr","","Returns the inner pointer to this C string.",65,null],[11,"to_bytes","","Converts this C string to a byte slice.",65,null],[11,"to_bytes_with_nul","","Converts this C string to a byte slice containing the trailing 0 byte.",65,null],[11,"to_str","","Yields a `&amp;str` slice if the `CStr` contains valid UTF-8.",65,null],[11,"to_string_lossy","","Converts a `CStr` into a `Cow&lt;str&gt;`.",65,null],[11,"deref","","",64,null],[11,"fmt","","",64,null],[11,"from","collections::vec","",46,{"inputs":[{"name":"cstring"}],"output":{"name":"vec"}}],[11,"fmt","std::ffi::c_str","",65,null],[11,"default","","",64,{"inputs":[],"output":{"name":"cstring"}}],[11,"borrow","","",64,null],[11,"nul_position","","Returns the position of the nul byte in the slice that was provided to\n`CString::new`.",66,null],[11,"into_vec","","Consumes this error, returning the underlying vector of bytes which\ngenerated the error in the first place.",66,null],[11,"description","","",66,null],[11,"fmt","","",66,null],[11,"from","std::io::error","",69,{"inputs":[{"name":"nulerror"}],"output":{"name":"error"}}],[11,"into_cstring","std::ffi::c_str","Consumes this error, returning original `CString` which generated the\nerror.",68,null],[11,"utf8_error","","Access the underlying UTF-8 error that was the cause of this error.",68,null],[11,"description","","",68,null],[11,"cause","","",68,null],[11,"fmt","","",68,null],[11,"eq","","",65,null],[11,"partial_cmp","","",65,null],[11,"cmp","","",65,null],[11,"to_owned","","",65,null],[11,"from","","",64,{"inputs":[{"name":"cstr"}],"output":{"name":"cstring"}}],[11,"index","","",64,null],[11,"as_ref","","",65,null],[11,"as_ref","","",64,null],[11,"clone","std::ffi::os_str","",70,null],[11,"new","","Constructs a new empty `OsString`.",70,{"inputs":[],"output":{"name":"osstring"}}],[11,"as_os_str","","Converts to an `OsStr` slice.",70,null],[11,"into_string","","Converts the `OsString` into a `String` if it contains valid Unicode data.",70,null],[11,"push","","Extends the string with the given `&amp;OsStr` slice.",70,null],[11,"with_capacity","","Creates a new `OsString` with the given capacity.",70,{"inputs":[{"name":"usize"}],"output":{"name":"osstring"}}],[11,"clear","","Truncates the `OsString` to zero length.",70,null],[11,"capacity","","Returns the capacity this `OsString` can hold without reallocating.",70,null],[11,"reserve","","Reserves capacity for at least `additional` more capacity to be inserted\nin the given `OsString`.",70,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more capacity to\nbe inserted in the given `OsString`. Does nothing if the capacity is\nalready sufficient.",70,null],[11,"from","","",70,{"inputs":[{"name":"string"}],"output":{"name":"osstring"}}],[11,"from","","",70,{"inputs":[{"name":"t"}],"output":{"name":"osstring"}}],[11,"index","","",70,null],[11,"new","","Coerces into an `OsStr` slice.",71,{"inputs":[{"name":"s"}],"output":{"name":"osstr"}}],[11,"to_str","","Yields a `&amp;str` slice if the `OsStr` is valid Unicode.",71,null],[11,"to_string_lossy","","Converts an `OsStr` to a `Cow&lt;str&gt;`.",71,null],[11,"to_os_string","","Copies the slice into an owned `OsString`.",71,null],[11,"is_empty","","Checks whether the `OsStr` is empty.",71,null],[11,"len","","Returns the length of this `OsStr`.",71,null],[11,"deref","","",70,null],[11,"default","","",70,{"inputs":[],"output":{"name":"osstring"}}],[11,"fmt","","",70,null],[11,"eq","","",70,null],[11,"eq","","",70,null],[11,"partial_cmp","","",70,null],[11,"lt","","",70,null],[11,"le","","",70,null],[11,"gt","","",70,null],[11,"ge","","",70,null],[11,"partial_cmp","","",70,null],[11,"cmp","","",70,null],[11,"hash","","",70,null],[11,"eq","","",71,null],[11,"eq","","",71,null],[11,"partial_cmp","","",71,null],[11,"lt","","",71,null],[11,"le","","",71,null],[11,"gt","","",71,null],[11,"ge","","",71,null],[11,"partial_cmp","","",71,null],[11,"cmp","","",71,null],[11,"eq","","",70,null],[11,"eq","","",71,null],[11,"partial_cmp","","",70,null],[11,"partial_cmp","","",71,null],[11,"eq","","",70,null],[11,"partial_cmp","","",70,null],[11,"eq","collections::borrow","",72,null],[11,"eq","std::ffi::os_str","",71,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"partial_cmp","std::ffi::os_str","",71,null],[11,"eq","collections::borrow","",72,null],[11,"partial_cmp","","",72,null],[11,"eq","","",72,null],[11,"eq","std::ffi::os_str","",70,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"partial_cmp","std::ffi::os_str","",70,null],[11,"hash","","",71,null],[11,"fmt","","",71,null],[11,"borrow","","",70,null],[11,"to_owned","","",71,null],[11,"as_ref","","",71,null],[11,"as_ref","","",70,null],[11,"as_ref","collections::string","",73,null],[11,"clone","std::fs","",74,null],[11,"clone","","",75,null],[11,"fmt","","",76,null],[11,"eq","","",76,null],[11,"ne","","",76,null],[11,"clone","","",76,null],[11,"hash","","",77,null],[11,"eq","","",77,null],[11,"ne","","",77,null],[11,"clone","","",77,null],[11,"open","","Attempts to open a file in read-only mode.",78,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"create","","Opens a file in write-only mode.",78,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"sync_all","","Attempts to sync all OS-internal metadata to disk.",78,null],[11,"sync_data","","This function is similar to `sync_all`, except that it may not\nsynchronize file metadata to the filesystem.",78,null],[11,"set_len","","Truncates or extends the underlying file, updating the size of\nthis file to become `size`.",78,null],[11,"metadata","","Queries metadata about the underlying file.",78,null],[11,"try_clone","","Creates a new independently owned handle to the underlying file.",78,null],[11,"fmt","","",78,null],[11,"read","","",78,null],[11,"read_to_end","","",78,null],[11,"write","","",78,null],[11,"flush","","",78,null],[11,"seek","","",78,null],[11,"new","","Creates a blank new set of options ready for configuration.",75,{"inputs":[],"output":{"name":"openoptions"}}],[11,"read","","Sets the option for read access.",75,null],[11,"write","","Sets the option for write access.",75,null],[11,"append","","Sets the option for the append mode.",75,null],[11,"truncate","","Sets the option for truncating a previous file.",75,null],[11,"create","","Sets the option for creating a new file.",75,null],[11,"create_new","","Sets the option to always create a new file.",75,null],[11,"open","","Opens a file at `path` with the options specified by `self`.",75,null],[11,"file_type","","Returns the file type for this metadata.",74,null],[11,"is_dir","","Returns whether this metadata is for a directory.",74,null],[11,"is_file","","Returns whether this metadata is for a regular file.",74,null],[11,"len","","Returns the size of the file, in bytes, this metadata is for.",74,null],[11,"permissions","","Returns the permissions of the file this metadata is for.",74,null],[11,"modified","","Returns the last modification time listed in this metadata.",74,null],[11,"accessed","","Returns the last access time of this metadata.",74,null],[11,"created","","Returns the creation time listed in the this metadata.",74,null],[11,"readonly","","Returns whether these permissions describe a readonly file.",76,null],[11,"set_readonly","","Modifies the readonly flag for this set of permissions.",76,null],[11,"is_dir","","Test whether this file type represents a directory.",77,null],[11,"is_file","","Test whether this file type represents a regular file.",77,null],[11,"is_symlink","","Test whether this file type represents a symbolic link.",77,null],[11,"next","","",79,null],[11,"path","","Returns the full path to the file that this entry represents.",80,null],[11,"metadata","","Return the metadata for the file that this entry points at.",80,null],[11,"file_type","","Return the file type for the file that this entry points at.",80,null],[11,"file_name","","Returns the bare file name of this directory entry without any other\nleading path component.",80,null],[11,"new","","Creates a new set of options with default mode/security settings for all\nplatforms and also non-recursive.",81,{"inputs":[],"output":{"name":"dirbuilder"}}],[11,"recursive","","Indicate that directories create should be created recursively, creating\nall parent directories if they do not exist with the same security and\npermissions settings.",81,null],[11,"create","","Create the specified directory with the options configured in this\nbuilder.",81,null],[11,"new","std::io::buffered","Creates a new `BufReader` with a default buffer capacity.",82,{"inputs":[{"name":"r"}],"output":{"name":"bufreader"}}],[11,"with_capacity","","Creates a new `BufReader` with the specified buffer capacity.",82,{"inputs":[{"name":"usize"},{"name":"r"}],"output":{"name":"bufreader"}}],[11,"get_ref","","Gets a reference to the underlying reader.",82,null],[11,"get_mut","","Gets a mutable reference to the underlying reader.",82,null],[11,"into_inner","","Unwraps this `BufReader`, returning the underlying reader.",82,null],[11,"read","","",82,null],[11,"fill_buf","","",82,null],[11,"consume","","",82,null],[11,"fmt","","",82,null],[11,"seek","","Seek to an offset, in bytes, in the underlying reader.",82,null],[11,"fmt","","",83,null],[11,"new","","Creates a new `BufWriter` with a default buffer capacity.",84,{"inputs":[{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"with_capacity","","Creates a new `BufWriter` with the specified buffer capacity.",84,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"bufwriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",84,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",84,null],[11,"into_inner","","Unwraps this `BufWriter`, returning the underlying writer.",84,null],[11,"write","","",84,null],[11,"flush","","",84,null],[11,"fmt","","",84,null],[11,"seek","","Seek to the offset, in bytes, in the underlying writer.",84,null],[11,"drop","","",84,null],[11,"error","","Returns the error which caused the call to `into_inner()` to fail.",83,null],[11,"into_inner","","Returns the buffered writer instance which generated the error.",83,null],[11,"from","std::io::error","",69,{"inputs":[{"name":"intoinnererror"}],"output":{"name":"error"}}],[11,"description","std::io::buffered","",83,null],[11,"fmt","","",83,null],[11,"new","","Creates a new `LineWriter`.",85,{"inputs":[{"name":"w"}],"output":{"name":"linewriter"}}],[11,"with_capacity","","Creates a new `LineWriter` with a specified capacity for the internal\nbuffer.",85,{"inputs":[{"name":"usize"},{"name":"w"}],"output":{"name":"linewriter"}}],[11,"get_ref","","Gets a reference to the underlying writer.",85,null],[11,"get_mut","","Gets a mutable reference to the underlying writer.",85,null],[11,"into_inner","","Unwraps this `LineWriter`, returning the underlying writer.",85,null],[11,"write","","",85,null],[11,"flush","","",85,null],[11,"fmt","","",85,null],[11,"fmt","std::io::cursor","",86,null],[11,"clone","","",86,null],[11,"new","","Creates a new cursor wrapping the provided underlying I/O object.",86,{"inputs":[{"name":"t"}],"output":{"name":"cursor"}}],[11,"into_inner","","Consumes this cursor, returning the underlying value.",86,null],[11,"get_ref","","Gets a reference to the underlying value in this cursor.",86,null],[11,"get_mut","","Gets a mutable reference to the underlying value in this cursor.",86,null],[11,"position","","Returns the current position of this cursor.",86,null],[11,"set_position","","Sets the position of this cursor.",86,null],[11,"seek","","",86,null],[11,"read","","",86,null],[11,"fill_buf","","",86,null],[11,"consume","","",86,null],[11,"write","","",86,null],[11,"flush","","",86,null],[11,"write","","",86,null],[11,"flush","","",86,null],[11,"write","","",86,null],[11,"flush","","",86,null],[11,"fmt","std::io::error","",69,null],[11,"fmt","","",87,null],[11,"clone","","",87,null],[11,"eq","","",87,null],[11,"new","","Creates a new I/O error from a known kind of error as well as an\narbitrary error payload.",69,{"inputs":[{"name":"errorkind"},{"name":"e"}],"output":{"name":"error"}}],[11,"last_os_error","","Returns an error representing the last OS error which occurred.",69,{"inputs":[],"output":{"name":"error"}}],[11,"from_raw_os_error","","Creates a new instance of an `Error` from a particular OS error code.",69,{"inputs":[{"name":"i32"}],"output":{"name":"error"}}],[11,"raw_os_error","","Returns the OS error that this error represents (if any).",69,null],[11,"get_ref","","Returns a reference to the inner error wrapped by this error (if any).",69,null],[11,"get_mut","","Returns a mutable reference to the inner error wrapped by this error\n(if any).",69,null],[11,"into_inner","","Consumes the `Error`, returning its inner error (if any).",69,null],[11,"kind","","Returns the corresponding `ErrorKind` for this error.",69,null],[11,"fmt","","",69,null],[11,"description","","",69,null],[11,"cause","","",69,null],[11,"read","alloc::boxed","",0,null],[11,"read_to_end","","",0,null],[11,"read_to_string","","",0,null],[11,"read_exact","","",0,null],[11,"write","","",0,null],[11,"flush","","",0,null],[11,"write_all","","",0,null],[11,"write_fmt","","",0,null],[11,"seek","","",0,null],[11,"fill_buf","","",0,null],[11,"consume","","",0,null],[11,"read_until","","",0,null],[11,"read_line","","",0,null],[11,"write","collections::vec","",46,null],[11,"write_all","","",46,null],[11,"flush","","",46,null],[11,"read","std::io::util","",88,null],[11,"fill_buf","","",88,null],[11,"consume","","",88,null],[11,"read","","",89,null],[11,"write","","",90,null],[11,"flush","","",90,null],[11,"lock","std::io::stdio","Locks this handle to the standard input stream, returning a readable\nguard.",91,null],[11,"read_line","","Locks this handle and reads a line of input into the specified buffer.",91,null],[11,"read","","",91,null],[11,"read_to_end","","",91,null],[11,"read_to_string","","",91,null],[11,"read_exact","","",91,null],[11,"read","","",92,null],[11,"read_to_end","","",92,null],[11,"fill_buf","","",92,null],[11,"consume","","",92,null],[11,"lock","","Locks this handle to the standard output stream, returning a writable\nguard.",93,null],[11,"write","","",93,null],[11,"flush","","",93,null],[11,"write_all","","",93,null],[11,"write_fmt","","",93,null],[11,"write","","",94,null],[11,"flush","","",94,null],[11,"lock","","Locks this handle to the standard error stream, returning a writable\nguard.",95,null],[11,"write","","",95,null],[11,"flush","","",95,null],[11,"write_all","","",95,null],[11,"write_fmt","","",95,null],[11,"write","","",96,null],[11,"flush","","",96,null],[11,"fmt","std::io","",97,null],[11,"clone","","",97,null],[11,"eq","","",97,null],[11,"ne","","",97,null],[11,"read","","",98,null],[11,"fill_buf","","",98,null],[11,"consume","","",98,null],[11,"limit","","Returns the number of bytes that can be read before this instance will\nreturn EOF.",99,null],[11,"read","","",99,null],[11,"fill_buf","","",99,null],[11,"consume","","",99,null],[11,"next","","",100,null],[11,"fmt","","",101,null],[11,"next","","",102,null],[11,"description","","",101,null],[11,"cause","","",101,null],[11,"fmt","","",101,null],[11,"next","","",103,null],[11,"next","","",104,null],[11,"cmp","std::net::ip","",105,null],[11,"partial_cmp","","",105,null],[11,"lt","","",105,null],[11,"le","","",105,null],[11,"gt","","",105,null],[11,"ge","","",105,null],[11,"hash","","",105,null],[11,"fmt","","",105,null],[11,"eq","","",105,null],[11,"ne","","",105,null],[11,"clone","","",105,null],[11,"fmt","","",106,null],[11,"hash","","",106,null],[11,"clone","","",106,null],[11,"eq","","",106,null],[11,"new","","Creates a new IPv4 address from four eight-bit octets.",107,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"ipv4addr"}}],[11,"octets","","Returns the four eight-bit integers that make up this address.",107,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address 0.0.0.0.",107,null],[11,"is_loopback","","Returns true if this is a loopback address (127.0.0.0/8).",107,null],[11,"is_private","","Returns true if this is a private address.",107,null],[11,"is_link_local","","Returns true if the address is link-local (169.254.0.0/16).",107,null],[11,"is_global","","Returns true if the address appears to be globally routable.\nSee [iana-ipv4-special-registry][ipv4-sr].\n[ipv4-sr]: http://goo.gl/RaZ7lg",107,null],[11,"is_multicast","","Returns true if this is a multicast address.",107,null],[11,"is_broadcast","","Returns true if this is a broadcast address.",107,null],[11,"is_documentation","","Returns true if this address is in a range designated for documentation.",107,null],[11,"to_ipv6_compatible","","Converts this address to an IPv4-compatible IPv6 address.",107,null],[11,"to_ipv6_mapped","","Converts this address to an IPv4-mapped IPv6 address.",107,null],[11,"fmt","","",105,null],[11,"fmt","","",107,null],[11,"fmt","","",107,null],[11,"clone","","",107,null],[11,"eq","","",107,null],[11,"hash","","",107,null],[11,"partial_cmp","","",107,null],[11,"cmp","","",107,null],[11,"from","","",107,{"inputs":[{"name":"u32"}],"output":{"name":"ipv4addr"}}],[11,"from","","",107,null],[11,"new","","Creates a new IPv6 address from eight 16-bit segments.",108,{"inputs":[{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"},{"name":"u16"}],"output":{"name":"ipv6addr"}}],[11,"segments","","Returns the eight 16-bit segments that make up this address.",108,null],[11,"is_unspecified","","Returns true for the special &#39;unspecified&#39; address ::.",108,null],[11,"is_loopback","","Returns true if this is a loopback address (::1).",108,null],[11,"is_global","","Returns true if the address appears to be globally routable.",108,null],[11,"is_unique_local","","Returns true if this is a unique local address (IPv6).",108,null],[11,"is_unicast_link_local","","Returns true if the address is unicast and link-local (fe80::/10).",108,null],[11,"is_unicast_site_local","","Returns true if this is a deprecated unicast site-local address (IPv6\nfec0::/10).",108,null],[11,"is_documentation","","Returns true if this is an address reserved for documentation\nThis is defined to be 2001:db8::/32 in RFC 3849.",108,null],[11,"is_unicast_global","","Returns true if the address is a globally routable unicast address.",108,null],[11,"multicast_scope","","Returns the address&#39;s multicast scope if the address is multicast.",108,null],[11,"is_multicast","","Returns true if this is a multicast address.",108,null],[11,"to_ipv4","","Converts this address to an IPv4 address. Returns None if this address is\nneither IPv4-compatible or IPv4-mapped.",108,null],[11,"octets","","Returns the sixteen eight-bit integers the IPv6 address consists of.",108,null],[11,"fmt","","",108,null],[11,"fmt","","",108,null],[11,"clone","","",108,null],[11,"eq","","",108,null],[11,"hash","","",108,null],[11,"partial_cmp","","",108,null],[11,"cmp","","",108,null],[11,"from","","",108,null],[11,"fmt","std::net::addr","",109,null],[11,"hash","","",109,null],[11,"eq","","",109,null],[11,"ne","","",109,null],[11,"clone","","",109,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",109,{"inputs":[{"name":"ipaddr"},{"name":"u16"}],"output":{"name":"socketaddr"}}],[11,"ip","","Returns the IP address associated with this socket address.",109,null],[11,"set_ip","","Change the IP address associated with this socket address.",109,null],[11,"port","","Returns the port number associated with this socket address.",109,null],[11,"set_port","","Change the port number associated with this socket address.",109,null],[11,"new","","Creates a new socket address from the (ip, port) pair.",110,{"inputs":[{"name":"ipv4addr"},{"name":"u16"}],"output":{"name":"socketaddrv4"}}],[11,"ip","","Returns the IP address associated with this socket address.",110,null],[11,"set_ip","","Change the IP address associated with this socket address.",110,null],[11,"port","","Returns the port number associated with this socket address.",110,null],[11,"set_port","","Change the port number associated with this socket address.",110,null],[11,"new","","Creates a new socket address from the ip/port/flowinfo/scope_id\ncomponents.",111,{"inputs":[{"name":"ipv6addr"},{"name":"u16"},{"name":"u32"},{"name":"u32"}],"output":{"name":"socketaddrv6"}}],[11,"ip","","Returns the IP address associated with this socket address.",111,null],[11,"set_ip","","Change the IP address associated with this socket address.",111,null],[11,"port","","Returns the port number associated with this socket address.",111,null],[11,"set_port","","Change the port number associated with this socket address.",111,null],[11,"flowinfo","","Returns the flow information associated with this address,\ncorresponding to the `sin6_flowinfo` field in C.",111,null],[11,"set_flowinfo","","Change the flow information associated with this socket address.",111,null],[11,"scope_id","","Returns the scope ID associated with this address,\ncorresponding to the `sin6_scope_id` field in C.",111,null],[11,"set_scope_id","","Change the scope ID associated with this socket address.",111,null],[11,"fmt","","",109,null],[11,"fmt","","",110,null],[11,"fmt","","",110,null],[11,"fmt","","",111,null],[11,"fmt","","",111,null],[11,"clone","","",110,null],[11,"clone","","",111,null],[11,"eq","","",110,null],[11,"eq","","",111,null],[11,"hash","","",110,null],[11,"hash","","",111,null],[11,"to_socket_addrs","","",109,null],[11,"to_socket_addrs","","",110,null],[11,"to_socket_addrs","","",111,null],[11,"connect","std::net::tcp","Opens a TCP connection to a remote host.",112,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"peer_addr","","Returns the socket address of the remote peer of this TCP connection.",112,null],[11,"local_addr","","Returns the socket address of the local half of this TCP connection.",112,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",112,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",112,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",112,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",112,null],[11,"read_timeout","","Returns the read timeout of this socket.",112,null],[11,"write_timeout","","Returns the write timeout of this socket.",112,null],[11,"set_nodelay","","Sets the value of the `TCP_NODELAY` option on this socket.",112,null],[11,"nodelay","","Gets the value of the `TCP_NODELAY` option on this socket.",112,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",112,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",112,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",112,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",112,null],[11,"read","","",112,null],[11,"read_to_end","","",112,null],[11,"write","","",112,null],[11,"flush","","",112,null],[11,"fmt","","",112,null],[11,"bind","","Creates a new `TcpListener` which will be bound to the specified\naddress.",113,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"local_addr","","Returns the local socket address of this listener.",113,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",113,null],[11,"accept","","Accept a new incoming connection from this listener.",113,null],[11,"incoming","","Returns an iterator over the connections being received on this\nlistener.",113,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",113,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",113,null],[11,"set_only_v6","","Sets the value for the `IPV6_V6ONLY` option on this socket.",113,null],[11,"only_v6","","Gets the value of the `IPV6_V6ONLY` option for this socket.",113,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",113,null],[11,"set_nonblocking","","Moves this TCP stream into or out of nonblocking mode.",113,null],[11,"next","","",114,null],[11,"fmt","","",113,null],[11,"bind","std::net::udp","Creates a UDP socket from the given address.",115,{"inputs":[{"name":"a"}],"output":{"name":"result"}}],[11,"recv_from","","Receives data from the socket. On success, returns the number of bytes\nread and the address from whence the data came.",115,null],[11,"send_to","","Sends data on the socket to the given address. On success, returns the\nnumber of bytes written.",115,null],[11,"local_addr","","Returns the socket address that this socket was created from.",115,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",115,null],[11,"set_read_timeout","","Sets the read timeout to the timeout specified.",115,null],[11,"set_write_timeout","","Sets the write timeout to the timeout specified.",115,null],[11,"read_timeout","","Returns the read timeout of this socket.",115,null],[11,"write_timeout","","Returns the write timeout of this socket.",115,null],[11,"set_broadcast","","Sets the value of the `SO_BROADCAST` option for this socket.",115,null],[11,"broadcast","","Gets the value of the `SO_BROADCAST` option for this socket.",115,null],[11,"set_multicast_loop_v4","","Sets the value of the `IP_MULTICAST_LOOP` option for this socket.",115,null],[11,"multicast_loop_v4","","Gets the value of the `IP_MULTICAST_LOOP` option for this socket.",115,null],[11,"set_multicast_ttl_v4","","Sets the value of the `IP_MULTICAST_TTL` option for this socket.",115,null],[11,"multicast_ttl_v4","","Gets the value of the `IP_MULTICAST_TTL` option for this socket.",115,null],[11,"set_multicast_loop_v6","","Sets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",115,null],[11,"multicast_loop_v6","","Gets the value of the `IPV6_MULTICAST_LOOP` option for this socket.",115,null],[11,"set_ttl","","Sets the value for the `IP_TTL` option on this socket.",115,null],[11,"ttl","","Gets the value of the `IP_TTL` option for this socket.",115,null],[11,"join_multicast_v4","","Executes an operation of the `IP_ADD_MEMBERSHIP` type.",115,null],[11,"join_multicast_v6","","Executes an operation of the `IPV6_ADD_MEMBERSHIP` type.",115,null],[11,"leave_multicast_v4","","Executes an operation of the `IP_DROP_MEMBERSHIP` type.",115,null],[11,"leave_multicast_v6","","Executes an operation of the `IPV6_DROP_MEMBERSHIP` type.",115,null],[11,"take_error","","Get the value of the `SO_ERROR` option on this socket.",115,null],[11,"connect","","Connects this UDP socket to a remote address, allowing the `send` and\n`recv` syscalls to be used to send data and also applies filters to only\nreceive data from the specified address.",115,null],[11,"send","","Sends data on the socket to the remote address to which it is connected.",115,null],[11,"recv","","Receives data on the socket from the remote address to which it is\nconnected.",115,null],[11,"set_nonblocking","","Moves this UDP socket into or out of nonblocking mode.",115,null],[11,"fmt","","",115,null],[11,"from_str","std::net::ip","",105,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",107,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",108,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","std::net::addr","",110,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",111,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"from_str","","",109,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","std::net::parser","",116,null],[11,"ne","","",116,null],[11,"clone","","",116,null],[11,"fmt","","",116,null],[11,"fmt","","",116,null],[11,"description","","",116,null],[11,"fmt","std::net","",117,null],[11,"eq","","",117,null],[11,"clone","","",117,null],[11,"next","","",118,null],[11,"clone","std::os::linux::raw::arch","",119,null],[11,"as_raw_stat","std::fs","",74,null],[11,"st_dev","","",74,null],[11,"st_ino","","",74,null],[11,"st_mode","","",74,null],[11,"st_nlink","","",74,null],[11,"st_uid","","",74,null],[11,"st_gid","","",74,null],[11,"st_rdev","","",74,null],[11,"st_size","","",74,null],[11,"st_atime","","",74,null],[11,"st_atime_nsec","","",74,null],[11,"st_mtime","","",74,null],[11,"st_mtime_nsec","","",74,null],[11,"st_ctime","","",74,null],[11,"st_ctime_nsec","","",74,null],[11,"st_blksize","","",74,null],[11,"st_blocks","","",74,null],[11,"as_raw_fd","","",78,null],[11,"from_raw_fd","","",78,{"inputs":[{"name":"i32"}],"output":{"name":"file"}}],[11,"into_raw_fd","","",78,null],[11,"as_raw_fd","std::net::tcp","",112,null],[11,"as_raw_fd","","",113,null],[11,"as_raw_fd","std::net::udp","",115,null],[11,"from_raw_fd","std::net::tcp","",112,{"inputs":[{"name":"i32"}],"output":{"name":"tcpstream"}}],[11,"from_raw_fd","","",113,{"inputs":[{"name":"i32"}],"output":{"name":"tcplistener"}}],[11,"from_raw_fd","std::net::udp","",115,{"inputs":[{"name":"i32"}],"output":{"name":"udpsocket"}}],[11,"into_raw_fd","std::net::tcp","",112,null],[11,"into_raw_fd","","",113,null],[11,"into_raw_fd","std::net::udp","",115,null],[11,"from_vec","std::ffi::os_str","",70,{"inputs":[{"name":"vec"}],"output":{"name":"osstring"}}],[11,"into_vec","","",70,null],[11,"from_bytes","","",71,null],[11,"as_bytes","","",71,null],[11,"mode","std::fs","",76,null],[11,"set_mode","","",76,null],[11,"from_mode","","",76,{"inputs":[{"name":"u32"}],"output":{"name":"permissions"}}],[11,"mode","","",75,null],[11,"custom_flags","","",75,null],[11,"dev","","",74,null],[11,"ino","","",74,null],[11,"mode","","",74,null],[11,"nlink","","",74,null],[11,"uid","","",74,null],[11,"gid","","",74,null],[11,"rdev","","",74,null],[11,"size","","",74,null],[11,"atime","","",74,null],[11,"atime_nsec","","",74,null],[11,"mtime","","",74,null],[11,"mtime_nsec","","",74,null],[11,"ctime","","",74,null],[11,"ctime_nsec","","",74,null],[11,"blksize","","",74,null],[11,"blocks","","",74,null],[11,"is_block_device","","",77,null],[11,"is_char_device","","",77,null],[11,"is_fifo","","",77,null],[11,"is_socket","","",77,null],[11,"ino","","",80,null],[11,"mode","","",81,null],[11,"uid","std::process","",120,null],[11,"gid","","",120,null],[11,"session_leader","","",120,null],[11,"before_exec","","",120,null],[11,"exec","","",120,null],[11,"from_raw","","",121,{"inputs":[{"name":"i32"}],"output":{"name":"exitstatus"}}],[11,"signal","","",121,null],[11,"from_raw_fd","","",122,{"inputs":[{"name":"i32"}],"output":{"name":"stdio"}}],[11,"as_raw_fd","","",123,null],[11,"as_raw_fd","","",124,null],[11,"as_raw_fd","","",125,null],[11,"into_raw_fd","","",123,null],[11,"into_raw_fd","","",124,null],[11,"into_raw_fd","","",125,null],[11,"as_pthread_t","std::thread","",20,null],[11,"into_pthread_t","","",20,null],[11,"clone","std::sys::ext::net","",126,null],[11,"is_unnamed","","Returns true iff the address is unnamed.",126,null],[11,"as_pathname","","Returns the contents of this address if it is a `pathname` address.",126,null],[11,"fmt","","",126,null],[11,"fmt","","",127,null],[11,"connect","","Connects to the socket named by `path`.",127,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"pair","","Creates an unnamed pair of connected sockets.",127,{"inputs":[],"output":{"name":"result"}}],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",127,null],[11,"local_addr","","Returns the socket address of the local half of this connection.",127,null],[11,"peer_addr","","Returns the socket address of the remote half of this connection.",127,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",127,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",127,null],[11,"read_timeout","","Returns the read timeout of this socket.",127,null],[11,"write_timeout","","Returns the write timeout of this socket.",127,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",127,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",127,null],[11,"shutdown","","Shuts down the read, write, or both halves of this connection.",127,null],[11,"read","","",127,null],[11,"read_to_end","","",127,null],[11,"write","","",127,null],[11,"flush","","",127,null],[11,"as_raw_fd","","",127,null],[11,"from_raw_fd","","",127,{"inputs":[{"name":"i32"}],"output":{"name":"unixstream"}}],[11,"into_raw_fd","","",127,null],[11,"fmt","","",128,null],[11,"bind","","Creates a new `UnixListener` bound to the specified socket.",128,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"accept","","Accepts a new incoming connection to this listener.",128,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",128,null],[11,"local_addr","","Returns the local socket address of this listener.",128,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",128,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",128,null],[11,"incoming","","Returns an iterator over incoming connections.",128,null],[11,"as_raw_fd","","",128,null],[11,"from_raw_fd","","",128,{"inputs":[{"name":"i32"}],"output":{"name":"unixlistener"}}],[11,"into_raw_fd","","",128,null],[11,"fmt","","",129,null],[11,"next","","",129,null],[11,"size_hint","","",129,null],[11,"fmt","","",130,null],[11,"bind","","Creates a Unix datagram socket bound to the given path.",130,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[11,"unbound","","Creates a Unix Datagram socket which is not bound to any address.",130,{"inputs":[],"output":{"name":"result"}}],[11,"pair","","Create an unnamed pair of connected sockets.",130,{"inputs":[],"output":{"name":"result"}}],[11,"connect","","Connects the socket to the specified address.",130,null],[11,"try_clone","","Creates a new independently owned handle to the underlying socket.",130,null],[11,"local_addr","","Returns the address of this socket.",130,null],[11,"peer_addr","","Returns the address of this socket&#39;s peer.",130,null],[11,"recv_from","","Receives data from the socket.",130,null],[11,"recv","","Receives data from the socket.",130,null],[11,"send_to","","Sends data on the socket to the specified address.",130,null],[11,"send","","Sends data on the socket to the socket&#39;s peer.",130,null],[11,"set_read_timeout","","Sets the read timeout for the socket.",130,null],[11,"set_write_timeout","","Sets the write timeout for the socket.",130,null],[11,"read_timeout","","Returns the read timeout of this socket.",130,null],[11,"write_timeout","","Returns the write timeout of this socket.",130,null],[11,"set_nonblocking","","Moves the socket into or out of nonblocking mode.",130,null],[11,"take_error","","Returns the value of the `SO_ERROR` option.",130,null],[11,"shutdown","","Shut down the read, write, or both halves of this connection.",130,null],[11,"as_raw_fd","","",130,null],[11,"from_raw_fd","","",130,{"inputs":[{"name":"i32"}],"output":{"name":"unixdatagram"}}],[11,"into_raw_fd","","",130,null],[11,"deref","std::panic","",131,null],[11,"deref_mut","","",131,null],[11,"call_once","","",131,null],[11,"new","","Creates a new `AssertRecoverSafe` wrapper around the provided type.",132,{"inputs":[{"name":"t"}],"output":{"name":"assertrecoversafe"}}],[11,"into_inner","","Consumes the `AssertRecoverSafe`, returning the wrapped value.",132,null],[11,"deref","","",132,null],[11,"deref_mut","","",132,null],[11,"call_once","","",132,null],[11,"eq","std::path","",133,null],[11,"ne","","",133,null],[11,"cmp","","",133,null],[11,"partial_cmp","","",133,null],[11,"lt","","",133,null],[11,"le","","",133,null],[11,"gt","","",133,null],[11,"ge","","",133,null],[11,"hash","","",133,null],[11,"fmt","","",133,null],[11,"clone","","",133,null],[11,"is_verbatim","","Determines if the prefix is verbatim, i.e. begins with `\\\\?\\`.",133,null],[11,"fmt","","",134,null],[11,"clone","","",134,null],[11,"kind","","The parsed prefix data.",134,null],[11,"as_os_str","","The raw `OsStr` slice for this prefix.",134,null],[11,"eq","","",134,null],[11,"partial_cmp","","",134,null],[11,"cmp","","",134,null],[11,"hash","","",134,null],[11,"fmt","","",135,null],[11,"hash","","",135,null],[11,"cmp","","",135,null],[11,"partial_cmp","","",135,null],[11,"lt","","",135,null],[11,"le","","",135,null],[11,"gt","","",135,null],[11,"ge","","",135,null],[11,"eq","","",135,null],[11,"ne","","",135,null],[11,"clone","","",135,null],[11,"as_os_str","","Extracts the underlying `OsStr` slice",135,null],[11,"as_ref","","",135,null],[11,"clone","","",136,null],[11,"clone","","",137,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",136,null],[11,"as_ref","","",136,null],[11,"as_ref","","",136,null],[11,"as_path","","Extracts a slice corresponding to the portion of the path remaining for iteration.",137,null],[11,"as_ref","","",137,null],[11,"as_ref","","",137,null],[11,"next","","",137,null],[11,"next_back","","",137,null],[11,"next","","",136,null],[11,"next_back","","",136,null],[11,"eq","","",136,null],[11,"partial_cmp","","",136,null],[11,"cmp","","",136,null],[11,"clone","","",138,null],[11,"new","","Allocates an empty `PathBuf`.",138,{"inputs":[],"output":{"name":"pathbuf"}}],[11,"as_path","","Coerces to a `Path` slice.",138,null],[11,"push","","Extends `self` with `path`.",138,null],[11,"pop","","Truncate `self` to `self.parent()`.",138,null],[11,"set_file_name","","Updates `self.file_name()` to `file_name`.",138,null],[11,"set_extension","","Updates `self.extension()` to `extension`.",138,null],[11,"into_os_string","","Consumes the `PathBuf`, yielding its internal `OsString` storage.",138,null],[11,"from","","",138,{"inputs":[{"name":"t"}],"output":{"name":"pathbuf"}}],[11,"from","","",138,{"inputs":[{"name":"osstring"}],"output":{"name":"pathbuf"}}],[11,"from","","",138,{"inputs":[{"name":"string"}],"output":{"name":"pathbuf"}}],[11,"from_iter","","",138,{"inputs":[{"name":"i"}],"output":{"name":"pathbuf"}}],[11,"extend","","",138,null],[11,"fmt","","",138,null],[11,"new","","Directly wrap a string slice as a `Path` slice.",139,{"inputs":[{"name":"s"}],"output":{"name":"path"}}],[11,"as_os_str","","Yields the underlying `OsStr` slice.",139,null],[11,"to_str","","Yields a `&amp;str` slice if the `Path` is valid unicode.",139,null],[11,"to_string_lossy","","Converts a `Path` to a `Cow&lt;str&gt;`.",139,null],[11,"to_path_buf","","Converts a `Path` to an owned `PathBuf`.",139,null],[11,"is_absolute","","A path is *absolute* if it is independent of the current directory.",139,null],[11,"is_relative","","A path is *relative* if it is not absolute.",139,null],[11,"has_root","","A path has a root if the body of the path begins with the directory separator.",139,null],[11,"parent","","The path without its final component, if any.",139,null],[11,"file_name","","The final component of the path, if it is a normal file.",139,null],[11,"strip_prefix","","Returns a path that, when joined onto `base`, yields `self`.",139,null],[11,"starts_with","","Determines whether `base` is a prefix of `self`.",139,null],[11,"ends_with","","Determines whether `child` is a suffix of `self`.",139,null],[11,"file_stem","","Extracts the stem (non-extension) portion of `self.file_name()`.",139,null],[11,"extension","","Extracts the extension of `self.file_name()`, if possible.",139,null],[11,"join","","Creates an owned `PathBuf` with `path` adjoined to `self`.",139,null],[11,"with_file_name","","Creates an owned `PathBuf` like `self` but with the given file name.",139,null],[11,"with_extension","","Creates an owned `PathBuf` like `self` but with the given extension.",139,null],[11,"components","","Produce an iterator over the components of the path.",139,null],[11,"iter","","Produce an iterator over the path&#39;s components viewed as `OsStr` slices.",139,null],[11,"display","","Returns an object that implements `Display` for safely printing paths\nthat may contain non-Unicode data.",139,null],[11,"metadata","","Query the file system to get information about a file, directory, etc.",139,null],[11,"symlink_metadata","","Query the metadata about a file without following symlinks.",139,null],[11,"canonicalize","","Returns the canonical form of the path with all intermediate components\nnormalized and symbolic links resolved.",139,null],[11,"read_link","","Reads a symbolic link, returning the file that the link points to.",139,null],[11,"read_dir","","Returns an iterator over the entries within a directory.",139,null],[11,"exists","","Returns whether the path points at an existing entity.",139,null],[11,"is_file","","Returns whether the path is pointing at a regular file.",139,null],[11,"is_dir","","Returns whether the path is pointing at a directory.",139,null],[11,"deref","","",138,null],[11,"borrow","","",138,null],[11,"from","collections::borrow","",72,{"inputs":[{"name":"path"}],"output":{"name":"cow"}}],[11,"from","","",72,{"inputs":[{"name":"pathbuf"}],"output":{"name":"cow"}}],[11,"to_owned","std::path","",139,null],[11,"eq","","",138,null],[11,"hash","","",138,null],[11,"partial_cmp","","",138,null],[11,"cmp","","",138,null],[11,"as_ref","","",138,null],[11,"into","","",138,null],[11,"eq","","",140,null],[11,"ne","","",140,null],[11,"clone","","",140,null],[11,"fmt","","",140,null],[11,"as_ref","","",139,null],[11,"fmt","","",139,null],[11,"fmt","","",141,null],[11,"fmt","","",141,null],[11,"eq","","",139,null],[11,"hash","","",139,null],[11,"partial_cmp","","",139,null],[11,"cmp","","",139,null],[11,"as_ref","","",139,null],[11,"as_ref","std::ffi::os_str","",71,null],[11,"as_ref","collections::borrow","",72,null],[11,"as_ref","std::ffi::os_str","",70,null],[11,"as_ref","collections::string","",73,null],[11,"as_ref","std::path","",138,null],[11,"eq","","",138,null],[11,"eq","","",139,null],[11,"partial_cmp","","",138,null],[11,"partial_cmp","","",139,null],[11,"eq","","",138,null],[11,"partial_cmp","","",138,null],[11,"eq","collections::borrow","",72,null],[11,"eq","std::path","",139,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"partial_cmp","std::path","",139,null],[11,"eq","collections::borrow","",72,null],[11,"partial_cmp","","",72,null],[11,"eq","","",72,null],[11,"eq","std::path","",138,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"partial_cmp","std::path","",138,null],[11,"eq","","",138,null],[11,"eq","std::ffi::os_str","",71,null],[11,"partial_cmp","std::path","",138,null],[11,"partial_cmp","std::ffi::os_str","",71,null],[11,"eq","std::path","",138,null],[11,"partial_cmp","","",138,null],[11,"eq","","",138,null],[11,"eq","collections::borrow","",72,null],[11,"partial_cmp","std::path","",138,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"eq","std::path","",138,null],[11,"eq","std::ffi::os_str","",70,null],[11,"partial_cmp","std::path","",138,null],[11,"partial_cmp","std::ffi::os_str","",70,null],[11,"eq","std::path","",139,null],[11,"eq","std::ffi::os_str","",71,null],[11,"partial_cmp","std::path","",139,null],[11,"partial_cmp","std::ffi::os_str","",71,null],[11,"eq","std::path","",139,null],[11,"partial_cmp","","",139,null],[11,"eq","","",139,null],[11,"eq","collections::borrow","",72,null],[11,"partial_cmp","std::path","",139,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"eq","std::path","",139,null],[11,"eq","std::ffi::os_str","",70,null],[11,"partial_cmp","std::path","",139,null],[11,"partial_cmp","std::ffi::os_str","",70,null],[11,"eq","","",71,null],[11,"partial_cmp","","",71,null],[11,"eq","collections::borrow","",72,null],[11,"partial_cmp","","",72,null],[11,"eq","std::ffi::os_str","",70,null],[11,"partial_cmp","","",70,null],[11,"eq","collections::borrow","",72,null],[11,"eq","std::ffi::os_str","",71,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"partial_cmp","std::ffi::os_str","",71,null],[11,"eq","collections::borrow","",72,null],[11,"partial_cmp","","",72,null],[11,"eq","","",72,null],[11,"eq","std::ffi::os_str","",70,null],[11,"partial_cmp","collections::borrow","",72,null],[11,"partial_cmp","std::ffi::os_str","",70,null],[11,"fmt","std::path","",140,null],[11,"description","","",140,null],[11,"write","std::process","",123,null],[11,"flush","","",123,null],[11,"read","","",124,null],[11,"read_to_end","","",124,null],[11,"read","","",125,null],[11,"read_to_end","","",125,null],[11,"new","","Constructs a new `Command` for launching the program at\npath `program`, with the following default configuration:",120,{"inputs":[{"name":"s"}],"output":{"name":"command"}}],[11,"arg","","Add an argument to pass to the program.",120,null],[11,"args","","Add multiple arguments to pass to the program.",120,null],[11,"env","","Inserts or updates an environment variable mapping.",120,null],[11,"env_remove","","Removes an environment variable mapping.",120,null],[11,"env_clear","","Clears the entire environment map for the child process.",120,null],[11,"current_dir","","Sets the working directory for the child process.",120,null],[11,"stdin","","Configuration for the child process&#39;s stdin handle (file descriptor 0).",120,null],[11,"stdout","","Configuration for the child process&#39;s stdout handle (file descriptor 1).",120,null],[11,"stderr","","Configuration for the child process&#39;s stderr handle (file descriptor 2).",120,null],[11,"spawn","","Executes the command as a child process, returning a handle to it.",120,null],[11,"output","","Executes the command as a child process, waiting for it to finish and\ncollecting all of its output.",120,null],[11,"status","","Executes a command as a child process, waiting for it to finish and\ncollecting its exit status.",120,null],[11,"fmt","","Format the program and arguments of a Command for display. Any\nnon-utf8 data is lossily converted using the utf8 replacement\ncharacter.",120,null],[11,"clone","","",142,null],[11,"eq","","",142,null],[11,"ne","","",142,null],[11,"fmt","","",142,null],[11,"piped","","A new pipe should be arranged to connect the parent and child processes.",122,{"inputs":[],"output":{"name":"stdio"}}],[11,"inherit","","The child inherits from the corresponding parent descriptor.",122,{"inputs":[],"output":{"name":"stdio"}}],[11,"null","","This stream will be ignored. This is the equivalent of attaching the\nstream to `/dev/null`",122,{"inputs":[],"output":{"name":"stdio"}}],[11,"fmt","","",121,null],[11,"clone","","",121,null],[11,"eq","","",121,null],[11,"ne","","",121,null],[11,"success","","Was termination successful? Signal termination not considered a success,\nand success is defined as a zero exit status.",121,null],[11,"code","","Returns the exit code of the process, if any.",121,null],[11,"fmt","","",121,null],[11,"kill","","Forces the child to exit. This is equivalent to sending a\nSIGKILL on unix platforms.",143,null],[11,"id","","Returns the OS-assigned process identifier associated with this child.",143,null],[11,"wait","","Waits for the child to exit completely, returning the status that it\nexited with. This function will continue to have the same return value\nafter it has been called at least once.",143,null],[11,"wait_with_output","","Simultaneously waits for the child to exit and collect all remaining\noutput on the stdout/stderr handles, returning an `Output`\ninstance.",143,null],[11,"new","std::sync::mpsc::select","Creates a new selection structure. This set is initially empty.",144,{"inputs":[],"output":{"name":"select"}}],[11,"handle","","Creates a new handle into this receiver set for a new receiver. Note\nthat this does *not* add the receiver to the receiver set, for that you\nmust call the `add` method on the handle itself.",144,null],[11,"wait","","Waits for an event on this receiver set. The returned value is *not* an\nindex, but rather an id. This id can be queried against any active\n`Handle` structures (each one has an `id` method). The handle with\nthe matching `id` will have some sort of event available on it. The\nevent could either be that data is available or the corresponding\nchannel has been closed.",144,null],[11,"id","","Retrieves the id of this handle.",145,null],[11,"recv","","Blocks to receive a value on the underlying receiver, returning `Some` on\nsuccess or `None` if the channel disconnects. This function has the same\nsemantics as `Receiver.recv`",145,null],[11,"add","","Adds this handle to the receiver set that the handle was created from. This\nmethod can be called multiple times, but it has no effect if `add` was\ncalled previously.",145,null],[11,"remove","","Removes this handle from the `Select` set. This method is unsafe because\nit has no guarantee that the `Handle` was not moved since `add` was\ncalled.",145,null],[11,"drop","","",144,null],[11,"drop","","",145,null],[11,"fmt","","",144,null],[11,"fmt","","",145,null],[11,"clone","std::sync::mpsc","",146,null],[11,"eq","","",146,null],[11,"ne","","",146,null],[11,"fmt","","",147,null],[11,"clone","","",147,null],[11,"eq","","",147,null],[11,"fmt","","",148,null],[11,"clone","","",148,null],[11,"eq","","",148,null],[11,"clone","","",149,null],[11,"eq","","",149,null],[11,"ne","","",149,null],[11,"send","","Attempts to send a value on this channel, returning it back if it could\nnot be sent.",150,null],[11,"clone","","",150,null],[11,"drop","","",150,null],[11,"fmt","","",150,null],[11,"send","","Sends a value on this synchronous channel.",151,null],[11,"try_send","","Attempts to send a value on this channel without blocking.",151,null],[11,"clone","","",151,null],[11,"drop","","",151,null],[11,"fmt","","",151,null],[11,"try_recv","","Attempts to return a pending value on this receiver without blocking",152,null],[11,"recv","","Attempts to wait for a value on this receiver, returning an error if the\ncorresponding channel has hung up.",152,null],[11,"iter","","Returns an iterator that will block waiting for messages, but never\n`panic!`. It will return `None` when the channel has hung up.",152,null],[11,"next","","",153,null],[11,"next","","",154,null],[11,"into_iter","","",152,null],[11,"drop","","",152,null],[11,"fmt","","",152,null],[11,"fmt","","",146,null],[11,"fmt","","",146,null],[11,"description","","",146,null],[11,"cause","","",146,null],[11,"fmt","","",149,null],[11,"fmt","","",149,null],[11,"description","","",149,null],[11,"cause","","",149,null],[11,"fmt","","",147,null],[11,"description","","",147,null],[11,"cause","","",147,null],[11,"fmt","","",148,null],[11,"description","","",148,null],[11,"cause","","",148,null],[11,"new","std::sync::barrier","Creates a new barrier that can block a given number of threads.",155,{"inputs":[{"name":"usize"}],"output":{"name":"barrier"}}],[11,"wait","","Blocks the current thread until all threads have rendezvoused here.",155,null],[11,"is_leader","","Returns whether this thread from `wait` is the &quot;leader thread&quot;.",156,null],[11,"clone","std::sync::condvar","",157,null],[11,"eq","","",157,null],[11,"ne","","",157,null],[11,"fmt","","",157,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",157,null],[11,"new","","Creates a new condition variable which is ready to be waited on and\nnotified.",158,{"inputs":[],"output":{"name":"condvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",158,null],[11,"wait_timeout_ms","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",158,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",158,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",158,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",158,null],[11,"default","","",158,{"inputs":[],"output":{"name":"condvar"}}],[11,"drop","","",158,null],[11,"new","","Creates a new condition variable",159,{"inputs":[],"output":{"name":"staticcondvar"}}],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",159,null],[11,"wait_timeout","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",159,null],[11,"wait_timeout_with","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",159,null],[11,"notify_one","","Wakes up one blocked thread on this condvar.",159,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",159,null],[11,"destroy","","Deallocates all resources associated with this static condvar.",159,null],[11,"new","std::sync::mutex","Creates a new mutex in an unlocked state ready for use.",160,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",160,null],[11,"try_lock","","Attempts to acquire this lock.",160,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",160,null],[11,"into_inner","","Consumes this mutex, returning the underlying data.",160,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",160,null],[11,"drop","","",160,null],[11,"default","","",160,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",160,null],[11,"new","","Creates a new mutex in an unlocked state ready for use.",161,{"inputs":[],"output":{"name":"staticmutex"}}],[11,"lock","","Acquires this lock, see `Mutex::lock`",161,null],[11,"try_lock","","Attempts to grab this lock, see `Mutex::try_lock`",161,null],[11,"destroy","","Deallocates resources associated with this static mutex.",161,null],[11,"deref","","",162,null],[11,"deref_mut","","",162,null],[11,"drop","","",162,null],[11,"new","std::sync::once","Creates a new `Once` value.",163,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",163,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",163,null],[11,"poisoned","","Returns whether the associated `Once` has been poisoned.",164,null],[11,"new","std::sync::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",165,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",165,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",165,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",165,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",165,null],[11,"is_poisoned","","Determines whether the lock is poisoned.",165,null],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",165,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",165,null],[11,"drop","","",165,null],[11,"fmt","","",165,null],[11,"default","","",165,{"inputs":[],"output":{"name":"rwlock"}}],[11,"new","","Creates a new rwlock.",166,{"inputs":[],"output":{"name":"staticrwlock"}}],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",166,null],[11,"try_read","","Attempts to acquire this lock with shared read access.",166,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",166,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",166,null],[11,"destroy","","Deallocates all resources associated with this static lock.",166,null],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",167,{"inputs":[{"name":"rwlockreadguard"},{"name":"f"}],"output":{"name":"rwlockreadguard"}}],[11,"map","","Transform this guard to hold a sub-borrow of the original data.",168,{"inputs":[{"name":"rwlockwriteguard"},{"name":"f"}],"output":{"name":"rwlockwriteguard"}}],[11,"deref","","",167,null],[11,"deref","","",168,null],[11,"deref_mut","","",168,null],[11,"drop","","",167,null],[11,"drop","","",168,null],[11,"default","core::sync::atomic","",169,{"inputs":[],"output":{"name":"atomicbool"}}],[11,"default","","",170,{"inputs":[],"output":{"name":"atomicptr"}}],[11,"fmt","","",171,null],[11,"clone","","",171,null],[11,"new","","Creates a new `AtomicBool`.",169,{"inputs":[{"name":"bool"}],"output":{"name":"atomicbool"}}],[11,"load","","Loads a value from the bool.",169,null],[11,"store","","Stores a value into the bool.",169,null],[11,"swap","","Stores a value into the bool, returning the old value.",169,null],[11,"compare_and_swap","","Stores a value into the `bool` if the current value is the same as the `current` value.",169,null],[11,"compare_exchange","","Stores a value into the `bool` if the current value is the same as the `current` value.",169,null],[11,"compare_exchange_weak","","Stores a value into the `bool` if the current value is the same as the `current` value.",169,null],[11,"fetch_and","","Logical &quot;and&quot; with a boolean value.",169,null],[11,"fetch_nand","","Logical &quot;nand&quot; with a boolean value.",169,null],[11,"fetch_or","","Logical &quot;or&quot; with a boolean value.",169,null],[11,"fetch_xor","","Logical &quot;xor&quot; with a boolean value.",169,null],[11,"new","","Creates a new `AtomicPtr`.",170,null],[11,"load","","Loads a value from the pointer.",170,null],[11,"store","","Stores a value into the pointer.",170,null],[11,"swap","","Stores a value into the pointer, returning the old value.",170,null],[11,"compare_and_swap","","Stores a value into the pointer if the current value is the same as the `current` value.",170,null],[11,"compare_exchange","","Stores a value into the pointer if the current value is the same as the `current` value.",170,null],[11,"compare_exchange_weak","","Stores a value into the pointer if the current value is the same as the `current` value.",170,null],[11,"default","","",172,{"inputs":[],"output":{"name":"atomici8"}}],[11,"fmt","","",172,null],[11,"new","","Creates a new atomic integer.",172,{"inputs":[{"name":"i8"}],"output":{"name":"atomici8"}}],[11,"load","","Loads a value from the atomic integer.",172,null],[11,"store","","Stores a value into the atomic integer.",172,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",172,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",172,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",172,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",172,null],[11,"fetch_add","","Add to the current value, returning the previous value.",172,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",172,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",172,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",172,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",172,null],[11,"default","","",173,{"inputs":[],"output":{"name":"atomicu8"}}],[11,"fmt","","",173,null],[11,"new","","Creates a new atomic integer.",173,{"inputs":[{"name":"u8"}],"output":{"name":"atomicu8"}}],[11,"load","","Loads a value from the atomic integer.",173,null],[11,"store","","Stores a value into the atomic integer.",173,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",173,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",173,null],[11,"fetch_add","","Add to the current value, returning the previous value.",173,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",173,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",173,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",173,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",173,null],[11,"default","","",174,{"inputs":[],"output":{"name":"atomici16"}}],[11,"fmt","","",174,null],[11,"new","","Creates a new atomic integer.",174,{"inputs":[{"name":"i16"}],"output":{"name":"atomici16"}}],[11,"load","","Loads a value from the atomic integer.",174,null],[11,"store","","Stores a value into the atomic integer.",174,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",174,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",174,null],[11,"fetch_add","","Add to the current value, returning the previous value.",174,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",174,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",174,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",174,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",174,null],[11,"default","","",175,{"inputs":[],"output":{"name":"atomicu16"}}],[11,"fmt","","",175,null],[11,"new","","Creates a new atomic integer.",175,{"inputs":[{"name":"u16"}],"output":{"name":"atomicu16"}}],[11,"load","","Loads a value from the atomic integer.",175,null],[11,"store","","Stores a value into the atomic integer.",175,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",175,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",175,null],[11,"fetch_add","","Add to the current value, returning the previous value.",175,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",175,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",175,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",175,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",175,null],[11,"default","","",176,{"inputs":[],"output":{"name":"atomici32"}}],[11,"fmt","","",176,null],[11,"new","","Creates a new atomic integer.",176,{"inputs":[{"name":"i32"}],"output":{"name":"atomici32"}}],[11,"load","","Loads a value from the atomic integer.",176,null],[11,"store","","Stores a value into the atomic integer.",176,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",176,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",176,null],[11,"fetch_add","","Add to the current value, returning the previous value.",176,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",176,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",176,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",176,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",176,null],[11,"default","","",177,{"inputs":[],"output":{"name":"atomicu32"}}],[11,"fmt","","",177,null],[11,"new","","Creates a new atomic integer.",177,{"inputs":[{"name":"u32"}],"output":{"name":"atomicu32"}}],[11,"load","","Loads a value from the atomic integer.",177,null],[11,"store","","Stores a value into the atomic integer.",177,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",177,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",177,null],[11,"fetch_add","","Add to the current value, returning the previous value.",177,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",177,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",177,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",177,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",177,null],[11,"default","","",178,{"inputs":[],"output":{"name":"atomici64"}}],[11,"fmt","","",178,null],[11,"new","","Creates a new atomic integer.",178,{"inputs":[{"name":"i64"}],"output":{"name":"atomici64"}}],[11,"load","","Loads a value from the atomic integer.",178,null],[11,"store","","Stores a value into the atomic integer.",178,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",178,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",178,null],[11,"fetch_add","","Add to the current value, returning the previous value.",178,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",178,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",178,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",178,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",178,null],[11,"default","","",179,{"inputs":[],"output":{"name":"atomicu64"}}],[11,"fmt","","",179,null],[11,"new","","Creates a new atomic integer.",179,{"inputs":[{"name":"u64"}],"output":{"name":"atomicu64"}}],[11,"load","","Loads a value from the atomic integer.",179,null],[11,"store","","Stores a value into the atomic integer.",179,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",179,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",179,null],[11,"fetch_add","","Add to the current value, returning the previous value.",179,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",179,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",179,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",179,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",179,null],[11,"default","","",180,{"inputs":[],"output":{"name":"atomicisize"}}],[11,"fmt","","",180,null],[11,"new","","Creates a new atomic integer.",180,{"inputs":[{"name":"isize"}],"output":{"name":"atomicisize"}}],[11,"load","","Loads a value from the atomic integer.",180,null],[11,"store","","Stores a value into the atomic integer.",180,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",180,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",180,null],[11,"fetch_add","","Add to the current value, returning the previous value.",180,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",180,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",180,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",180,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",180,null],[11,"default","","",181,{"inputs":[],"output":{"name":"atomicusize"}}],[11,"fmt","","",181,null],[11,"new","","Creates a new atomic integer.",181,{"inputs":[{"name":"usize"}],"output":{"name":"atomicusize"}}],[11,"load","","Loads a value from the atomic integer.",181,null],[11,"store","","Stores a value into the atomic integer.",181,null],[11,"swap","","Stores a value into the atomic integer, returning the old value.",181,null],[11,"compare_and_swap","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"compare_exchange","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"compare_exchange_weak","","Stores a value into the atomic integer if the current value is the same as the\n`current` value.",181,null],[11,"fetch_add","","Add to the current value, returning the previous value.",181,null],[11,"fetch_sub","","Subtract from the current value, returning the previous value.",181,null],[11,"fetch_and","","Bitwise and with the current value, returning the previous value.",181,null],[11,"fetch_or","","Bitwise or with the current value, returning the previous value.",181,null],[11,"fetch_xor","","Bitwise xor with the current value, returning the previous value.",181,null],[11,"fmt","","",169,null],[11,"fmt","","",170,null],[11,"hash","std::time::duration","",182,null],[11,"fmt","","",182,null],[11,"cmp","","",182,null],[11,"partial_cmp","","",182,null],[11,"lt","","",182,null],[11,"le","","",182,null],[11,"gt","","",182,null],[11,"ge","","",182,null],[11,"eq","","",182,null],[11,"ne","","",182,null],[11,"clone","","",182,null],[11,"new","","Creates a new `Duration` from the specified number of seconds and\nadditional nanosecond precision.",182,{"inputs":[{"name":"u64"},{"name":"u32"}],"output":{"name":"duration"}}],[11,"from_secs","","Creates a new `Duration` from the specified number of seconds.",182,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"from_millis","","Creates a new `Duration` from the specified number of milliseconds.",182,{"inputs":[{"name":"u64"}],"output":{"name":"duration"}}],[11,"as_secs","","Returns the number of whole seconds represented by this duration.",182,null],[11,"subsec_nanos","","Returns the nanosecond precision represented by this duration.",182,null],[11,"add","","",182,null],[11,"add_assign","","",182,null],[11,"sub","","",182,null],[11,"sub_assign","","",182,null],[11,"mul","","",182,null],[11,"mul_assign","","",182,null],[11,"div","","",182,null],[11,"div_assign","","",182,null],[11,"cmp","std::time","",183,null],[11,"partial_cmp","","",183,null],[11,"lt","","",183,null],[11,"le","","",183,null],[11,"gt","","",183,null],[11,"ge","","",183,null],[11,"eq","","",183,null],[11,"ne","","",183,null],[11,"clone","","",183,null],[11,"cmp","","",184,null],[11,"partial_cmp","","",184,null],[11,"lt","","",184,null],[11,"le","","",184,null],[11,"gt","","",184,null],[11,"ge","","",184,null],[11,"eq","","",184,null],[11,"ne","","",184,null],[11,"clone","","",184,null],[11,"fmt","","",185,null],[11,"clone","","",185,null],[11,"now","","Returns an instant corresponding to &quot;now&quot;.",183,{"inputs":[],"output":{"name":"instant"}}],[11,"duration_since","","Returns the amount of time elapsed from another instant to this one.",183,null],[11,"duration_from_earlier","","Deprecated, renamed to `duration_since`",183,null],[11,"elapsed","","Returns the amount of time elapsed since this instant was created.",183,null],[11,"add","","",183,null],[11,"add_assign","","",183,null],[11,"sub","","",183,null],[11,"sub_assign","","",183,null],[11,"sub","","",183,null],[11,"fmt","","",183,null],[11,"now","","Returns the system time corresponding to &quot;now&quot;.",184,{"inputs":[],"output":{"name":"systemtime"}}],[11,"duration_since","","Returns the amount of time elapsed from an earlier point in time.",184,null],[11,"duration_from_earlier","","Deprecated, renamed to `duration_since`",184,null],[11,"elapsed","","Returns the amount of time elapsed since this system time was created.",184,null],[11,"add","","",184,null],[11,"add_assign","","",184,null],[11,"sub","","",184,null],[11,"sub_assign","","",184,null],[11,"fmt","","",184,null],[11,"duration","","Returns the positive duration which represents how far forward the\nsecond system time was from the first.",185,null],[11,"description","","",185,null],[11,"fmt","","",185,null],[11,"fmt","std::sys_common::poison","",186,null],[11,"fmt","","",186,null],[11,"description","","",186,null],[11,"new","","Creates a `PoisonError`.",186,{"inputs":[{"name":"t"}],"output":{"name":"poisonerror"}}],[11,"into_inner","","Consumes this error indicating that a lock is poisoned, returning the\nunderlying guard to allow access regardless.",186,null],[11,"get_ref","","Reaches into this error indicating that a lock is poisoned, returning a\nreference to the underlying guard to allow access regardless.",186,null],[11,"get_mut","","Reaches into this error indicating that a lock is poisoned, returning a\nmutable reference to the underlying guard to allow access regardless.",186,null],[11,"from","","",187,{"inputs":[{"name":"poisonerror"}],"output":{"name":"trylockerror"}}],[11,"fmt","","",187,null],[11,"fmt","","",187,null],[11,"description","","",187,null],[11,"cause","","",187,null],[11,"clone","libc::unix","",188,null],[11,"clone","","",189,null],[11,"clone","","",190,null],[11,"clone","","",191,null],[11,"clone","","",192,null],[11,"clone","","",193,null],[11,"clone","","",194,null],[11,"clone","","",195,null],[11,"clone","","",196,null],[11,"clone","","",197,null],[11,"clone","","",198,null],[11,"clone","","",199,null],[11,"clone","","",200,null],[11,"clone","libc::unix::notbsd","",201,null],[11,"clone","","",202,null],[11,"clone","","",203,null],[11,"clone","","",204,null],[11,"clone","","",205,null],[11,"clone","","",206,null],[11,"clone","","",207,null],[11,"clone","","",208,null],[11,"clone","","",209,null],[11,"clone","","",210,null],[11,"clone","","",211,null],[11,"clone","","",212,null],[11,"clone","","",213,null],[11,"clone","","",214,null],[11,"clone","","",215,null],[11,"clone","libc::unix::notbsd::linux","",216,null],[11,"clone","","",217,null],[11,"clone","","",218,null],[11,"clone","","",219,null],[11,"clone","","",220,null],[11,"clone","","",221,null],[11,"clone","","",222,null],[11,"clone","","",223,null],[11,"clone","","",224,null],[11,"clone","","",225,null],[11,"clone","","",226,null],[11,"clone","","",227,null],[11,"clone","","",228,null],[11,"clone","","",229,null],[11,"clone","","",230,null],[11,"clone","","",231,null],[11,"clone","libc::unix::notbsd::linux::other","",232,null],[11,"clone","","",233,null],[11,"clone","","",234,null],[11,"clone","","",235,null],[11,"clone","","",236,null],[11,"clone","","",237,null],[11,"clone","","",238,null],[11,"clone","","",239,null],[11,"clone","","",240,null],[11,"clone","","",241,null],[11,"clone","","",242,null],[11,"clone","libc::unix::notbsd::linux::other::b64","",243,null],[11,"clone","libc::unix::notbsd::linux::other::b64::x86_64","",244,null],[11,"clone","","",245,null],[11,"clone","","",246,null],[11,"clone","","",247,null],[11,"clone","","",248,null],[11,"clone","","",249,null],[11,"clone","","",250,null],[11,"clone","","",251,null],[11,"payload","std::panicking","Returns the payload associated with the panic.",252,null],[11,"location","","Returns information about the location from which the panic originated,\nif available.",252,null],[11,"file","","Returns the name of the source file from which the panic originated.",253,null],[11,"line","","Returns the line number from which the panic originated.",253,null],[11,"clone","alloc::boxed","",254,null],[11,"pointer","","",255,null],[11,"make_place","","",255,{"inputs":[],"output":{"name":"intermediatebox"}}],[11,"finalize","","",255,null],[11,"finalize","","",0,{"inputs":[{"name":"intermediatebox"}],"output":{"name":"box"}}],[11,"make_place","","",254,null],[11,"drop","","",255,null],[11,"new","","Allocates memory on the heap and then places `x` into it.",0,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"from_raw","","Constructs a box from a raw pointer.",0,null],[11,"into_raw","","Consumes the `Box`, returning the wrapped raw pointer.",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"box"}}],[11,"default","","",0,{"inputs":[],"output":{"name":"box"}}],[11,"clone","","Returns a new box with a `clone()` of this box&#39;s contents.",0,null],[11,"clone_from","","Copies `source`&#39;s contents into `self` without creating a new allocation.",0,null],[11,"clone","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"partial_cmp","","",0,null],[11,"lt","","",0,null],[11,"le","","",0,null],[11,"ge","","",0,null],[11,"gt","","",0,null],[11,"cmp","","",0,null],[11,"hash","","",0,null],[11,"from","","",0,{"inputs":[{"name":"t"}],"output":{"name":"box"}}],[11,"downcast","","Attempt to downcast the box to a concrete type.",0,null],[11,"downcast","","Attempt to downcast the box to a concrete type.",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"deref","","",0,null],[11,"deref_mut","","",0,null],[11,"next","","",0,null],[11,"size_hint","","",0,null],[11,"next_back","","",0,null],[11,"call_once","","",0,null],[11,"call_once","","",0,null],[11,"clone","","",0,null],[11,"borrow","","",0,null],[11,"borrow_mut","","",0,null],[11,"as_ref","","",0,null],[11,"as_mut","","",0,null],[11,"borrow","collections::borrow","",72,null],[11,"clone","","",72,null],[11,"to_mut","","Acquires a mutable reference to the owned form of the data.",72,null],[11,"into_owned","","Extracts the owned data.",72,null],[11,"deref","","",72,null],[11,"cmp","","",72,null],[11,"eq","","",72,null],[11,"partial_cmp","","",72,null],[11,"fmt","","",72,null],[11,"fmt","","",72,null],[11,"hash","","",72,null],[11,"as_ref","","",72,null],[11,"cmp","collections::string","",73,null],[11,"partial_cmp","","",73,null],[11,"lt","","",73,null],[11,"le","","",73,null],[11,"gt","","",73,null],[11,"ge","","",73,null],[11,"fmt","","",6,null],[11,"fmt","","",7,null],[11,"new","","Creates a new empty `String`.",73,{"inputs":[],"output":{"name":"string"}}],[11,"with_capacity","","Creates a new empty `String` with a particular capacity.",73,{"inputs":[{"name":"usize"}],"output":{"name":"string"}}],[11,"from_utf8","","Converts a vector of bytes to a `String`.",73,{"inputs":[{"name":"vec"}],"output":{"name":"result"}}],[11,"from_utf8_lossy","","Converts a slice of bytes to a string, including invalid characters.",73,null],[11,"from_utf16","","Decode a UTF-16 encoded vector `v` into a `String`, returning `Err`\nif `v` contains any invalid data.",73,null],[11,"from_utf16_lossy","","Decode a UTF-16 encoded vector `v` into a string, replacing\ninvalid data with the replacement character (U+FFFD).",73,null],[11,"from_raw_parts","","Creates a new `String` from a length, capacity, and pointer.",73,null],[11,"from_utf8_unchecked","","Converts a vector of bytes to a `String` without checking that the\nstring contains valid UTF-8.",73,{"inputs":[{"name":"vec"}],"output":{"name":"string"}}],[11,"into_bytes","","Converts a `String` into a byte vector.",73,null],[11,"as_str","","Extracts a string slice containing the entire string.",73,null],[11,"as_mut_str","","Extracts a string slice containing the entire string.",73,null],[11,"push_str","","Appends a given string slice onto the end of this `String`.",73,null],[11,"capacity","","Returns this `String`&#39;s capacity, in bytes.",73,null],[11,"reserve","","Ensures that this `String`&#39;s capacity is at least `additional` bytes\nlarger than its length.",73,null],[11,"reserve_exact","","Ensures that this `String`&#39;s capacity is `additional` bytes\nlarger than its length.",73,null],[11,"shrink_to_fit","","Shrinks the capacity of this `String` to match its length.",73,null],[11,"push","","Appends the given `char` to the end of this `String`.",73,null],[11,"as_bytes","","Returns a byte slice of this `String`&#39;s contents.",73,null],[11,"truncate","","Shortens this `String` to the specified length.",73,null],[11,"pop","","Removes the last character from the string buffer and returns it.",73,null],[11,"remove","","Removes a `char` from this `String` at a byte position and returns it.",73,null],[11,"insert","","Inserts a character into this `String` at a byte position.",73,null],[11,"as_mut_vec","","Returns a mutable reference to the contents of this `String`.",73,null],[11,"len","","Returns the length of this `String`, in bytes.",73,null],[11,"is_empty","","Returns `true` if this `String` has a length of zero.",73,null],[11,"clear","","Truncates this `String`, removing all contents.",73,null],[11,"drain","","Create a draining iterator that removes the specified range in the string\nand yields the removed chars.",73,null],[11,"into_boxed_str","","Converts this `String` into a `Box&lt;str&gt;`.",73,null],[11,"into_bytes","","Returns the bytes that were attempted to convert to a `String`.",6,null],[11,"utf8_error","","Fetch a `Utf8Error` to get more details about the conversion failure.",6,null],[11,"fmt","","",6,null],[11,"fmt","","",7,null],[11,"clone","","",73,null],[11,"clone_from","","",73,null],[11,"from_iter","","",73,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",73,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"from_iter","","",73,{"inputs":[{"name":"i"}],"output":{"name":"string"}}],[11,"extend","","",73,null],[11,"extend","","",73,null],[11,"extend","","",73,null],[11,"extend","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"eq","","",73,null],[11,"ne","","",73,null],[11,"eq","collections::borrow","",72,null],[11,"ne","","",72,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"eq","collections::string","",73,null],[11,"ne","","",73,null],[11,"default","","",73,{"inputs":[],"output":{"name":"string"}}],[11,"fmt","","",73,null],[11,"fmt","","",73,null],[11,"hash","","",73,null],[11,"add","","",73,null],[11,"index","","",73,null],[11,"index","","",73,null],[11,"index","","",73,null],[11,"index","","",73,null],[11,"index","","",73,null],[11,"index","","",73,null],[11,"index_mut","","",73,null],[11,"index_mut","","",73,null],[11,"index_mut","","",73,null],[11,"index_mut","","",73,null],[11,"index_mut","","",73,null],[11,"index_mut","","",73,null],[11,"deref","","",73,null],[11,"deref_mut","","",73,null],[11,"from_str","","",73,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",8,null],[11,"fmt","","",8,null],[11,"fmt","","",8,null],[11,"eq","","",8,null],[11,"as_ref","","",73,null],[11,"as_ref","","",73,null],[11,"from","","",73,{"inputs":[{"name":"str"}],"output":{"name":"string"}}],[11,"from","collections::borrow","",72,{"inputs":[{"name":"str"}],"output":{"name":"cow"}}],[11,"from","","",72,{"inputs":[{"name":"string"}],"output":{"name":"cow"}}],[11,"into","collections::string","",73,null],[11,"write_str","","",73,null],[11,"write_char","","",73,null],[11,"drop","","",256,null],[11,"next","","",256,null],[11,"size_hint","","",256,null],[11,"next_back","","",256,null],[11,"borrow","collections::vec","",46,null],[11,"borrow_mut","","",46,null],[11,"fmt","core::hash::sip","",257,null],[11,"new","","Creates a new `SipHasher` with the two initial keys set to 0.",257,{"inputs":[],"output":{"name":"siphasher"}}],[11,"new_with_keys","","Creates a `SipHasher` that is keyed off the provided keys.",257,{"inputs":[{"name":"u64"},{"name":"u64"}],"output":{"name":"siphasher"}}],[11,"write","","",257,null],[11,"finish","","",257,null],[11,"clone","","",257,null],[11,"default","","",257,{"inputs":[],"output":{"name":"siphasher"}}],[11,"fmt","core::hash","",258,null],[11,"build_hasher","","",258,null],[11,"clone","","",258,null],[11,"default","","",258,{"inputs":[],"output":{"name":"buildhasherdefault"}}],[11,"hash","core::option","",259,null],[11,"fmt","","",259,null],[11,"cmp","","",259,null],[11,"partial_cmp","","",259,null],[11,"lt","","",259,null],[11,"le","","",259,null],[11,"gt","","",259,null],[11,"ge","","",259,null],[11,"eq","","",259,null],[11,"ne","","",259,null],[11,"clone","","",259,null],[11,"is_some","","Returns `true` if the option is a `Some` value",259,null],[11,"is_none","","Returns `true` if the option is a `None` value",259,null],[11,"as_ref","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;T&gt;`",259,null],[11,"as_mut","","Converts from `Option&lt;T&gt;` to `Option&lt;&amp;mut T&gt;`",259,null],[11,"expect","","Unwraps an option, yielding the content of a `Some`.",259,null],[11,"unwrap","","Moves the value `v` out of the `Option&lt;T&gt;` if it is `Some(v)`.",259,null],[11,"unwrap_or","","Returns the contained value or a default.",259,null],[11,"unwrap_or_else","","Returns the contained value or computes it from a closure.",259,null],[11,"map","","Maps an `Option&lt;T&gt;` to `Option&lt;U&gt;` by applying a function to a contained value",259,null],[11,"map_or","","Applies a function to the contained value (if any),\nor returns a `default` (if not).",259,null],[11,"map_or_else","","Applies a function to the contained value (if any),\nor computes a `default` (if not).",259,null],[11,"ok_or","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err)`.",259,null],[11,"ok_or_else","","Transforms the `Option&lt;T&gt;` into a `Result&lt;T, E&gt;`, mapping `Some(v)` to\n`Ok(v)` and `None` to `Err(err())`.",259,null],[11,"iter","","Returns an iterator over the possibly contained value.",259,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",259,null],[11,"and","","Returns `None` if the option is `None`, otherwise returns `optb`.",259,null],[11,"and_then","","Returns `None` if the option is `None`, otherwise calls `f` with the\nwrapped value and returns the result.",259,null],[11,"or","","Returns the option if it contains a value, otherwise returns `optb`.",259,null],[11,"or_else","","Returns the option if it contains a value, otherwise calls `f` and\nreturns the result.",259,null],[11,"take","","Takes the value out of the option, leaving a `None` in its place.",259,null],[11,"cloned","","Maps an `Option&lt;&amp;T&gt;` to an `Option&lt;T&gt;` by cloning the contents of the\noption.",259,null],[11,"unwrap_or_default","","Returns the contained value or a default",259,null],[11,"default","","",259,{"inputs":[],"output":{"name":"option"}}],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",259,null],[11,"fmt","","",260,null],[11,"next","","",260,null],[11,"size_hint","","",260,null],[11,"next_back","","",260,null],[11,"clone","","",260,null],[11,"fmt","","",261,null],[11,"next","","",261,null],[11,"size_hint","","",261,null],[11,"next_back","","",261,null],[11,"fmt","","",262,null],[11,"clone","","",262,null],[11,"next","","",262,null],[11,"size_hint","","",262,null],[11,"next_back","","",262,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is `None`, no further\nelements are taken, and the `None` is returned. Should no `None` occur, a\ncontainer with the values of each `Option` is returned.",259,{"inputs":[{"name":"i"}],"output":{"name":"option"}}],[11,"new","alloc::rc","Constructs a new `Rc&lt;T&gt;`.",263,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Rc&lt;T&gt;` has exactly one strong reference.",263,{"inputs":[{"name":"rc"}],"output":{"name":"result"}}],[11,"would_unwrap","","Checks if `Rc::try_unwrap` would return `Ok`.",263,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"downgrade","","Downgrades the `Rc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",263,{"inputs":[{"name":"rc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",263,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",263,{"inputs":[{"name":"rc"}],"output":{"name":"usize"}}],[11,"is_unique","","Returns true if there are no other `Rc` or `Weak&lt;T&gt;` values that share\nthe same inner value.",263,{"inputs":[{"name":"rc"}],"output":{"name":"bool"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Rc&lt;T&gt;` has\none strong reference and no weak references.",263,{"inputs":[{"name":"rc"}],"output":{"name":"option"}}],[11,"make_mut","","Make a mutable reference into the given `Rc&lt;T&gt;` by cloning the inner\ndata if the `Rc&lt;T&gt;` doesn&#39;t have one strong reference and no weak\nreferences.",263,{"inputs":[{"name":"rc"}],"output":{"name":"t"}}],[11,"deref","","",263,null],[11,"drop","","Drops the `Rc&lt;T&gt;`.",263,null],[11,"clone","","Makes a clone of the `Rc&lt;T&gt;`.",263,null],[11,"default","","Creates a new `Rc&lt;T&gt;`, with the `Default` value for `T`.",263,{"inputs":[],"output":{"name":"rc"}}],[11,"eq","","Equality for two `Rc&lt;T&gt;`s.",263,null],[11,"ne","","Inequality for two `Rc&lt;T&gt;`s.",263,null],[11,"partial_cmp","","Partial comparison for two `Rc&lt;T&gt;`s.",263,null],[11,"lt","","Less-than comparison for two `Rc&lt;T&gt;`s.",263,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",263,null],[11,"gt","","Greater-than comparison for two `Rc&lt;T&gt;`s.",263,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Rc&lt;T&gt;`s.",263,null],[11,"cmp","","Comparison for two `Rc&lt;T&gt;`s.",263,null],[11,"hash","","",263,null],[11,"fmt","","",263,null],[11,"fmt","","",263,null],[11,"fmt","","",263,null],[11,"from","","",263,{"inputs":[{"name":"t"}],"output":{"name":"rc"}}],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",264,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",264,null],[11,"drop","","Drops the `Weak&lt;T&gt;`.",264,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",264,null],[11,"fmt","","",264,null],[11,"default","","",264,{"inputs":[],"output":{"name":"weak"}}],[11,"borrow","","",263,null],[11,"as_ref","","",263,null],[11,"new","core::ptr","Creates a new `Unique`.",265,null],[11,"get","","Dereferences the content.",265,null],[11,"get_mut","","Mutably dereferences the content.",265,null],[11,"deref","","",265,null],[11,"fmt","","",265,null],[11,"new","","Creates a new `Shared`.",266,null],[11,"clone","","",266,null],[11,"deref","","",266,null],[11,"fmt","","",266,null],[11,"new","collections::vec","Constructs a new, empty `Vec&lt;T&gt;`.",46,{"inputs":[],"output":{"name":"vec"}}],[11,"with_capacity","","Constructs a new, empty `Vec&lt;T&gt;` with the specified capacity.",46,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[11,"from_raw_parts","","Creates a `Vec&lt;T&gt;` directly from the raw components of another vector.",46,null],[11,"capacity","","Returns the number of elements the vector can hold without\nreallocating.",46,null],[11,"reserve","","Reserves capacity for at least `additional` more elements to be inserted\nin the given `Vec&lt;T&gt;`. The collection may reserve more space to avoid\nfrequent reallocations.",46,null],[11,"reserve_exact","","Reserves the minimum capacity for exactly `additional` more elements to\nbe inserted in the given `Vec&lt;T&gt;`. Does nothing if the capacity is already\nsufficient.",46,null],[11,"shrink_to_fit","","Shrinks the capacity of the vector as much as possible.",46,null],[11,"into_boxed_slice","","Converts the vector into Box&lt;[T]&gt;.",46,null],[11,"truncate","","Shorten a vector to be `len` elements long, dropping excess elements.",46,null],[11,"as_slice","","Extracts a slice containing the entire vector.",46,null],[11,"as_mut_slice","","Extracts a mutable slice of the entire vector.",46,null],[11,"set_len","","Sets the length of a vector.",46,null],[11,"swap_remove","","Removes an element from anywhere in the vector and return it, replacing\nit with the last element.",46,null],[11,"insert","","Inserts an element at position `index` within the vector, shifting all\nelements after it to the right.",46,null],[11,"remove","","Removes and returns the element at position `index` within the vector,\nshifting all elements after it to the left.",46,null],[11,"retain","","Retains only the elements specified by the predicate.",46,null],[11,"push","","Appends an element to the back of a collection.",46,null],[11,"pop","","Removes the last element from a vector and returns it, or `None` if it\nis empty.",46,null],[11,"append","","Moves all the elements of `other` into `Self`, leaving `other` empty.",46,null],[11,"drain","","Create a draining iterator that removes the specified range in the vector\nand yields the removed items.",46,null],[11,"clear","","Clears the vector, removing all values.",46,null],[11,"len","","Returns the number of elements in the vector.",46,null],[11,"is_empty","","Returns `true` if the vector contains no elements.",46,null],[11,"split_off","","Splits the collection into two at the given index.",46,null],[11,"resize","","Resizes the `Vec` in-place so that `len()` is equal to `new_len`.",46,null],[11,"extend_from_slice","","Appends all elements in a slice to the `Vec`.",46,null],[11,"dedup","","Removes consecutive repeated elements in the vector.",46,null],[11,"clone","","",46,null],[11,"clone_from","","",46,null],[11,"hash","","",46,null],[11,"index","","",46,null],[11,"index_mut","","",46,null],[11,"index","","",46,null],[11,"index","","",46,null],[11,"index","","",46,null],[11,"index","","",46,null],[11,"index","","",46,null],[11,"index","","",46,null],[11,"index_mut","","",46,null],[11,"index_mut","","",46,null],[11,"index_mut","","",46,null],[11,"index_mut","","",46,null],[11,"index_mut","","",46,null],[11,"index_mut","","",46,null],[11,"deref","","",46,null],[11,"deref_mut","","",46,null],[11,"from_iter","","",46,{"inputs":[{"name":"i"}],"output":{"name":"vec"}}],[11,"into_iter","","Creates a consuming iterator, that is, one that moves each value out of\nthe vector (from start to end). The vector cannot be used after calling\nthis.",46,null],[11,"extend","","",46,null],[11,"extend","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","collections::borrow","",72,null],[11,"ne","","",72,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"eq","","",72,null],[11,"ne","","",72,null],[11,"eq","collections::vec","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"eq","","",46,null],[11,"ne","","",46,null],[11,"partial_cmp","","",46,null],[11,"cmp","","",46,null],[11,"drop","","",46,null],[11,"default","","",46,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",46,null],[11,"as_ref","","",46,null],[11,"as_mut","","",46,null],[11,"as_ref","","",46,null],[11,"as_mut","","",46,null],[11,"from","","",46,null],[11,"from","","",46,{"inputs":[{"name":"str"}],"output":{"name":"vec"}}],[11,"from","collections::borrow","",72,null],[11,"from","","",72,{"inputs":[{"name":"vec"}],"output":{"name":"cow"}}],[11,"from_iter","","",72,{"inputs":[{"name":"i"}],"output":{"name":"cow"}}],[11,"next","collections::vec","",267,null],[11,"size_hint","","",267,null],[11,"count","","",267,null],[11,"next_back","","",267,null],[11,"clone","","",267,null],[11,"drop","","",267,null],[11,"next","","",268,null],[11,"size_hint","","",268,null],[11,"next_back","","",268,null],[11,"drop","","",268,null],[11,"clone","core::raw","",269,null],[11,"clone","","",270,null],[11,"eq","core::ops","",271,null],[11,"clone","","",271,null],[11,"fmt","","",271,null],[11,"eq","","",272,null],[11,"ne","","",272,null],[11,"clone","","",272,null],[11,"fmt","","",272,null],[11,"contains","","# Examples",272,null],[11,"eq","","",273,null],[11,"ne","","",273,null],[11,"clone","","",273,null],[11,"fmt","","",273,null],[11,"contains","","# Examples",273,null],[11,"eq","","",274,null],[11,"ne","","",274,null],[11,"clone","","",274,null],[11,"fmt","","",274,null],[11,"contains","","# Examples",274,null],[11,"eq","","",275,null],[11,"ne","","",275,null],[11,"clone","","",275,null],[11,"fmt","","",275,null],[11,"from","","",275,{"inputs":[{"name":"range"}],"output":{"name":"rangeinclusive"}}],[11,"contains","","# Examples",275,null],[11,"eq","","",276,null],[11,"ne","","",276,null],[11,"clone","","",276,null],[11,"fmt","","",276,null],[11,"contains","","# Examples",276,null],[11,"fmt","ethcore_util::standard::io","",277,null],[11,"fmt","","",277,null],[11,"is","","Returns true if the boxed type is the same as `T`",277,null],[11,"downcast_ref","","Returns some reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",277,null],[11,"downcast_mut","","Returns some mutable reference to the boxed value if it is of type `T`, or\n`None` if it isn&#39;t.",277,null],[11,"is","","Forwards to the method defined on the type `Any`.",277,null],[11,"downcast_ref","","Forwards to the method defined on the type `Any`.",277,null],[11,"downcast_mut","","Forwards to the method defined on the type `Any`.",277,null],[11,"hash","core::any","",278,null],[11,"fmt","","",278,null],[11,"eq","","",278,null],[11,"ne","","",278,null],[11,"clone","","",278,null],[11,"of","","Returns the `TypeId` of the type this generic function has been\ninstantiated with",278,{"inputs":[],"output":{"name":"typeid"}}],[11,"hash","core::result","",279,null],[11,"fmt","","",279,null],[11,"cmp","","",279,null],[11,"partial_cmp","","",279,null],[11,"lt","","",279,null],[11,"le","","",279,null],[11,"gt","","",279,null],[11,"ge","","",279,null],[11,"eq","","",279,null],[11,"ne","","",279,null],[11,"clone","","",279,null],[11,"is_ok","","Returns true if the result is `Ok`",279,null],[11,"is_err","","Returns true if the result is `Err`",279,null],[11,"ok","","Converts from `Result&lt;T, E&gt;` to `Option&lt;T&gt;`",279,null],[11,"err","","Converts from `Result&lt;T, E&gt;` to `Option&lt;E&gt;`",279,null],[11,"as_ref","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;T, &amp;E&gt;`",279,null],[11,"as_mut","","Converts from `Result&lt;T, E&gt;` to `Result&lt;&amp;mut T, &amp;mut E&gt;`",279,null],[11,"map","","Maps a `Result&lt;T, E&gt;` to `Result&lt;U, E&gt;` by applying a function to a\ncontained `Ok` value, leaving an `Err` value untouched.",279,null],[11,"map_err","","Maps a `Result&lt;T, E&gt;` to `Result&lt;T, F&gt;` by applying a function to a\ncontained `Err` value, leaving an `Ok` value untouched.",279,null],[11,"iter","","Returns an iterator over the possibly contained value.",279,null],[11,"iter_mut","","Returns a mutable iterator over the possibly contained value.",279,null],[11,"and","","Returns `res` if the result is `Ok`, otherwise returns the `Err` value of `self`.",279,null],[11,"and_then","","Calls `op` if the result is `Ok`, otherwise returns the `Err` value of `self`.",279,null],[11,"or","","Returns `res` if the result is `Err`, otherwise returns the `Ok` value of `self`.",279,null],[11,"or_else","","Calls `op` if the result is `Err`, otherwise returns the `Ok` value of `self`.",279,null],[11,"unwrap_or","","Unwraps a result, yielding the content of an `Ok`.\nElse it returns `optb`.",279,null],[11,"unwrap_or_else","","Unwraps a result, yielding the content of an `Ok`.\nIf the value is an `Err` then it calls `op` with its value.",279,null],[11,"unwrap","","Unwraps a result, yielding the content of an `Ok`.",279,null],[11,"expect","","Unwraps a result, yielding the content of an `Ok`.",279,null],[11,"unwrap_err","","Unwraps a result, yielding the content of an `Err`.",279,null],[11,"into_iter","","Returns a consuming iterator over the possibly contained value.",279,null],[11,"fmt","","",280,null],[11,"next","","",280,null],[11,"size_hint","","",280,null],[11,"next_back","","",280,null],[11,"clone","","",280,null],[11,"fmt","","",281,null],[11,"next","","",281,null],[11,"size_hint","","",281,null],[11,"next_back","","",281,null],[11,"fmt","","",282,null],[11,"next","","",282,null],[11,"size_hint","","",282,null],[11,"next_back","","",282,null],[11,"from_iter","","Takes each element in the `Iterator`: if it is an `Err`, no further\nelements are taken, and the `Err` is returned. Should no `Err` occur, a\ncontainer with the values of each `Result` is returned.",279,{"inputs":[{"name":"i"}],"output":{"name":"result"}}],[11,"next","rustc_unicode::char","",283,null],[11,"next","","",284,null],[11,"clone","","",285,null],[11,"eq","","",9,null],[11,"ne","","",9,null],[11,"clone","","",9,null],[11,"fmt","","",9,null],[11,"next","","",285,null],[11,"size_hint","","",285,null],[11,"unpaired_surrogate","","Returns the unpaired surrogate which caused this error.",9,null],[11,"fmt","","",9,null],[11,"new","core::cell","Creates a new `Cell` containing the given value.",286,{"inputs":[{"name":"t"}],"output":{"name":"cell"}}],[11,"get","","Returns a copy of the contained value.",286,null],[11,"set","","Sets the contained value.",286,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",286,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",286,null],[11,"clone","","",286,null],[11,"default","","",286,{"inputs":[],"output":{"name":"cell"}}],[11,"eq","","",286,null],[11,"partial_cmp","","",286,null],[11,"lt","","",286,null],[11,"le","","",286,null],[11,"gt","","",286,null],[11,"ge","","",286,null],[11,"cmp","","",286,null],[11,"fmt","","",287,null],[11,"eq","","",287,null],[11,"clone","","",287,null],[11,"new","","Creates a new `RefCell` containing `value`.",288,{"inputs":[{"name":"t"}],"output":{"name":"refcell"}}],[11,"into_inner","","Consumes the `RefCell`, returning the wrapped value.",288,null],[11,"borrow_state","","Query the current state of this `RefCell`",288,null],[11,"borrow","","Immutably borrows the wrapped value.",288,null],[11,"borrow_mut","","Mutably borrows the wrapped value.",288,null],[11,"as_unsafe_cell","","Returns a reference to the underlying `UnsafeCell`.",288,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",288,null],[11,"clone","","",288,null],[11,"default","","",288,{"inputs":[],"output":{"name":"refcell"}}],[11,"eq","","",288,null],[11,"partial_cmp","","",288,null],[11,"lt","","",288,null],[11,"le","","",288,null],[11,"gt","","",288,null],[11,"ge","","",288,null],[11,"cmp","","",288,null],[11,"deref","","",289,null],[11,"clone","","Copies a `Ref`.",289,{"inputs":[{"name":"ref"}],"output":{"name":"ref"}}],[11,"map","","Make a new `Ref` for a component of the borrowed data.",289,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"ref"}}],[11,"filter_map","","Make a new `Ref` for an optional component of the borrowed data, e.g. an\nenum variant.",289,{"inputs":[{"name":"ref"},{"name":"f"}],"output":{"name":"option"}}],[11,"map","","Make a new `RefMut` for a component of the borrowed data, e.g. an enum\nvariant.",290,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"refmut"}}],[11,"filter_map","","Make a new `RefMut` for an optional component of the borrowed data, e.g.\nan enum variant.",290,{"inputs":[{"name":"refmut"},{"name":"f"}],"output":{"name":"option"}}],[11,"deref","","",290,null],[11,"deref_mut","","",290,null],[11,"new","","Constructs a new instance of `UnsafeCell` which will wrap the specified\nvalue.",291,{"inputs":[{"name":"t"}],"output":{"name":"unsafecell"}}],[11,"into_inner","","Unwraps the value.",291,null],[11,"get","","Gets a mutable pointer to the wrapped value.",291,null],[11,"default","","",291,{"inputs":[],"output":{"name":"unsafecell"}}],[11,"fmt","core::iter::range","",292,null],[11,"clone","","",292,null],[11,"step_by","core::ops","Creates an iterator starting at the same point, but stepping by\nthe given amount at each iteration.",273,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",272,null],[11,"step_by","","Creates an iterator with the same range, but stepping by the\ngiven amount at each iteration.",275,null],[11,"next","core::iter::range","",292,null],[11,"size_hint","","",292,null],[11,"next","","",292,null],[11,"size_hint","","",292,null],[11,"next","","",292,null],[11,"size_hint","","",292,null],[11,"next","core::ops","",272,null],[11,"size_hint","","",272,null],[11,"next_back","","",272,null],[11,"next","","",273,null],[11,"next","","",275,null],[11,"size_hint","","",275,null],[11,"next_back","","",275,null],[11,"fmt","core::iter::sources","",293,null],[11,"clone","","",293,null],[11,"next","","",293,null],[11,"size_hint","","",293,null],[11,"next_back","","",293,null],[11,"fmt","","",294,null],[11,"next","","",294,null],[11,"size_hint","","",294,null],[11,"next_back","","",294,null],[11,"len","","",294,null],[11,"clone","","",294,null],[11,"default","","",294,{"inputs":[],"output":{"name":"empty"}}],[11,"fmt","","",295,null],[11,"clone","","",295,null],[11,"next","","",295,null],[11,"size_hint","","",295,null],[11,"next_back","","",295,null],[11,"len","","",295,null],[11,"fmt","core::iter","",296,null],[11,"clone","","",296,null],[11,"next","","",296,null],[11,"size_hint","","",296,null],[11,"next_back","","",296,null],[11,"fmt","","",297,null],[11,"clone","","",297,null],[11,"next","","",297,null],[11,"size_hint","","",297,null],[11,"next_back","","",297,null],[11,"fmt","","",298,null],[11,"clone","","",298,null],[11,"next","","",298,null],[11,"size_hint","","",298,null],[11,"fmt","","",299,null],[11,"clone","","",299,null],[11,"next","","",299,null],[11,"count","","",299,null],[11,"nth","","",299,null],[11,"find","","",299,null],[11,"last","","",299,null],[11,"size_hint","","",299,null],[11,"next_back","","",299,null],[11,"fmt","","",300,null],[11,"clone","","",300,null],[11,"next","","",300,null],[11,"size_hint","","",300,null],[11,"next_back","","",300,null],[11,"clone","","",301,null],[11,"fmt","","",301,null],[11,"next","","",301,null],[11,"size_hint","","",301,null],[11,"next_back","","",301,null],[11,"clone","","",302,null],[11,"fmt","","",302,null],[11,"next","","",302,null],[11,"size_hint","","",302,null],[11,"next_back","","",302,null],[11,"clone","","",303,null],[11,"fmt","","",303,null],[11,"next","","",303,null],[11,"size_hint","","",303,null],[11,"next_back","","",303,null],[11,"fmt","","",304,null],[11,"clone","","",304,null],[11,"next","","# Overflow Behavior",304,null],[11,"size_hint","","",304,null],[11,"nth","","",304,null],[11,"count","","",304,null],[11,"next_back","","",304,null],[11,"fmt","","",305,null],[11,"clone","","",305,null],[11,"next","","",305,null],[11,"count","","",305,null],[11,"nth","","",305,null],[11,"last","","",305,null],[11,"size_hint","","",305,null],[11,"peek","","Returns a reference to the next() value without advancing the iterator.",305,null],[11,"is_empty","","Checks if the iterator has finished iterating.",305,null],[11,"clone","","",306,null],[11,"fmt","","",306,null],[11,"next","","",306,null],[11,"size_hint","","",306,null],[11,"clone","","",307,null],[11,"fmt","","",307,null],[11,"next","","",307,null],[11,"size_hint","","",307,null],[11,"fmt","","",308,null],[11,"clone","","",308,null],[11,"next","","",308,null],[11,"nth","","",308,null],[11,"count","","",308,null],[11,"last","","",308,null],[11,"size_hint","","",308,null],[11,"next_back","","",308,null],[11,"fmt","","",309,null],[11,"clone","","",309,null],[11,"next","","",309,null],[11,"nth","","",309,null],[11,"size_hint","","",309,null],[11,"clone","","",310,null],[11,"fmt","","",310,null],[11,"next","","",310,null],[11,"size_hint","","",310,null],[11,"clone","","",311,null],[11,"fmt","","",311,null],[11,"next","","",311,null],[11,"size_hint","","",311,null],[11,"next_back","","",311,null],[11,"fmt","","",312,null],[11,"clone","","",312,null],[11,"next","","",312,null],[11,"nth","","",312,null],[11,"last","","",312,null],[11,"count","","",312,null],[11,"size_hint","","",312,null],[11,"next_back","","",312,null],[11,"clone","","",313,null],[11,"fmt","","",313,null],[11,"next","","",313,null],[11,"size_hint","","",313,null],[11,"next_back","","",313,null],[11,"hash","core::marker","",314,null],[11,"eq","","",314,null],[11,"partial_cmp","","",314,null],[11,"cmp","","",314,null],[11,"clone","","",314,null],[11,"default","","",314,{"inputs":[],"output":{"name":"phantomdata"}}],[11,"clone","collections::str","",315,null],[11,"next","","",315,null],[11,"size_hint","","",315,null],[11,"borrow","collections::string","",73,null],[11,"fmt","core::str::pattern","",316,null],[11,"eq","","",316,null],[11,"ne","","",316,null],[11,"clone","","",316,null],[11,"fmt","","",317,null],[11,"clone","","",317,null],[11,"haystack","","",317,null],[11,"next","","",317,null],[11,"next_match","","",317,null],[11,"next_reject","","",317,null],[11,"next_back","","",317,null],[11,"next_match_back","","",317,null],[11,"next_reject_back","","",317,null],[11,"fmt","","",318,null],[11,"clone","","",318,null],[11,"haystack","","",318,null],[11,"next","","",318,null],[11,"next_match","","",318,null],[11,"next_reject","","",318,null],[11,"next_back","","",318,null],[11,"next_match_back","","",318,null],[11,"next_reject_back","","",318,null],[11,"clone","","",319,null],[11,"fmt","","",319,null],[11,"haystack","","",319,null],[11,"next","","",319,null],[11,"next_match","","",319,null],[11,"next_reject","","",319,null],[11,"next_back","","",319,null],[11,"next_match_back","","",319,null],[11,"next_reject_back","","",319,null],[11,"fmt","","",320,null],[11,"clone","","",320,null],[11,"haystack","","",320,null],[11,"next","","",320,null],[11,"next_match","","",320,null],[11,"next_back","","",320,null],[11,"next_match_back","","",320,null],[11,"hash","core::cmp","",321,null],[11,"fmt","","",321,null],[11,"eq","","",321,null],[11,"clone","","",321,null],[11,"reverse","","Reverse the `Ordering`.",321,null],[11,"cmp","","",321,null],[11,"partial_cmp","","",321,null],[8,"Read","ethcore_util::standard::io::prelude","The `Read` trait allows for reading bytes from a source.",null,null],[10,"read","","Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read.",322,null],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into `buf`.",322,null],[11,"read_to_string","","Read all bytes until EOF in this source, placing them into `buf`.",322,null],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",322,null],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Read`.",322,null],[11,"bytes","","Transforms this `Read` instance to an `Iterator` over its bytes.",322,null],[11,"chars","","Transforms this `Read` instance to an `Iterator` over `char`s.",322,null],[11,"chain","","Creates an adaptor which will chain this stream with another.",322,null],[11,"take","","Creates an adaptor which will read at most `limit` bytes from it.",322,null],[8,"Seek","","The `Seek` trait provides a cursor which can be moved within a stream of\nbytes.",null,null],[10,"seek","","Seek to an offset, in bytes, in a stream.",323,null],[8,"Write","","A trait for objects which are byte-oriented sinks.",null,null],[10,"write","","Write a buffer into this object, returning how many bytes were written.",324,null],[10,"flush","","Flush this output stream, ensuring that all intermediately buffered\ncontents reach their destination.",324,null],[11,"write_all","","Attempts to write an entire buffer into this write.",324,null],[11,"write_fmt","","Writes a formatted string into this writer, returning any error\nencountered.",324,null],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Write`.",324,null],[8,"BufRead","","A `BufRead` is a type of `Read`er which has an internal buffer, allowing it\nto perform extra ways of reading.",null,null],[10,"fill_buf","","Fills the internal buffer of this object, returning the buffer contents.",325,null],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from the buffer,\nso they should no longer be returned in calls to `read`.",325,null],[11,"read_until","","Read all bytes into `buf` until the delimiter `byte` is reached.",325,null],[11,"read_line","","Read all bytes until a newline (the 0xA byte) is reached, and append\nthem to the provided buffer.",325,null],[11,"split","","Returns an iterator over the contents of this reader split on the byte\n`byte`.",325,null],[11,"lines","","Returns an iterator over the lines of this reader.",325,null],[8,"Read","ethcore_util::standard::io","The `Read` trait allows for reading bytes from a source.",null,null],[10,"read","","Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read.",322,null],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into `buf`.",322,null],[11,"read_to_string","","Read all bytes until EOF in this source, placing them into `buf`.",322,null],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",322,null],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Read`.",322,null],[11,"bytes","","Transforms this `Read` instance to an `Iterator` over its bytes.",322,null],[11,"chars","","Transforms this `Read` instance to an `Iterator` over `char`s.",322,null],[11,"chain","","Creates an adaptor which will chain this stream with another.",322,null],[11,"take","","Creates an adaptor which will read at most `limit` bytes from it.",322,null],[8,"Write","","A trait for objects which are byte-oriented sinks.",null,null],[10,"write","","Write a buffer into this object, returning how many bytes were written.",324,null],[10,"flush","","Flush this output stream, ensuring that all intermediately buffered\ncontents reach their destination.",324,null],[11,"write_all","","Attempts to write an entire buffer into this write.",324,null],[11,"write_fmt","","Writes a formatted string into this writer, returning any error\nencountered.",324,null],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Write`.",324,null],[8,"Seek","","The `Seek` trait provides a cursor which can be moved within a stream of\nbytes.",null,null],[10,"seek","","Seek to an offset, in bytes, in a stream.",323,null],[4,"SeekFrom","","Enumeration of possible methods to seek within an I/O object.",null,null],[13,"Start","","Set the offset to the provided number of bytes.",97,null],[13,"End","","Set the offset to the size of this object plus the specified number of\nbytes.",97,null],[13,"Current","","Set the offset to the current position plus the specified number of\nbytes.",97,null],[8,"BufRead","","A `BufRead` is a type of `Read`er which has an internal buffer, allowing it\nto perform extra ways of reading.",null,null],[10,"fill_buf","","Fills the internal buffer of this object, returning the buffer contents.",325,null],[10,"consume","","Tells this buffer that `amt` bytes have been consumed from the buffer,\nso they should no longer be returned in calls to `read`.",325,null],[11,"read_until","","Read all bytes into `buf` until the delimiter `byte` is reached.",325,null],[11,"read_line","","Read all bytes until a newline (the 0xA byte) is reached, and append\nthem to the provided buffer.",325,null],[11,"split","","Returns an iterator over the contents of this reader split on the byte\n`byte`.",325,null],[11,"lines","","Returns an iterator over the lines of this reader.",325,null],[3,"Chain","","Adaptor to chain together two readers.",null,null],[3,"Take","","Reader adaptor which limits the bytes read from an underlying reader.",null,null],[3,"Bytes","","An iterator over `u8` values of a reader.",null,null],[3,"Chars","","An iterator over the `char`s of a reader.",null,null],[4,"CharsError","","An enumeration of possible errors that can be generated from the `Chars`\nadapter.",null,null],[13,"NotUtf8","","Variant representing that the underlying stream was read successfully\nbut it did not contain valid utf8 data.",101,null],[13,"Other","","Variant representing that an I/O error occurred.",101,null],[3,"Split","","An iterator over the contents of an instance of `BufRead` split on a\nparticular byte.",null,null],[3,"Lines","","An iterator over the lines of an instance of `BufRead`.",null,null],[5,"stderr","","Constructs a new handle to the standard error of the current process.",null,{"inputs":[],"output":{"name":"stderr"}}],[3,"LineWriter","","Wraps a writer and buffers output to it, flushing whenever a newline\n(`0x0a`, `&#39;\\n&#39;`) is detected.",null,null],[5,"empty","","Constructs a new handle to an empty reader.",null,{"inputs":[],"output":{"name":"empty"}}],[3,"Empty","","A reader which is always at EOF.",null,null],[5,"stdin","","Constructs a new handle to the standard input of the current process.",null,{"inputs":[],"output":{"name":"stdin"}}],[3,"Stdin","","A handle to the standard input stream of a process.",null,null],[6,"Result","","",null,null],[5,"repeat","","Creates an instance of a reader that infinitely repeats one byte.",null,{"inputs":[{"name":"u8"}],"output":{"name":"repeat"}}],[4,"ErrorKind","","A list specifying general categories of I/O error.",null,null],[13,"NotFound","","An entity was not found, often a file.",87,null],[13,"PermissionDenied","","The operation lacked the necessary privileges to complete.",87,null],[13,"ConnectionRefused","","The connection was refused by the remote server.",87,null],[13,"ConnectionReset","","The connection was reset by the remote server.",87,null],[13,"ConnectionAborted","","The connection was aborted (terminated) by the remote server.",87,null],[13,"NotConnected","","The network operation failed because it was not connected yet.",87,null],[13,"AddrInUse","","A socket address could not be bound because the address is already in\nuse elsewhere.",87,null],[13,"AddrNotAvailable","","A nonexistent interface was requested or the requested address was not\nlocal.",87,null],[13,"BrokenPipe","","The operation failed because a pipe was closed.",87,null],[13,"AlreadyExists","","An entity already exists, often a file.",87,null],[13,"WouldBlock","","The operation needs to block to complete, but the blocking operation was\nrequested to not occur.",87,null],[13,"InvalidInput","","A parameter was incorrect.",87,null],[13,"InvalidData","","Data not valid for the operation were encountered.",87,null],[13,"TimedOut","","The I/O operation&#39;s timeout expired, causing it to be canceled.",87,null],[13,"WriteZero","","An error returned when an operation could not be completed because a\ncall to `write` returned `Ok(0)`.",87,null],[13,"Interrupted","","This operation was interrupted.",87,null],[13,"Other","","Any I/O error not part of this list.",87,null],[13,"UnexpectedEof","","An error returned when an operation could not be completed because an\n&quot;end of file&quot; was reached prematurely.",87,null],[3,"StdoutLock","","A locked reference to the `Stdout` handle.",null,null],[3,"Stderr","","A handle to the standard error stream of a process.",null,null],[5,"stdout","","Constructs a new handle to the standard output of the current process.",null,{"inputs":[],"output":{"name":"stdout"}}],[5,"copy","","Copies the entire contents of a reader into a writer.",null,{"inputs":[{"name":"r"},{"name":"w"}],"output":{"name":"result"}}],[3,"IntoInnerError","","An error returned by `into_inner` which combines an error that\nhappened while writing out the buffer, and the buffered writer object\nwhich may be used to recover from the condition.",null,null],[3,"BufWriter","","Wraps a writer and buffers its output.",null,null],[3,"Stdout","","A handle to the global standard output stream of the current process.",null,null],[3,"StderrLock","","A locked reference to the `Stderr` handle.",null,null],[3,"Error","","The error type for I/O operations of the `Read`, `Write`, `Seek`, and\nassociated traits.",null,null],[3,"Repeat","","A reader which yields one byte over and over and over and over and over and...",null,null],[3,"StdinLock","","A locked reference to the `Stdin` handle.",null,null],[3,"Sink","","A writer which will move data into the void.",null,null],[3,"BufReader","","The `BufReader` struct adds buffering to any reader.",null,null],[5,"sink","","Creates an instance of a writer which will successfully consume all data.",null,{"inputs":[],"output":{"name":"sink"}}],[3,"Cursor","","A `Cursor` wraps another type and provides it with a\n[`Seek`](trait.Seek.html) implementation.",null,null],[0,"fs","ethcore_util::standard","Filesystem manipulation operations.",null,null],[3,"File","ethcore_util::standard::fs","A reference to an open file on the filesystem.",null,null],[3,"Metadata","","Metadata information about a file.",null,null],[3,"ReadDir","","Iterator over the entries in a directory.",null,null],[3,"DirEntry","","Entries returned by the `ReadDir` iterator.",null,null],[3,"OpenOptions","","Options and flags which can be used to configure how a file is opened.",null,null],[3,"Permissions","","Representation of the various permissions on a file.",null,null],[3,"FileType","","An structure representing a type of file with accessors for each file type.",null,null],[3,"DirBuilder","","A builder used to create directories in various manners.",null,null],[5,"remove_file","","Removes a file from the filesystem.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"metadata","","Given a path, query the file system to get information about a file,\ndirectory, etc.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"symlink_metadata","","Query the metadata about a file without following symlinks.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"rename","","Rename a file or directory to a new name, replacing the original file if\n`to` already exists.",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[5,"copy","","Copies the contents of one file to another. This function will also\ncopy the permission bits of the original file to the destination file.",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[5,"hard_link","","Creates a new hard link on the filesystem.",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[5,"soft_link","","Creates a new symbolic link on the filesystem.",null,{"inputs":[{"name":"p"},{"name":"q"}],"output":{"name":"result"}}],[5,"read_link","","Reads a symbolic link, returning the file that the link points to.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"canonicalize","","Returns the canonical form of a path with all intermediate components\nnormalized and symbolic links resolved.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"create_dir","","Creates a new, empty directory at the provided path",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"create_dir_all","","Recursively create a directory and all of its parent components if they\nare missing.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"remove_dir","","Removes an existing, empty directory.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"remove_dir_all","","Removes a directory at this path, after removing all its contents. Use\ncarefully!",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"read_dir","","Returns an iterator over the entries within a directory.",null,{"inputs":[{"name":"p"}],"output":{"name":"result"}}],[5,"set_permissions","","Changes the permissions found on a file or a directory.",null,{"inputs":[{"name":"p"},{"name":"permissions"}],"output":{"name":"result"}}],[0,"str","ethcore_util::standard","Unicode string slices.",null,null],[11,"drop","collections::btree::map","",326,null],[11,"clone","","",326,null],[11,"new","","Makes a new empty BTreeMap with a reasonable choice for B.",326,{"inputs":[],"output":{"name":"btreemap"}}],[11,"clear","","Clears the map, removing all values.",326,null],[11,"get","","Returns a reference to the value corresponding to the key.",326,null],[11,"contains_key","","Returns true if the map contains a value for the specified key.",326,null],[11,"get_mut","","Returns a mutable reference to the value corresponding to the key.",326,null],[11,"insert","","Inserts a key-value pair into the map.",326,null],[11,"remove","","Removes a key from the map, returning the value at the key if the key\nwas previously in the map.",326,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",326,null],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",326,null],[11,"range_mut","","Constructs a mutable double-ended iterator over a sub-range of elements in the map, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",326,null],[11,"entry","","Gets the given key&#39;s corresponding entry in the map for in-place manipulation.",326,null],[11,"next","","",327,null],[11,"size_hint","","",327,null],[11,"next_back","","",327,null],[11,"len","","",327,null],[11,"clone","","",327,null],[11,"next","","",328,null],[11,"size_hint","","",328,null],[11,"next_back","","",328,null],[11,"len","","",328,null],[11,"into_iter","","",326,null],[11,"drop","","",329,null],[11,"next","","",329,null],[11,"size_hint","","",329,null],[11,"next_back","","",329,null],[11,"len","","",329,null],[11,"next","","",330,null],[11,"size_hint","","",330,null],[11,"next_back","","",330,null],[11,"len","","",330,null],[11,"clone","","",330,null],[11,"next","","",331,null],[11,"size_hint","","",331,null],[11,"next_back","","",331,null],[11,"len","","",331,null],[11,"clone","","",331,null],[11,"next","","",332,null],[11,"next","","",333,null],[11,"size_hint","","",333,null],[11,"next_back","","",333,null],[11,"len","","",333,null],[11,"next_back","","",332,null],[11,"clone","","",332,null],[11,"next","","",334,null],[11,"next_back","","",334,null],[11,"from_iter","","",326,{"inputs":[{"name":"t"}],"output":{"name":"btreemap"}}],[11,"extend","","",326,null],[11,"extend","","",326,null],[11,"hash","","",326,null],[11,"default","","",326,{"inputs":[],"output":{"name":"btreemap"}}],[11,"eq","","",326,null],[11,"partial_cmp","","",326,null],[11,"cmp","","",326,null],[11,"fmt","","",326,null],[11,"index","","",326,null],[11,"iter","","Gets an iterator over the entries of the map, sorted by key.",326,null],[11,"iter_mut","","Gets a mutable iterator over the entries of the map, sorted by key.",326,null],[11,"keys","","Gets an iterator over the keys of the map, in sorted order.",326,null],[11,"values","","Gets an iterator over the values of the map, in order by key.",326,null],[11,"values_mut","","Gets a mutable iterator over the values of the map, in order by key.",326,null],[11,"len","","Returns the number of elements in the map.",326,null],[11,"is_empty","","Returns true if the map contains no elements.",326,null],[11,"or_insert","","Ensures a value is in the entry by inserting the default if empty, and returns\na mutable reference to the value in the entry.",335,null],[11,"or_insert_with","","Ensures a value is in the entry by inserting the result of the default function if empty,\nand returns a mutable reference to the value in the entry.",335,null],[11,"key","","Returns a reference to this entry&#39;s key.",335,null],[11,"key","","Gets a reference to the key that would be used when inserting a value\nthrough the VacantEntry.",336,null],[11,"insert","","Sets the value of the entry with the VacantEntry&#39;s key,\nand returns a mutable reference to it.",336,null],[11,"key","","Gets a reference to the key in the entry.",337,null],[11,"get","","Gets a reference to the value in the entry.",337,null],[11,"get_mut","","Gets a mutable reference to the value in the entry.",337,null],[11,"into_mut","","Converts the entry into a mutable reference to its value.",337,null],[11,"insert","","Sets the value of the entry with the OccupiedEntry&#39;s key,\nand returns the entry&#39;s old value.",337,null],[11,"remove","","Takes the value of the entry out of the map, and returns it.",337,null],[11,"partial_cmp","collections::btree::set","",338,null],[11,"lt","","",338,null],[11,"le","","",338,null],[11,"gt","","",338,null],[11,"ge","","",338,null],[11,"cmp","","",338,null],[11,"eq","","",338,null],[11,"ne","","",338,null],[11,"hash","","",338,null],[11,"clone","","",338,null],[11,"new","","Makes a new BTreeSet with a reasonable choice of B.",338,{"inputs":[],"output":{"name":"btreeset"}}],[11,"iter","","Gets an iterator over the BTreeSet&#39;s contents.",338,null],[11,"range","","Constructs a double-ended iterator over a sub-range of elements in the set, starting\nat min, and ending at max. If min is `Unbounded`, then it will be treated as &quot;negative\ninfinity&quot;, and if max is `Unbounded`, then it will be treated as &quot;positive infinity&quot;.\nThus range(Unbounded, Unbounded) will yield the whole collection.",338,null],[11,"difference","","Visits the values representing the difference, in ascending order.",338,null],[11,"symmetric_difference","","Visits the values representing the symmetric difference, in ascending order.",338,null],[11,"intersection","","Visits the values representing the intersection, in ascending order.",338,null],[11,"union","","Visits the values representing the union, in ascending order.",338,null],[11,"len","","Returns the number of elements in the set.",338,null],[11,"is_empty","","Returns true if the set contains no elements.",338,null],[11,"clear","","Clears the set, removing all values.",338,null],[11,"contains","","Returns `true` if the set contains a value.",338,null],[11,"get","","Returns a reference to the value in the set, if any, that is equal to the given value.",338,null],[11,"is_disjoint","","Returns `true` if the set has no elements in common with `other`.\nThis is equivalent to checking for an empty intersection.",338,null],[11,"is_subset","","Returns `true` if the set is a subset of another.",338,null],[11,"is_superset","","Returns `true` if the set is a superset of another.",338,null],[11,"insert","","Adds a value to the set.",338,null],[11,"replace","","Adds a value to the set, replacing the existing value, if any, that is equal to the given\none. Returns the replaced value.",338,null],[11,"remove","","Removes a value from the set. Returns `true` if the value was\npresent in the set.",338,null],[11,"take","","Removes and returns the value in the set, if any, that is equal to the given one.",338,null],[11,"append","","Moves all elements from `other` into `Self`, leaving `other` empty.",338,null],[11,"from_iter","","",338,{"inputs":[{"name":"i"}],"output":{"name":"btreeset"}}],[11,"into_iter","","Gets an iterator for moving out the BtreeSet&#39;s contents.",338,null],[11,"extend","","",338,null],[11,"extend","","",338,null],[11,"default","","",338,{"inputs":[],"output":{"name":"btreeset"}}],[11,"fmt","","",338,null],[11,"clone","","",339,null],[11,"next","","",339,null],[11,"size_hint","","",339,null],[11,"next_back","","",339,null],[11,"len","","",339,null],[11,"next","","",340,null],[11,"size_hint","","",340,null],[11,"next_back","","",340,null],[11,"len","","",340,null],[11,"clone","","",341,null],[11,"next","","",341,null],[11,"next_back","","",341,null],[11,"clone","","",342,null],[11,"next","","",342,null],[11,"size_hint","","",342,null],[11,"clone","","",343,null],[11,"next","","",343,null],[11,"size_hint","","",343,null],[11,"clone","","",344,null],[11,"next","","",344,null],[11,"size_hint","","",344,null],[11,"clone","","",345,null],[11,"next","","",345,null],[11,"size_hint","","",345,null],[11,"hash","collections::enum_set","",346,null],[11,"cmp","","",346,null],[11,"partial_cmp","","",346,null],[11,"lt","","",346,null],[11,"le","","",346,null],[11,"gt","","",346,null],[11,"ge","","",346,null],[11,"eq","","",346,null],[11,"ne","","",346,null],[11,"clone","","",346,null],[11,"fmt","","",346,null],[11,"new","","Returns an empty `EnumSet`.",346,{"inputs":[],"output":{"name":"enumset"}}],[11,"len","","Returns the number of elements in the given `EnumSet`.",346,null],[11,"is_empty","","Returns true if the `EnumSet` is empty.",346,null],[11,"clear","","",346,null],[11,"is_disjoint","","Returns `false` if the `EnumSet` contains any enum of the given `EnumSet`.",346,null],[11,"is_superset","","Returns `true` if a given `EnumSet` is included in this `EnumSet`.",346,null],[11,"is_subset","","Returns `true` if this `EnumSet` is included in the given `EnumSet`.",346,null],[11,"union","","Returns the union of both `EnumSets`.",346,null],[11,"intersection","","Returns the intersection of both `EnumSets`.",346,null],[11,"insert","","Adds an enum to the `EnumSet`, and returns `true` if it wasn&#39;t there before",346,null],[11,"remove","","Removes an enum from the EnumSet",346,null],[11,"contains","","Returns `true` if an `EnumSet` contains a given enum.",346,null],[11,"iter","","Returns an iterator over an `EnumSet`.",346,null],[11,"sub","","",346,null],[11,"bitor","","",346,null],[11,"bitand","","",346,null],[11,"bitxor","","",346,null],[11,"clone","","",347,null],[11,"next","","",347,null],[11,"size_hint","","",347,null],[11,"from_iter","","",346,{"inputs":[{"name":"i"}],"output":{"name":"enumset"}}],[11,"extend","","",346,null],[11,"extend","","",346,null],[11,"start","core::ops","",273,null],[11,"end","","",274,null],[11,"start","","",272,null],[11,"end","","",272,null],[11,"eq","collections","",348,null],[11,"ne","","",348,null],[11,"hash","","",348,null],[11,"fmt","","",348,null],[11,"clone","","",348,null],[6,"Utf16Units","ethcore_util::standard::str","",null,null],[3,"EncodeUtf16","","External iterator for a string&#39;s UTF-16 code units.",null,null],[11,"hash","core::num","",349,null],[11,"default","","",349,{"inputs":[],"output":{"name":"wrapping"}}],[11,"clone","","",349,null],[11,"cmp","","",349,null],[11,"partial_cmp","","",349,null],[11,"lt","","",349,null],[11,"le","","",349,null],[11,"gt","","",349,null],[11,"ge","","",349,null],[11,"eq","","",349,null],[11,"ne","","",349,null],[11,"fmt","","",349,null],[11,"fmt","","",349,null],[11,"shl","","",349,null],[11,"shl_assign","","",349,null],[11,"shr","","",349,null],[11,"shr_assign","","",349,null],[11,"shl","","",349,null],[11,"shl_assign","","",349,null],[11,"shr","","",349,null],[11,"shr_assign","","",349,null],[11,"shl","","",349,null],[11,"shl_assign","","",349,null],[11,"shr","","",349,null],[11,"shr_assign","","",349,null],[11,"shl","","",349,null],[11,"shl_assign","","",349,null],[11,"shr","","",349,null],[11,"shr_assign","","",349,null],[11,"shl","","",349,null],[11,"shl_assign","","",349,null],[11,"shr","","",349,null],[11,"shr_assign","","",349,null],[11,"shl","","",349,null],[11,"shl_assign","","",349,null],[11,"shr","","",349,null],[11,"shr_assign","","",349,null],[11,"shl","","",349,null],[11,"shl_assign","","",349,null],[11,"shr","","",349,null],[11,"shr_assign","","",349,null],[11,"shl","","",349,null],[11,"shl_assign","","",349,null],[11,"shr","","",349,null],[11,"shr_assign","","",349,null],[11,"shl","","",349,null],[11,"shl_assign","","",349,null],[11,"shr","","",349,null],[11,"shr_assign","","",349,null],[11,"shl","","",349,null],[11,"shl_assign","","",349,null],[11,"shr","","",349,null],[11,"shr_assign","","",349,null],[11,"add","","",349,null],[11,"add_assign","","",349,null],[11,"sub","","",349,null],[11,"sub_assign","","",349,null],[11,"mul","","",349,null],[11,"mul_assign","","",349,null],[11,"div","","",349,null],[11,"div_assign","","",349,null],[11,"rem","","",349,null],[11,"rem_assign","","",349,null],[11,"not","","",349,null],[11,"bitxor","","",349,null],[11,"bitxor_assign","","",349,null],[11,"bitor","","",349,null],[11,"bitor_assign","","",349,null],[11,"bitand","","",349,null],[11,"bitand_assign","","",349,null],[11,"neg","","",349,null],[11,"add","","",349,null],[11,"add_assign","","",349,null],[11,"sub","","",349,null],[11,"sub_assign","","",349,null],[11,"mul","","",349,null],[11,"mul_assign","","",349,null],[11,"div","","",349,null],[11,"div_assign","","",349,null],[11,"rem","","",349,null],[11,"rem_assign","","",349,null],[11,"not","","",349,null],[11,"bitxor","","",349,null],[11,"bitxor_assign","","",349,null],[11,"bitor","","",349,null],[11,"bitor_assign","","",349,null],[11,"bitand","","",349,null],[11,"bitand_assign","","",349,null],[11,"neg","","",349,null],[11,"add","","",349,null],[11,"add_assign","","",349,null],[11,"sub","","",349,null],[11,"sub_assign","","",349,null],[11,"mul","","",349,null],[11,"mul_assign","","",349,null],[11,"div","","",349,null],[11,"div_assign","","",349,null],[11,"rem","","",349,null],[11,"rem_assign","","",349,null],[11,"not","","",349,null],[11,"bitxor","","",349,null],[11,"bitxor_assign","","",349,null],[11,"bitor","","",349,null],[11,"bitor_assign","","",349,null],[11,"bitand","","",349,null],[11,"bitand_assign","","",349,null],[11,"neg","","",349,null],[11,"add","","",349,null],[11,"add_assign","","",349,null],[11,"sub","","",349,null],[11,"sub_assign","","",349,null],[11,"mul","","",349,null],[11,"mul_assign","","",349,null],[11,"div","","",349,null],[11,"div_assign","","",349,null],[11,"rem","","",349,null],[11,"rem_assign","","",349,null],[11,"not","","",349,null],[11,"bitxor","","",349,null],[11,"bitxor_assign","","",349,null],[11,"bitor","","",349,null],[11,"bitor_assign","","",349,null],[11,"bitand","","",349,null],[11,"bitand_assign","","",349,null],[11,"neg","","",349,null],[11,"add","","",349,null],[11,"add_assign","","",349,null],[11,"sub","","",349,null],[11,"sub_assign","","",349,null],[11,"mul","","",349,null],[11,"mul_assign","","",349,null],[11,"div","","",349,null],[11,"div_assign","","",349,null],[11,"rem","","",349,null],[11,"rem_assign","","",349,null],[11,"not","","",349,null],[11,"bitxor","","",349,null],[11,"bitxor_assign","","",349,null],[11,"bitor","","",349,null],[11,"bitor_assign","","",349,null],[11,"bitand","","",349,null],[11,"bitand_assign","","",349,null],[11,"neg","","",349,null],[11,"add","","",349,null],[11,"add_assign","","",349,null],[11,"sub","","",349,null],[11,"sub_assign","","",349,null],[11,"mul","","",349,null],[11,"mul_assign","","",349,null],[11,"div","","",349,null],[11,"div_assign","","",349,null],[11,"rem","","",349,null],[11,"rem_assign","","",349,null],[11,"not","","",349,null],[11,"bitxor","","",349,null],[11,"bitxor_assign","","",349,null],[11,"bitor","","",349,null],[11,"bitor_assign","","",349,null],[11,"bitand","","",349,null],[11,"bitand_assign","","",349,null],[11,"neg","","",349,null],[11,"add","","",349,null],[11,"add_assign","","",349,null],[11,"sub","","",349,null],[11,"sub_assign","","",349,null],[11,"mul","","",349,null],[11,"mul_assign","","",349,null],[11,"div","","",349,null],[11,"div_assign","","",349,null],[11,"rem","","",349,null],[11,"rem_assign","","",349,null],[11,"not","","",349,null],[11,"bitxor","","",349,null],[11,"bitxor_assign","","",349,null],[11,"bitor","","",349,null],[11,"bitor_assign","","",349,null],[11,"bitand","","",349,null],[11,"bitand_assign","","",349,null],[11,"neg","","",349,null],[11,"add","","",349,null],[11,"add_assign","","",349,null],[11,"sub","","",349,null],[11,"sub_assign","","",349,null],[11,"mul","","",349,null],[11,"mul_assign","","",349,null],[11,"div","","",349,null],[11,"div_assign","","",349,null],[11,"rem","","",349,null],[11,"rem_assign","","",349,null],[11,"not","","",349,null],[11,"bitxor","","",349,null],[11,"bitxor_assign","","",349,null],[11,"bitor","","",349,null],[11,"bitor_assign","","",349,null],[11,"bitand","","",349,null],[11,"bitand_assign","","",349,null],[11,"neg","","",349,null],[11,"add","","",349,null],[11,"add_assign","","",349,null],[11,"sub","","",349,null],[11,"sub_assign","","",349,null],[11,"mul","","",349,null],[11,"mul_assign","","",349,null],[11,"div","","",349,null],[11,"div_assign","","",349,null],[11,"rem","","",349,null],[11,"rem_assign","","",349,null],[11,"not","","",349,null],[11,"bitxor","","",349,null],[11,"bitxor_assign","","",349,null],[11,"bitor","","",349,null],[11,"bitor_assign","","",349,null],[11,"bitand","","",349,null],[11,"bitand_assign","","",349,null],[11,"neg","","",349,null],[11,"add","","",349,null],[11,"add_assign","","",349,null],[11,"sub","","",349,null],[11,"sub_assign","","",349,null],[11,"mul","","",349,null],[11,"mul_assign","","",349,null],[11,"div","","",349,null],[11,"div_assign","","",349,null],[11,"rem","","",349,null],[11,"rem_assign","","",349,null],[11,"not","","",349,null],[11,"bitxor","","",349,null],[11,"bitxor_assign","","",349,null],[11,"bitor","","",349,null],[11,"bitor_assign","","",349,null],[11,"bitand","","",349,null],[11,"bitand_assign","","",349,null],[11,"neg","","",349,null],[11,"eq","core::num::dec2flt","",5,null],[11,"ne","","",5,null],[11,"clone","","",5,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"fmt","core::num","",350,null],[11,"eq","","",350,null],[11,"clone","","",350,null],[11,"clone","","",4,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"eq","","",3,null],[11,"ne","","",3,null],[11,"clone","","",3,null],[11,"fmt","","",3,null],[11,"fmt","","",3,null],[11,"hash","core::nonzero","",351,null],[11,"fmt","","",351,null],[11,"partial_cmp","","",351,null],[11,"lt","","",351,null],[11,"le","","",351,null],[11,"gt","","",351,null],[11,"ge","","",351,null],[11,"cmp","","",351,null],[11,"eq","","",351,null],[11,"ne","","",351,null],[11,"clone","","",351,null],[11,"new","","Creates an instance of NonZero with the provided value.\nYou must indeed ensure that the value is actually &quot;non-zero&quot;.",351,{"inputs":[{"name":"t"}],"output":{"name":"nonzero"}}],[11,"deref","","",351,null],[11,"fmt","core::char","",352,null],[11,"clone","","",352,null],[11,"next","","",352,null],[11,"size_hint","","",352,null],[11,"last","","",352,null],[11,"fmt","","",353,null],[11,"clone","","",353,null],[11,"next","","",353,null],[11,"size_hint","","",353,null],[11,"count","","",353,null],[11,"nth","","",353,null],[11,"last","","",353,null],[11,"fmt","","",354,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",354,null],[11,"next","","",354,null],[11,"size_hint","","",354,null],[11,"fmt","","",355,null],[11,"as_slice","","Returns the remaining bytes of this iterator as a slice.",355,null],[11,"next","","",355,null],[11,"size_hint","","",355,null],[11,"fmt","core::slice","",356,null],[11,"as_slice","","View the underlying data as a subslice of the original data.",356,null],[11,"next","","",356,null],[11,"size_hint","","",356,null],[11,"count","","",356,null],[11,"nth","","",356,null],[11,"last","","",356,null],[11,"next_back","","",356,null],[11,"clone","","",356,null],[11,"fmt","","",357,null],[11,"into_slice","","View the underlying data as a subslice of the original data.",357,null],[11,"next","","",357,null],[11,"size_hint","","",357,null],[11,"count","","",357,null],[11,"nth","","",357,null],[11,"last","","",357,null],[11,"next_back","","",357,null],[11,"fmt","","",358,null],[11,"clone","","",358,null],[11,"next","","",358,null],[11,"size_hint","","",358,null],[11,"next_back","","",358,null],[11,"fmt","","",359,null],[11,"next","","",359,null],[11,"size_hint","","",359,null],[11,"next_back","","",359,null],[11,"fmt","","",360,null],[11,"fmt","","",361,null],[11,"fmt","","",362,null],[11,"fmt","","",363,null],[11,"next","","",360,null],[11,"size_hint","","",360,null],[11,"next","","",361,null],[11,"size_hint","","",361,null],[11,"next","","",362,null],[11,"size_hint","","",362,null],[11,"next","","",363,null],[11,"size_hint","","",363,null],[11,"fmt","","",364,null],[11,"clone","","",364,null],[11,"next","","",364,null],[11,"size_hint","","",364,null],[11,"count","","",364,null],[11,"nth","","",364,null],[11,"last","","",364,null],[11,"next_back","","",364,null],[11,"fmt","","",365,null],[11,"clone","","",365,null],[11,"next","","",365,null],[11,"size_hint","","",365,null],[11,"count","","",365,null],[11,"nth","","",365,null],[11,"last","","",365,null],[11,"next_back","","",365,null],[11,"fmt","","",366,null],[11,"next","","",366,null],[11,"size_hint","","",366,null],[11,"count","","",366,null],[11,"nth","","",366,null],[11,"last","","",366,null],[11,"next_back","","",366,null],[11,"eq","core::str","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",2,null],[11,"clone","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"valid_up_to","","Returns the index in the given string up to which valid UTF-8 was\nverified.",2,null],[11,"fmt","","",2,null],[11,"fmt","","",367,null],[11,"clone","","",367,null],[11,"next","","",367,null],[11,"size_hint","","",367,null],[11,"next_back","","",367,null],[11,"as_str","","View the underlying data as a subslice of the original data.",367,null],[11,"fmt","","",368,null],[11,"clone","","",368,null],[11,"next","","",368,null],[11,"size_hint","","",368,null],[11,"next_back","","",368,null],[11,"as_str","","View the underlying data as a subslice of the original data.",368,null],[11,"fmt","","",369,null],[11,"clone","","",369,null],[11,"next","","",369,null],[11,"size_hint","","",369,null],[11,"count","","",369,null],[11,"last","","",369,null],[11,"nth","","",369,null],[11,"next_back","","",369,null],[11,"len","","",369,null],[11,"fmt","","",370,null],[11,"next","","",370,null],[11,"clone","","",370,null],[11,"fmt","","",371,null],[11,"next","","",371,null],[11,"clone","","",371,null],[11,"next_back","","",370,null],[11,"next_back","","",371,null],[11,"fmt","","",372,null],[11,"next","","",372,null],[11,"clone","","",372,null],[11,"fmt","","",373,null],[11,"next","","",373,null],[11,"clone","","",373,null],[11,"next_back","","",372,null],[11,"next_back","","",373,null],[11,"fmt","","",374,null],[11,"next","","",374,null],[11,"clone","","",374,null],[11,"fmt","","",375,null],[11,"next","","",375,null],[11,"clone","","",375,null],[11,"fmt","","",376,null],[11,"next","","",376,null],[11,"clone","","",376,null],[11,"fmt","","",377,null],[11,"next","","",377,null],[11,"clone","","",377,null],[11,"next_back","","",376,null],[11,"next_back","","",377,null],[11,"fmt","","",378,null],[11,"next","","",378,null],[11,"clone","","",378,null],[11,"fmt","","",379,null],[11,"next","","",379,null],[11,"clone","","",379,null],[11,"next_back","","",378,null],[11,"next_back","","",379,null],[11,"fmt","","",380,null],[11,"clone","","",380,null],[11,"next","","",380,null],[11,"size_hint","","",380,null],[11,"next_back","","",380,null],[11,"fmt","","",381,null],[11,"clone","","",381,null],[11,"next","","",381,null],[11,"size_hint","","",381,null],[11,"next_back","","",381,null],[11,"fmt","","",382,null],[11,"clone","","",382,null],[11,"fmt","core::fmt","",383,null],[11,"field","core::fmt::builders","Adds a new field to the generated struct output.",384,null],[11,"finish","","Finishes output and returns any error encountered.",384,null],[11,"field","","Adds a new field to the generated tuple struct output.",385,null],[11,"finish","","Finishes output and returns any error encountered.",385,null],[11,"entry","","Adds a new entry to the set output.",386,null],[11,"entries","","Adds the contents of an iterator of entries to the set output.",386,null],[11,"finish","","Finishes output and returns any error encountered.",386,null],[11,"entry","","Adds a new entry to the list output.",387,null],[11,"entries","","Adds the contents of an iterator of entries to the list output.",387,null],[11,"finish","","Finishes output and returns any error encountered.",387,null],[11,"entry","","Adds a new entry to the map output.",388,null],[11,"entries","","Adds the contents of an iterator of entries to the map output.",388,null],[11,"finish","","Finishes output and returns any error encountered.",388,null],[11,"partial_cmp","core::fmt","",389,null],[11,"eq","","",389,null],[11,"cmp","","",389,null],[11,"hash","","",389,null],[11,"default","","",389,{"inputs":[],"output":{"name":"error"}}],[11,"fmt","","",389,null],[11,"clone","","",389,null],[11,"clone","","",390,null],[11,"fmt","","",390,null],[11,"fmt","","",390,null],[11,"pad_integral","","Performs the correct padding for an integer which has already been\nemitted into a str. The str should *not* contain the sign for the\ninteger, that will be added by this method.",391,null],[11,"pad","","This function takes a string slice and emits it to the internal buffer\nafter applying the relevant formatting flags specified. The flags\nrecognized for generic strings are:",391,null],[11,"write_str","","Writes some data to the underlying buffer contained within this\nformatter.",391,null],[11,"write_fmt","","Writes some formatted information into this instance",391,null],[11,"flags","","Flags for formatting (packed version of rt::Flag)",391,null],[11,"fill","","Character used as &#39;fill&#39; whenever there is alignment",391,null],[11,"align","","Flag indicating what form of alignment was requested",391,null],[11,"width","","Optionally specified integer width that the output should be",391,null],[11,"precision","","Optionally specified precision for numeric types",391,null],[11,"sign_plus","","Determines if the `+` flag was specified.",391,null],[11,"sign_minus","","Determines if the `-` flag was specified.",391,null],[11,"alternate","","Determines if the `#` flag was specified.",391,null],[11,"sign_aware_zero_pad","","Determines if the `0` flag was specified.",391,null],[11,"debug_struct","","Creates a `DebugStruct` builder designed to assist with creation of\n`fmt::Debug` implementations for structs.",391,null],[11,"debug_tuple","","Creates a `DebugTuple` builder designed to assist with creation of\n`fmt::Debug` implementations for tuple structs.",391,null],[11,"debug_list","","Creates a `DebugList` builder designed to assist with creation of\n`fmt::Debug` implementations for list-like structures.",391,null],[11,"debug_set","","Creates a `DebugSet` builder designed to assist with creation of\n`fmt::Debug` implementations for set-like structures.",391,null],[11,"debug_map","","Creates a `DebugMap` builder designed to assist with creation of\n`fmt::Debug` implementations for map-like structures.",391,null],[11,"write_str","","",391,null],[11,"write_char","","",391,null],[11,"write_fmt","","",391,null],[11,"fmt","","",389,null],[11,"fmt","core::marker","",314,null],[11,"fmt","core::cell","",286,null],[11,"fmt","","",288,null],[11,"fmt","","",289,null],[11,"fmt","","",290,null],[11,"fmt","","",291,null],[3,"LinesAny","ethcore_util::standard::str","Created with the method [`lines_any()`].",null,null],[3,"Chars","","Iterator for the char (representing *Unicode Scalar Values*) of a string",null,null],[3,"RSplit","","Created with the method [`rsplit()`].",null,null],[8,"FromStr","","A trait to abstract the idea of creating a new instance of a type from a\nstring.",null,null],[16,"Err","","The associated error which can be returned from parsing.",392,null],[10,"from_str","","Parses a string `s` to return a value of this type.",392,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[3,"RSplitN","","Created with the method [`rsplitn()`].",null,null],[3,"ParseBoolError","","An error returned when parsing a `bool` from a string fails.",null,null],[5,"from_utf8_unchecked","","Converts a slice of bytes to a string slice without checking\nthat the string contains valid UTF-8.",null,null],[3,"CharRange","","Struct that contains a `char` and the index of the first byte of\nthe next `char` in a string.  This can be used as a data structure\nfor iterating over the UTF-8 bytes of a string.",null,null],[12,"ch","","Current `char`",382,null],[12,"next","","Index of the first byte of the next `char`",382,null],[3,"RMatchIndices","","Created with the method [`rmatch_indices()`].",null,null],[3,"MatchIndices","","Created with the method [`match_indices()`].",null,null],[3,"Utf8Error","","Errors which can occur when attempting to interpret a sequence of `u8`\nas a string.",null,null],[3,"SplitN","","Created with the method [`splitn()`].",null,null],[3,"Lines","","Created with the method [`lines()`].",null,null],[3,"Split","","Created with the method [`split()`].",null,null],[5,"from_utf8","","Converts a slice of bytes to a string slice.",null,null],[3,"SplitTerminator","","Created with the method [`split_terminator()`].",null,null],[3,"RMatches","","Created with the method [`rmatches()`].",null,null],[3,"CharIndices","","Iterator for a string&#39;s characters and their byte offsets.",null,null],[0,"pattern","","The string Pattern API.",null,null],[8,"Pattern","ethcore_util::standard::str::pattern","A string pattern.",null,null],[16,"Searcher","","Associated searcher for this pattern",393,null],[10,"into_searcher","","Constructs the associated searcher from\n`self` and the `haystack` to search in.",393,null],[11,"is_contained_in","","Checks whether the pattern matches anywhere in the haystack",393,null],[11,"is_prefix_of","","Checks whether the pattern matches at the front of the haystack",393,null],[11,"is_suffix_of","","Checks whether the pattern matches at the back of the haystack",393,null],[4,"SearchStep","","Result of calling `Searcher::next()` or `ReverseSearcher::next_back()`.",null,null],[13,"Match","","Expresses that a match of the pattern has been found at\n`haystack[a..b]`.",316,null],[13,"Reject","","Expresses that `haystack[a..b]` has been rejected as a possible match\nof the pattern.",316,null],[13,"Done","","Expresses that every byte of the haystack has been visted, ending\nthe iteration.",316,null],[8,"Searcher","","A searcher for a string pattern.",null,null],[10,"haystack","","Getter for the underlaying string to be searched in",394,null],[10,"next","","Performs the next search step starting from the front.",394,null],[11,"next_match","","Find the next `Match` result. See `next()`",394,null],[11,"next_reject","","Find the next `Reject` result. See `next()`",394,null],[8,"ReverseSearcher","","A reverse searcher for a string pattern.",null,null],[10,"next_back","","Performs the next search step starting from the back.",395,null],[11,"next_match_back","","Find the next `Match` result. See `next_back()`",395,null],[11,"next_reject_back","","Find the next `Reject` result. See `next_back()`",395,null],[8,"DoubleEndedSearcher","","A marker trait to express that a `ReverseSearcher`\ncan be used for a `DoubleEndedIterator` implementation.",null,null],[3,"CharSearcher","","Associated type for `&lt;char as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"CharSliceSearcher","","Associated type for `&lt;&amp;[char] as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"CharPredicateSearcher","","Associated type for `&lt;F as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"StrSearcher","","Associated type for `&lt;&amp;str as Pattern&lt;&#39;a&gt;&gt;::Searcher`.",null,null],[3,"RSplitTerminator","ethcore_util::standard::str","Created with the method [`rsplit_terminator()`].",null,null],[11,"clone","rustc_unicode::u_str","",396,null],[11,"new","","Create a UTF-16 encoder from any `char` iterator.",396,{"inputs":[{"name":"i"}],"output":{"name":"utf16encoder"}}],[11,"next","","",396,null],[11,"size_hint","","",396,null],[11,"next","","",397,null],[11,"next_back","","",397,null],[3,"SplitWhitespace","ethcore_util::standard::str","An iterator over the non-whitespace substrings of a string,\nseparated by any amount of whitespace.",null,null],[3,"Matches","","Created with the method [`matches()`].",null,null],[3,"Bytes","","External iterator for a string&#39;s bytes.\nUse with the `std::iter` module.",null,null],[0,"fmt","ethcore_util::standard","Utilities for formatting and printing strings",null,null],[5,"format","ethcore_util::standard::fmt","The format function takes a precompiled format string and a list of\narguments, to return the resulting formatted string.",null,{"inputs":[{"name":"arguments"}],"output":{"name":"string"}}],[3,"DebugList","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugStruct","","A struct to help with `fmt::Debug` implementations.",null,null],[3,"DebugMap","","A struct to help with `fmt::Debug` implementations.",null,null],[8,"Debug","","Format trait for the `?` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",398,null],[3,"Formatter","","A struct to represent both where to emit formatting strings to and how they\nshould be formatted. A mutable version of this is passed to all formatting\ntraits.",null,null],[3,"Arguments","","This structure represents a safely precompiled version of a format string\nand its arguments. This cannot be generated at runtime because it cannot\nsafely be done so, so no constructors are given and the fields are private\nto prevent modification.",null,null],[8,"Write","","A collection of methods that are required to format a message into a stream.",null,null],[10,"write_str","","Writes a slice of bytes into this writer, returning whether the write\nsucceeded.",399,null],[11,"write_char","","Writes a `char` into this writer, returning whether the write succeeded.",399,null],[11,"write_fmt","","Glue for usage of the `write!` macro with implementors of this trait.",399,null],[8,"LowerHex","","Format trait for the `x` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",400,null],[8,"Binary","","Format trait for the `b` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",401,null],[8,"Pointer","","Format trait for the `p` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",402,null],[8,"LowerExp","","Format trait for the `e` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",403,null],[8,"UpperHex","","Format trait for the `X` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",404,null],[8,"Octal","","Format trait for the `o` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",405,null],[3,"DebugSet","","A struct to help with `fmt::Debug` implementations.",null,null],[5,"write","","The `write` function takes an output stream, a precompiled format string,\nand a list of arguments. The arguments will be formatted according to the\nspecified format string into the output stream provided.",null,{"inputs":[{"name":"write"},{"name":"arguments"}],"output":{"name":"result"}}],[6,"Result","","",null,null],[3,"DebugTuple","","A struct to help with `fmt::Debug` implementations.",null,null],[8,"UpperExp","","Format trait for the `E` character.",null,null],[10,"fmt","","Formats the value using the given formatter.",406,null],[8,"Display","","Format trait for an empty format, `{}`.",null,null],[10,"fmt","","Formats the value using the given formatter.",407,null],[3,"Error","","The error type which is returned from formatting a message into a stream.",null,null],[0,"cmp","ethcore_util::standard","Functionality for ordering and comparison.",null,null],[8,"PartialEq","ethcore_util::standard::cmp","Trait for equality comparisons which are [partial equivalence\nrelations](http://en.wikipedia.org/wiki/Partial_equivalence_relation).",null,null],[10,"eq","","This method tests for `self` and `other` values to be equal, and is used\nby `==`.",408,null],[11,"ne","","This method tests for `!=`.",408,null],[8,"Eq","","Trait for equality comparisons which are [equivalence relations](\nhttps://en.wikipedia.org/wiki/Equivalence_relation).",null,null],[4,"Ordering","","An `Ordering` is the result of a comparison between two values.",null,null],[13,"Less","","An ordering where a compared value is less [than another].",321,null],[13,"Equal","","An ordering where a compared value is equal [to another].",321,null],[13,"Greater","","An ordering where a compared value is greater [than another].",321,null],[8,"Ord","","Trait for types that form a [total order](https://en.wikipedia.org/wiki/Total_order).",null,null],[10,"cmp","","This method returns an `Ordering` between `self` and `other`.",409,null],[8,"PartialOrd","","Trait for values that can be compared for a sort-order.",null,null],[10,"partial_cmp","","This method returns an ordering between `self` and `other` values if one exists.",410,null],[11,"lt","","This method tests less than (for `self` and `other`) and is used by the `&lt;` operator.",410,null],[11,"le","","This method tests less than or equal to (for `self` and `other`) and is used by the `&lt;=`\noperator.",410,null],[11,"gt","","This method tests greater than (for `self` and `other`) and is used by the `&gt;` operator.",410,null],[11,"ge","","This method tests greater than or equal to (for `self` and `other`) and is used by the `&gt;=`\noperator.",410,null],[5,"min","","Compare and return the minimum of two values.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"max","","Compare and return the maximum of two values.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[0,"ptr","ethcore_util::standard","Raw, unsafe pointers, `*const T`, and `*mut T`.",null,null],[5,"null","ethcore_util::standard::ptr","Creates a null raw pointer.",null,null],[5,"null_mut","","Creates a null mutable raw pointer.",null,null],[5,"swap","","Swaps the values at two mutable locations of the same type, without\ndeinitializing either. They may overlap, unlike `mem::swap` which is\notherwise equivalent.",null,null],[5,"replace","","Replaces the value at `dest` with `src`, returning the old\nvalue, without dropping either.",null,null],[5,"read","","Reads the value from `src` without moving it. This leaves the\nmemory in `src` unchanged.",null,null],[5,"read_and_drop","","",null,null],[5,"write","","Overwrites a memory location with the given value without reading or\ndropping the old value.",null,null],[5,"read_volatile","","Performs a volatile read of the value from `src` without moving it. This\nleaves the memory in `src` unchanged.",null,null],[5,"write_volatile","","Performs a volatile write of a memory location with the given value without\nreading or dropping the old value.",null,null],[3,"Unique","","A wrapper around a raw non-null `*mut T` that indicates that the possessor\nof this wrapper owns the referent. This in turn implies that the\n`Unique&lt;T&gt;` is `Send`/`Sync` if `T` is `Send`/`Sync`, unlike a raw\n`*mut T` (which conveys no particular ownership semantics).  It\nalso implies that the referent of the pointer should not be\nmodified without a unique path to the `Unique` reference. Useful\nfor building abstractions like `Vec&lt;T&gt;` or `Box&lt;T&gt;`, which\ninternally use raw pointers to manage the memory that they own.",null,null],[3,"Shared","","A wrapper around a raw non-null `*mut T` that indicates that the possessor\nof this wrapper has shared ownership of the referent. Useful for\nbuilding abstractions like `Rc&lt;T&gt;` or `Arc&lt;T&gt;`, which internally\nuse raw pointers to manage the memory that they own.",null,null],[5,"write_bytes","","Invokes memset on the specified pointer, setting `count * size_of::&lt;T&gt;()`\nbytes of memory starting at `dst` to `val`.",null,null],[5,"copy_nonoverlapping","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may *not* overlap.",null,null],[5,"drop_in_place","","Executes the destructor (if any) of the pointed-to value.",null,null],[5,"copy","","Copies `count * size_of&lt;T&gt;` bytes from `src` to `dst`. The source\nand destination may overlap.",null,null],[0,"mem","ethcore_util::standard","Basic functions for dealing with memory.",null,null],[5,"forget","ethcore_util::standard::mem","Leaks a value into the void, consuming ownership and never running its\ndestructor.",null,null],[5,"size_of","","Returns the size of a type in bytes.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"size_of_val","","Returns the size of the given value in bytes.",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"min_align_of","","Returns the ABI-required minimum alignment of a type",null,{"inputs":[],"output":{"name":"usize"}}],[5,"min_align_of_val","","Returns the ABI-required minimum alignment of the type of the value that `val` points to",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"align_of","","Returns the alignment in memory for a type.",null,{"inputs":[],"output":{"name":"usize"}}],[5,"align_of_val","","Returns the ABI-required minimum alignment of the type of the value that `val` points to",null,{"inputs":[{"name":"t"}],"output":{"name":"usize"}}],[5,"zeroed","","Creates a value initialized to zero.",null,{"inputs":[],"output":{"name":"t"}}],[5,"dropped","","Creates a value initialized to an unspecified series of bytes.",null,{"inputs":[],"output":{"name":"t"}}],[5,"uninitialized","","Bypasses Rust&#39;s normal memory-initialization checks by pretending to\nproduce a value of type T, while doing nothing at all.",null,{"inputs":[],"output":{"name":"t"}}],[5,"swap","","Swap the values at two mutable locations of the same type, without deinitializing or copying\neither one.",null,null],[5,"replace","","Replaces the value at a mutable location with a new one, returning the old value, without\ndeinitializing or copying either one.",null,{"inputs":[{"name":"t"},{"name":"t"}],"output":{"name":"t"}}],[5,"drop","","Disposes of a value.",null,null],[17,"POST_DROP_U8","","",null,null],[17,"POST_DROP_U32","","",null,null],[17,"POST_DROP_U64","","",null,null],[17,"POST_DROP_USIZE","","",null,null],[5,"transmute_copy","","Interprets `src` as `&amp;U`, and then reads `src` without moving the contained\nvalue.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[5,"transmute","","Unsafely transforms a value of one type into a value of another type.",null,{"inputs":[{"name":"t"}],"output":{"name":"u"}}],[0,"ops","ethcore_util::standard","Overloadable operators.",null,null],[8,"Drop","ethcore_util::standard::ops","The `Drop` trait is used to run some code when a value goes out of scope.\nThis is sometimes called a &#39;destructor&#39;.",null,null],[10,"drop","","A method called when the value goes out of scope.",411,null],[8,"Add","","The `Add` trait is used to specify the functionality of `+`.",null,null],[16,"Output","","The resulting type after applying the `+` operator",412,null],[10,"add","","The method for the `+` operator",412,null],[8,"Sub","","The `Sub` trait is used to specify the functionality of `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator",413,null],[10,"sub","","The method for the `-` operator",413,null],[8,"Mul","","The `Mul` trait is used to specify the functionality of `*`.",null,null],[16,"Output","","The resulting type after applying the `*` operator",414,null],[10,"mul","","The method for the `*` operator",414,null],[8,"Div","","The `Div` trait is used to specify the functionality of `/`.",null,null],[16,"Output","","The resulting type after applying the `/` operator",415,null],[10,"div","","The method for the `/` operator",415,null],[8,"Rem","","The `Rem` trait is used to specify the functionality of `%`.",null,null],[16,"Output","","The resulting type after applying the `%` operator",416,null],[10,"rem","","The method for the `%` operator",416,null],[8,"Neg","","The `Neg` trait is used to specify the functionality of unary `-`.",null,null],[16,"Output","","The resulting type after applying the `-` operator",417,null],[10,"neg","","The method for the unary `-` operator",417,null],[8,"Not","","The `Not` trait is used to specify the functionality of unary `!`.",null,null],[16,"Output","","The resulting type after applying the `!` operator",418,null],[10,"not","","The method for the unary `!` operator",418,null],[8,"BitAnd","","The `BitAnd` trait is used to specify the functionality of `&amp;`.",null,null],[16,"Output","","The resulting type after applying the `&amp;` operator",419,null],[10,"bitand","","The method for the `&amp;` operator",419,null],[8,"BitOr","","The `BitOr` trait is used to specify the functionality of `|`.",null,null],[16,"Output","","The resulting type after applying the `|` operator",420,null],[10,"bitor","","The method for the `|` operator",420,null],[8,"BitXor","","The `BitXor` trait is used to specify the functionality of `^`.",null,null],[16,"Output","","The resulting type after applying the `^` operator",421,null],[10,"bitxor","","The method for the `^` operator",421,null],[8,"Shl","","The `Shl` trait is used to specify the functionality of `&lt;&lt;`.",null,null],[16,"Output","","The resulting type after applying the `&lt;&lt;` operator",422,null],[10,"shl","","The method for the `&lt;&lt;` operator",422,null],[8,"Shr","","The `Shr` trait is used to specify the functionality of `&gt;&gt;`.",null,null],[16,"Output","","The resulting type after applying the `&gt;&gt;` operator",423,null],[10,"shr","","The method for the `&gt;&gt;` operator",423,null],[8,"AddAssign","","The `AddAssign` trait is used to specify the functionality of `+=`.",null,null],[10,"add_assign","","The method for the `+=` operator",424,null],[8,"SubAssign","","The `SubAssign` trait is used to specify the functionality of `-=`.",null,null],[10,"sub_assign","","The method for the `-=` operator",425,null],[8,"MulAssign","","The `MulAssign` trait is used to specify the functionality of `*=`.",null,null],[10,"mul_assign","","The method for the `*=` operator",426,null],[8,"DivAssign","","The `DivAssign` trait is used to specify the functionality of `/=`.",null,null],[10,"div_assign","","The method for the `/=` operator",427,null],[8,"RemAssign","","The `RemAssign` trait is used to specify the functionality of `%=`.",null,null],[10,"rem_assign","","The method for the `%=` operator",428,null],[8,"BitAndAssign","","The `BitAndAssign` trait is used to specify the functionality of `&amp;=`.",null,null],[10,"bitand_assign","","The method for the `&amp;` operator",429,null],[8,"BitOrAssign","","The `BitOrAssign` trait is used to specify the functionality of `|=`.",null,null],[10,"bitor_assign","","The method for the `|=` operator",430,null],[8,"BitXorAssign","","The `BitXorAssign` trait is used to specify the functionality of `^=`.",null,null],[10,"bitxor_assign","","The method for the `^=` operator",431,null],[8,"ShlAssign","","The `ShlAssign` trait is used to specify the functionality of `&lt;&lt;=`.",null,null],[10,"shl_assign","","The method for the `&lt;&lt;=` operator",432,null],[8,"ShrAssign","","The `ShrAssign` trait is used to specify the functionality of `&gt;&gt;=`.",null,null],[10,"shr_assign","","The method for the `&gt;&gt;=` operator",433,null],[8,"Index","","The `Index` trait is used to specify the functionality of indexing operations\nlike `arr[idx]` when used in an immutable context.",null,null],[16,"Output","","The returned type after indexing",434,null],[10,"index","","The method for the indexing (`Foo[Bar]`) operation",434,null],[8,"IndexMut","","The `IndexMut` trait is used to specify the functionality of indexing\noperations like `arr[idx]`, when used in a mutable context.",null,null],[10,"index_mut","","The method for the indexing (`Foo[Bar]`) operation",435,null],[3,"RangeFull","","An unbounded range. Use `..` (two dots) for its shorthand.",null,null],[3,"Range","","A (half-open) range which is bounded at both ends: { x | start &lt;= x &lt; end }.\nUse `start..end` (two dots) for its shorthand.",null,null],[12,"start","","The lower bound of the range (inclusive).",272,null],[12,"end","","The upper bound of the range (exclusive).",272,null],[3,"RangeFrom","","A range which is only bounded below: { x | start &lt;= x }.\nUse `start..` for its shorthand.",null,null],[12,"start","","The lower bound of the range (inclusive).",273,null],[3,"RangeTo","","A range which is only bounded above: { x | x &lt; end }.\nUse `..end` (two dots) for its shorthand.",null,null],[12,"end","","The upper bound of the range (exclusive).",274,null],[4,"RangeInclusive","","An inclusive range which is bounded at both ends: { x | start &lt;= x &lt;= end }.\nUse `start...end` (three dots) for its shorthand.",null,null],[13,"Empty","","Empty range (iteration has finished)",275,null],[12,"at","ethcore_util::standard::ops::RangeInclusive","",275,null],[13,"NonEmpty","ethcore_util::standard::ops","Non-empty range (iteration will yield value(s))",275,null],[12,"start","ethcore_util::standard::ops::RangeInclusive","",275,null],[12,"end","","",275,null],[3,"RangeToInclusive","ethcore_util::standard::ops","An inclusive range which is only bounded above: { x | x &lt;= end }.\nUse `...end` (three dots) for its shorthand.",null,null],[12,"end","","The upper bound of the range (inclusive)",276,null],[8,"Deref","","The `Deref` trait is used to specify the functionality of dereferencing\noperations, like `*v`.",null,null],[16,"Target","","The resulting type after dereferencing",436,null],[10,"deref","","The method called to dereference a value",436,null],[8,"DerefMut","","The `DerefMut` trait is used to specify the functionality of dereferencing\nmutably like `*v = 1;`",null,null],[10,"deref_mut","","The method called to mutably dereference a value",437,null],[8,"Fn","","A version of the call operator that takes an immutable receiver.",null,null],[10,"call","","This is called when the call operator is used.",438,null],[8,"FnMut","","A version of the call operator that takes a mutable receiver.",null,null],[10,"call_mut","","This is called when the call operator is used.",439,null],[8,"FnOnce","","A version of the call operator that takes a by-value receiver.",null,null],[16,"Output","","The returned type after the call operator is used.",440,null],[10,"call_once","","This is called when the call operator is used.",440,null],[8,"CoerceUnsized","","Trait that indicates that this is a pointer or a wrapper for one,\nwhere unsizing can be performed on the pointee.",null,null],[8,"Place","","Both `in (PLACE) EXPR` and `box EXPR` desugar into expressions\nthat allocate an intermediate &quot;place&quot; that holds uninitialized\nstate.  The desugaring evaluates EXPR, and writes the result at\nthe address returned by the `pointer` method of this trait.",null,null],[10,"pointer","","Returns the address where the input value will be written.\nNote that the data at this address is generally uninitialized,\nand thus one should use `ptr::write` for initializing it.",441,null],[8,"Placer","","Interface to implementations of  `in (PLACE) EXPR`.",null,null],[16,"Place","","`Place` is the intermedate agent guarding the\nuninitialized state for `Data`.",442,null],[10,"make_place","","Creates a fresh place from `self`.",442,null],[8,"InPlace","","Specialization of `Place` trait supporting `in (PLACE) EXPR`.",null,null],[16,"Owner","","`Owner` is the type of the end value of `in (PLACE) EXPR`",443,null],[10,"finalize","","Converts self into the final value, shifting\ndeallocation/cleanup responsibilities (if any remain), over to\nthe returned instance of `Owner` and forgetting self.",443,null],[8,"Boxed","","Core trait for the `box EXPR` form.",null,null],[16,"Data","","The kind of data that is stored in this kind of box.",444,null],[16,"Place","","The place that will negotiate the storage of the data.",444,null],[10,"finalize","","Converts filled place into final owning value, shifting\ndeallocation/cleanup responsibilities (if any remain), over to\nreturned instance of `Self` and forgetting `filled`.",444,null],[8,"BoxPlace","","Specialization of `Place` trait supporting `box EXPR`.",null,null],[10,"make_place","","Creates a globally fresh place.",445,{"inputs":[],"output":{"name":"self"}}],[0,"slice","ethcore_util::standard","A dynamically-sized view into a contiguous sequence, `[T]`.",null,null],[8,"SliceConcatExt","ethcore_util::standard::slice","An extension trait for concatenating slices",null,null],[16,"Output","","The resulting type after concatenation",446,null],[10,"concat","","Flattens a slice of `T` into a single value `Self::Output`.",446,null],[10,"join","","Flattens a slice of `T` into a single value `Self::Output`, placing a\ngiven separator between each.",446,null],[10,"connect","","",446,null],[3,"Windows","","An iterator over overlapping subslices of length `size`.",null,null],[5,"from_raw_parts_mut","","Performs the same functionality as `from_raw_parts`, except that a mutable\nslice is returned.",null,null],[3,"SplitN","","An iterator over subslices separated by elements that match a predicate\nfunction, limited to a given number of splits.",null,null],[3,"IterMut","","Mutable slice iterator.",null,null],[3,"Split","","An iterator over subslices separated by elements that match a predicate\nfunction.",null,null],[3,"SplitNMut","","An iterator over subslices separated by elements that match a predicate\nfunction, limited to a given number of splits.",null,null],[3,"Chunks","","An iterator over a slice in (non-overlapping) chunks (`size` elements at a\ntime).",null,null],[3,"ChunksMut","","An iterator over a slice in (non-overlapping) mutable chunks (`size`\nelements at a time). When the slice len is not evenly divided by the chunk\nsize, the last slice of the iteration will be the remainder.",null,null],[3,"RSplitN","","An iterator over subslices separated by elements that match a\npredicate function, limited to a given number of splits, starting\nfrom the end of the slice.",null,null],[5,"from_raw_parts","","Forms a slice from a pointer and a length.",null,null],[3,"RSplitNMut","","An iterator over subslices separated by elements that match a\npredicate function, limited to a given number of splits, starting\nfrom the end of the slice.",null,null],[3,"SplitMut","","An iterator over the subslices of the vector which are separated\nby elements that match `pred`.",null,null],[3,"Iter","","Immutable slice iterator",null,null],[0,"result","ethcore_util::standard","Error handling with the `Result` type.",null,null],[4,"Result","ethcore_util::standard::result","`Result` is a type that represents either success (`Ok`) or failure (`Err`).",null,null],[13,"Ok","","Contains the success value",279,null],[13,"Err","","Contains the error value",279,null],[3,"Iter","","An iterator over a reference to the `Ok` variant of a `Result`.",null,null],[3,"IterMut","","An iterator over a mutable reference to the `Ok` variant of a `Result`.",null,null],[3,"IntoIter","","An iterator over the value in a `Ok` variant of a `Result`.",null,null],[0,"option","ethcore_util::standard","Optional values.",null,null],[4,"Option","ethcore_util::standard::option","The `Option` type. See [the module level documentation](index.html) for more.",null,null],[13,"None","","No value",259,null],[13,"Some","","Some value `T`",259,null],[3,"Iter","","An iterator over a reference of the contained item in an Option.",null,null],[3,"IterMut","","An iterator over a mutable reference of the contained item in an Option.",null,null],[3,"IntoIter","","An iterator over the item contained inside an Option.",null,null],[3,"Path","ethcore_util::standard","A slice of a path (akin to `str`).",null,null],[8,"FromStr","","A trait to abstract the idea of creating a new instance of a type from a\nstring.",null,null],[16,"Err","","The associated error which can be returned from parsing.",392,null],[10,"from_str","","Parses a string `s` to return a value of this type.",392,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[8,"Read","","The `Read` trait allows for reading bytes from a source.",null,null],[10,"read","","Pull some bytes from this source into the specified buffer, returning\nhow many bytes were read.",322,null],[11,"read_to_end","","Read all bytes until EOF in this source, placing them into `buf`.",322,null],[11,"read_to_string","","Read all bytes until EOF in this source, placing them into `buf`.",322,null],[11,"read_exact","","Read the exact number of bytes required to fill `buf`.",322,null],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Read`.",322,null],[11,"bytes","","Transforms this `Read` instance to an `Iterator` over its bytes.",322,null],[11,"chars","","Transforms this `Read` instance to an `Iterator` over `char`s.",322,null],[11,"chain","","Creates an adaptor which will chain this stream with another.",322,null],[11,"take","","Creates an adaptor which will read at most `limit` bytes from it.",322,null],[8,"Write","","A trait for objects which are byte-oriented sinks.",null,null],[10,"write","","Write a buffer into this object, returning how many bytes were written.",324,null],[10,"flush","","Flush this output stream, ensuring that all intermediately buffered\ncontents reach their destination.",324,null],[11,"write_all","","Attempts to write an entire buffer into this write.",324,null],[11,"write_fmt","","Writes a formatted string into this writer, returning any error\nencountered.",324,null],[11,"by_ref","","Creates a &quot;by reference&quot; adaptor for this instance of `Write`.",324,null],[8,"Hash","","A hashable type.",null,null],[10,"hash","","Feeds this value into the state given, updating the hasher as necessary.",447,null],[11,"hash_slice","","Feeds a slice of this type into the state provided.",447,null],[8,"Hasher","","A trait which represents the ability to hash an arbitrary stream of bytes.",null,null],[10,"finish","","Completes a round of hashing, producing the output hash generated.",448,null],[10,"write","","Writes some data into this `Hasher`",448,null],[11,"write_u8","","Write a single `u8` into this hasher",448,null],[11,"write_u16","","Write a single `u16` into this hasher.",448,null],[11,"write_u32","","Write a single `u32` into this hasher.",448,null],[11,"write_u64","","Write a single `u64` into this hasher.",448,null],[11,"write_usize","","Write a single `usize` into this hasher.",448,null],[11,"write_i8","","Write a single `i8` into this hasher.",448,null],[11,"write_i16","","Write a single `i16` into this hasher.",448,null],[11,"write_i32","","Write a single `i32` into this hasher.",448,null],[11,"write_i64","","Write a single `i64` into this hasher.",448,null],[11,"write_isize","","Write a single `isize` into this hasher.",448,null],[8,"StdError","","Base functionality for all errors in Rust.",null,null],[10,"description","","A short description of the error.",10,null],[11,"cause","","The lower-level cause of this error, if any.",10,null],[11,"new","alloc::arc","Constructs a new `Arc&lt;T&gt;`.",449,{"inputs":[{"name":"t"}],"output":{"name":"arc"}}],[11,"try_unwrap","","Unwraps the contained value if the `Arc&lt;T&gt;` has exactly one strong reference.",449,{"inputs":[{"name":"arc"}],"output":{"name":"result"}}],[11,"downgrade","","Downgrades the `Arc&lt;T&gt;` to a `Weak&lt;T&gt;` reference.",449,{"inputs":[{"name":"arc"}],"output":{"name":"weak"}}],[11,"weak_count","","Get the number of weak references to this value.",449,{"inputs":[{"name":"arc"}],"output":{"name":"usize"}}],[11,"strong_count","","Get the number of strong references to this value.",449,{"inputs":[{"name":"arc"}],"output":{"name":"usize"}}],[11,"make_mut","","Make a mutable reference into the given `Arc&lt;T&gt;`.\nIf the `Arc&lt;T&gt;` has more than one strong reference, or any weak\nreferences, the inner data is cloned.",449,{"inputs":[{"name":"arc"}],"output":{"name":"t"}}],[11,"get_mut","","Returns a mutable reference to the contained value if the `Arc&lt;T&gt;` has\none strong reference and no weak references.",449,{"inputs":[{"name":"arc"}],"output":{"name":"option"}}],[11,"fmt","","",450,null],[11,"clone","","Makes a clone of the `Arc&lt;T&gt;`.",449,null],[11,"deref","","",449,null],[11,"drop","","Drops the `Arc&lt;T&gt;`.",449,null],[11,"new","","Constructs a new `Weak&lt;T&gt;` without an accompanying instance of T.",450,{"inputs":[],"output":{"name":"weak"}}],[11,"upgrade","","Upgrades a weak reference to a strong reference.",450,null],[11,"clone","","Makes a clone of the `Weak&lt;T&gt;`.",450,null],[11,"default","","",450,{"inputs":[],"output":{"name":"weak"}}],[11,"drop","","Drops the `Weak&lt;T&gt;`.",450,null],[11,"eq","","Equality for two `Arc&lt;T&gt;`s.",449,null],[11,"ne","","Inequality for two `Arc&lt;T&gt;`s.",449,null],[11,"partial_cmp","","Partial comparison for two `Arc&lt;T&gt;`s.",449,null],[11,"lt","","Less-than comparison for two `Arc&lt;T&gt;`s.",449,null],[11,"le","","&#39;Less-than or equal to&#39; comparison for two `Arc&lt;T&gt;`s.",449,null],[11,"gt","","Greater-than comparison for two `Arc&lt;T&gt;`s.",449,null],[11,"ge","","&#39;Greater-than or equal to&#39; comparison for two `Arc&lt;T&gt;`s.",449,null],[11,"cmp","","",449,null],[11,"fmt","","",449,null],[11,"fmt","","",449,null],[11,"fmt","","",449,null],[11,"default","","",449,{"inputs":[],"output":{"name":"arc"}}],[11,"hash","","",449,null],[11,"from","","",449,{"inputs":[{"name":"t"}],"output":{"name":"arc"}}],[11,"borrow","","",449,null],[11,"as_ref","","",449,null],[11,"new","alloc::raw_vec","Creates the biggest possible RawVec without allocating. If T has positive\nsize, then this makes a RawVec with capacity 0. If T has 0 size, then it\nit makes a RawVec with capacity `usize::MAX`. Useful for implementing\ndelayed allocation.",451,{"inputs":[],"output":{"name":"rawvec"}}],[11,"with_capacity","","Creates a RawVec with exactly the capacity and alignment requirements\nfor a `[T; cap]`. This is equivalent to calling RawVec::new when `cap` is 0\nor T is zero-sized. Note that if `T` is zero-sized this means you will *not*\nget a RawVec with the requested capacity!",451,{"inputs":[{"name":"usize"}],"output":{"name":"rawvec"}}],[11,"from_raw_parts","","Reconstitutes a RawVec from a pointer and capacity.",451,null],[11,"from_box","","Converts a `Box&lt;[T]&gt;` into a `RawVec&lt;T&gt;`.",451,{"inputs":[{"name":"box"}],"output":{"name":"rawvec"}}],[11,"ptr","","Gets a raw pointer to the start of the allocation. Note that this is\nheap::EMPTY if `cap = 0` or T is zero-sized. In the former case, you must\nbe careful.",451,null],[11,"cap","","Gets the capacity of the allocation.",451,null],[11,"double","","Doubles the size of the type&#39;s backing allocation. This is common enough\nto want to do that it&#39;s easiest to just have a dedicated method. Slightly\nmore efficient logic can be provided for this than the general case.",451,null],[11,"double_in_place","","Attempts to double the size of the type&#39;s backing allocation in place. This is common\nenough to want to do that it&#39;s easiest to just have a dedicated method. Slightly\nmore efficient logic can be provided for this than the general case.",451,null],[11,"reserve_exact","","Ensures that the buffer contains at least enough space to hold\n`used_cap + needed_extra_cap` elements. If it doesn&#39;t already,\nwill reallocate the minimum possible amount of memory necessary.\nGenerally this will be exactly the amount of memory necessary,\nbut in principle the allocator is free to give back more than\nwe asked for.",451,null],[11,"reserve","","Ensures that the buffer contains at least enough space to hold\n`used_cap + needed_extra_cap` elements. If it doesn&#39;t already have\nenough capacity, will reallocate enough space plus comfortable slack\nspace to get amortized `O(1)` behavior. Will limit this behavior\nif it would needlessly cause itself to panic.",451,null],[11,"reserve_in_place","","Attempts to ensure that the buffer contains at least enough space to hold\n`used_cap + needed_extra_cap` elements. If it doesn&#39;t already have\nenough capacity, will reallocate in place enough space plus comfortable slack\nspace to get amortized `O(1)` behaviour. Will limit this behaviour\nif it would needlessly cause itself to panic.",451,null],[11,"shrink_to_fit","","Shrinks the allocation down to the specified amount. If the given amount\nis 0, actually completely deallocates.",451,null],[11,"into_box","","Converts the entire buffer into `Box&lt;[T]&gt;`.",451,null],[11,"unsafe_no_drop_flag_needs_drop","","This is a stupid name in the hopes that someone will find this in the\nnot too distant future and remove it with the rest of\n#[unsafe_no_drop_flag]",451,null],[11,"drop","","Frees the memory owned by the RawVec *without* trying to Drop its contents.",451,null],[3,"Arc","ethcore_util::standard","An atomically reference counted wrapper for shared state.",null,null],[11,"from_reader","rustc_serialize::json","Decodes a json value from an `&amp;mut io::Read`",452,{"inputs":[{"name":"read"}],"output":{"name":"result"}}],[11,"from_str","","Decodes a json value from a string",452,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"pretty","","Borrow this json object as a pretty object to generate a pretty\nrepresentation for it via `Display`.",452,null],[11,"find","","If the Json value is an Object, returns the value associated with the provided key.\nOtherwise, returns None.",452,null],[11,"find_path","","Attempts to get a nested Json Object for each key in `keys`.\nIf any key is found not to exist, find_path will return None.\nOtherwise, it will return the Json value associated with the final key.",452,null],[11,"search","","If the Json value is an Object, performs a depth-first search until\na value associated with the provided key is found. If no value is found\nor the Json value is not an Object, returns None.",452,null],[11,"is_object","","Returns true if the Json value is an Object. Returns false otherwise.",452,null],[11,"as_object","","If the Json value is an Object, returns the associated BTreeMap.\nReturns None otherwise.",452,null],[11,"as_object_mut","","If the Json value is an Object, returns the associated mutable BTreeMap.\nReturns None otherwise.",452,null],[11,"is_array","","Returns true if the Json value is an Array. Returns false otherwise.",452,null],[11,"as_array","","If the Json value is an Array, returns the associated vector.\nReturns None otherwise.",452,null],[11,"as_array_mut","","If the Json value is an Array, returns the associated mutable vector.\nReturns None otherwise.",452,null],[11,"is_string","","Returns true if the Json value is a String. Returns false otherwise.",452,null],[11,"as_string","","If the Json value is a String, returns the associated str.\nReturns None otherwise.",452,null],[11,"is_number","","Returns true if the Json value is a Number. Returns false otherwise.",452,null],[11,"is_i64","","Returns true if the Json value is a i64. Returns false otherwise.",452,null],[11,"is_u64","","Returns true if the Json value is a u64. Returns false otherwise.",452,null],[11,"is_f64","","Returns true if the Json value is a f64. Returns false otherwise.",452,null],[11,"as_i64","","If the Json value is a number, return or cast it to a i64.\nReturns None otherwise.",452,null],[11,"as_u64","","If the Json value is a number, return or cast it to a u64.\nReturns None otherwise.",452,null],[11,"as_f64","","If the Json value is a number, return or cast it to a f64.\nReturns None otherwise.",452,null],[11,"is_boolean","","Returns true if the Json value is a Boolean. Returns false otherwise.",452,null],[11,"as_boolean","","If the Json value is a Boolean, returns the associated bool.\nReturns None otherwise.",452,null],[11,"is_null","","Returns true if the Json value is a Null. Returns false otherwise.",452,null],[11,"as_null","","If the Json value is a Null, returns ().\nReturns None otherwise.",452,null],[11,"encode","collections::string","",73,null],[11,"decode","","",73,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::boxed","",0,null],[11,"decode","","",0,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"decode","","",0,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","alloc::rc","",263,null],[11,"decode","","",263,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::borrow","",72,null],[11,"decode","","",72,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec","",46,null],[11,"decode","","",46,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","ethcore_util::standard::option","",259,null],[11,"decode","","",259,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::marker","",314,null],[11,"decode","","",314,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","ethcore_util::standard","",139,null],[11,"encode","std::path","",138,null],[11,"decode","","",138,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","core::cell","",286,null],[11,"decode","","",286,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","","",288,null],[11,"decode","","",288,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","ethcore_util::standard","",449,null],[11,"decode","","",449,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::linked_list","",53,null],[11,"decode","","",53,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::vec_deque","",41,null],[11,"decode","","",41,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::map","",326,null],[11,"decode","","",326,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","collections::btree::set","",338,null],[11,"decode","","",338,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::map","",21,null],[11,"decode","","",21,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"encode","std::collections::hash::set","",33,null],[11,"decode","","",33,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"fmt","rustc_serialize::base64","",453,null],[11,"clone","","",453,null],[11,"fmt","","",454,null],[11,"clone","","",454,null],[11,"fmt","","",455,null],[11,"clone","","",455,null],[11,"clone","","",456,null],[11,"fmt","","",456,null],[11,"description","","",456,null],[11,"fmt","","",456,null],[11,"clone","rustc_serialize::hex","",457,null],[11,"fmt","","",457,null],[11,"description","","",457,null],[11,"fmt","","",457,null],[11,"fmt","rustc_serialize::json","",452,null],[11,"partial_cmp","","",452,null],[11,"lt","","",452,null],[11,"le","","",452,null],[11,"gt","","",452,null],[11,"ge","","",452,null],[11,"eq","","",452,null],[11,"ne","","",452,null],[11,"clone","","",452,null],[11,"eq","","",458,null],[11,"clone","","",458,null],[11,"fmt","","",459,null],[11,"eq","","",459,null],[11,"fmt","","",460,null],[11,"eq","","",460,null],[11,"ne","","",460,null],[11,"fmt","","",461,null],[11,"clone","","",461,null],[11,"fmt","","",458,null],[11,"description","","",460,null],[11,"cause","","",460,null],[11,"fmt","","",460,null],[11,"from","","",460,{"inputs":[{"name":"parsererror"}],"output":{"name":"decodererror"}}],[11,"description","","",459,null],[11,"fmt","","",459,null],[11,"from","","",459,{"inputs":[{"name":"error"}],"output":{"name":"parsererror"}}],[11,"description","","",461,null],[11,"fmt","","",461,null],[11,"from","","",461,{"inputs":[{"name":"error"}],"output":{"name":"encodererror"}}],[11,"new_pretty","","Creates a new encoder whose output will be written in human-readable\nJSON to the specified writer",462,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"new","","Creates a new encoder whose output will be written in compact\nJSON to the specified writer",462,{"inputs":[{"name":"write"}],"output":{"name":"encoder"}}],[11,"set_indent","","Set the number of spaces to indent for each level.\nThis is safe to set during encoding.",462,null],[11,"emit_nil","","",462,null],[11,"emit_usize","","",462,null],[11,"emit_u64","","",462,null],[11,"emit_u32","","",462,null],[11,"emit_u16","","",462,null],[11,"emit_u8","","",462,null],[11,"emit_isize","","",462,null],[11,"emit_i64","","",462,null],[11,"emit_i32","","",462,null],[11,"emit_i16","","",462,null],[11,"emit_i8","","",462,null],[11,"emit_bool","","",462,null],[11,"emit_f64","","",462,null],[11,"emit_f32","","",462,null],[11,"emit_char","","",462,null],[11,"emit_str","","",462,null],[11,"emit_enum","","",462,null],[11,"emit_enum_variant","","",462,null],[11,"emit_enum_variant_arg","","",462,null],[11,"emit_enum_struct_variant","","",462,null],[11,"emit_enum_struct_variant_field","","",462,null],[11,"emit_struct","","",462,null],[11,"emit_struct_field","","",462,null],[11,"emit_tuple","","",462,null],[11,"emit_tuple_arg","","",462,null],[11,"emit_tuple_struct","","",462,null],[11,"emit_tuple_struct_arg","","",462,null],[11,"emit_option","","",462,null],[11,"emit_option_none","","",462,null],[11,"emit_option_some","","",462,null],[11,"emit_seq","","",462,null],[11,"emit_seq_elt","","",462,null],[11,"emit_map","","",462,null],[11,"emit_map_elt_key","","",462,null],[11,"emit_map_elt_val","","",462,null],[11,"encode","","",452,null],[11,"index","","",452,null],[11,"index","","",452,null],[11,"fmt","","",463,null],[11,"eq","","",463,null],[11,"ne","","",463,null],[11,"fmt","","",464,null],[11,"clone","","",464,null],[11,"eq","","",464,null],[11,"ne","","",464,null],[11,"new","","",465,{"inputs":[],"output":{"name":"stack"}}],[11,"len","","Returns The number of elements in the Stack.",465,null],[11,"is_empty","","Returns true if the stack is empty.",465,null],[11,"get","","Provides access to the StackElement at a given index.\nlower indices are at the bottom of the stack while higher indices are\nat the top.",465,null],[11,"is_equal_to","","Compares this stack with an array of StackElements.",465,null],[11,"starts_with","","Returns true if the bottom-most elements of this stack are the same as\nthe ones passed as parameter.",465,null],[11,"ends_with","","Returns true if the top-most elements of this stack are the same as\nthe ones passed as parameter.",465,null],[11,"top","","Returns the top-most element (if any).",465,null],[11,"next","","",466,null],[11,"new","","Creates the JSON parser.",466,{"inputs":[{"name":"t"}],"output":{"name":"parser"}}],[11,"stack","","Provides access to the current position in the logical structure of the\nJSON stream.",466,null],[11,"new","","Create a JSON Builder.",467,{"inputs":[{"name":"t"}],"output":{"name":"builder"}}],[11,"build","","",467,null],[11,"new","","Creates a new decoder instance for decoding the specified JSON value.",468,{"inputs":[{"name":"json"}],"output":{"name":"decoder"}}],[11,"read_nil","","",468,null],[11,"read_usize","","",468,null],[11,"read_u8","","",468,null],[11,"read_u16","","",468,null],[11,"read_u32","","",468,null],[11,"read_u64","","",468,null],[11,"read_isize","","",468,null],[11,"read_i8","","",468,null],[11,"read_i16","","",468,null],[11,"read_i32","","",468,null],[11,"read_i64","","",468,null],[11,"read_f32","","",468,null],[11,"read_f64","","",468,null],[11,"read_bool","","",468,null],[11,"read_char","","",468,null],[11,"read_str","","",468,null],[11,"read_enum","","",468,null],[11,"read_enum_variant","","",468,null],[11,"read_enum_variant_arg","","",468,null],[11,"read_enum_struct_variant","","",468,null],[11,"read_enum_struct_variant_field","","",468,null],[11,"read_struct","","",468,null],[11,"read_struct_field","","",468,null],[11,"read_tuple","","",468,null],[11,"read_tuple_arg","","",468,null],[11,"read_tuple_struct","","",468,null],[11,"read_tuple_struct_arg","","",468,null],[11,"read_option","","",468,null],[11,"read_seq","","",468,null],[11,"read_seq_elt","","",468,null],[11,"read_map","","",468,null],[11,"read_map_elt_key","","",468,null],[11,"read_map_elt_val","","",468,null],[11,"error","","",468,null],[11,"to_json","","",452,null],[11,"to_json","collections::string","",73,null],[11,"to_json","collections::vec","",46,null],[11,"to_json","collections::btree::map","",326,null],[11,"to_json","std::collections::hash::map","",21,null],[11,"to_json","ethcore_util::standard::option","",259,null],[11,"fmt","rustc_serialize::json","Encodes a json value into a string",452,null],[11,"fmt","","Encodes a json value into a string",469,null],[11,"fmt","","Encodes a json value into a string",470,null],[11,"indent","","Set the indentation level for the emitted JSON",471,null],[11,"fmt","","Encodes a json value into a string",471,null],[11,"from_str","","",452,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[4,"Json","ethcore_util::standard","Represents a json value",null,null],[13,"I64","","",452,null],[13,"U64","","",452,null],[13,"F64","","",452,null],[13,"String","","",452,null],[13,"Boolean","","",452,null],[13,"Array","","",452,null],[13,"Object","","",452,null],[13,"Null","","",452,null],[8,"FromBase64","","A trait for converting from base64 encoded values.",null,null],[10,"from_base64","","Converts the value of `self`, interpreted as base64 encoded data, into\nan owned vector of bytes, returning the vector.",472,null],[8,"FromHex","","A trait for converting hexadecimal encoded values",null,null],[10,"from_hex","","Converts the value of `self`, interpreted as hexadecimal encoded data,\ninto an owned vector of bytes, returning the vector.",473,null],[4,"FromHexError","","Errors that can occur when decoding a hex encoded string",null,null],[13,"InvalidHexCharacter","","The input contained a character not part of the hex format",457,null],[13,"InvalidHexLength","","The input had an invalid length",457,null],[11,"heap_size_of_children","alloc::boxed","",0,null],[11,"heap_size_of_children","collections::string","",73,null],[11,"heap_size_of_children","ethcore_util::standard::option","",259,null],[11,"heap_size_of_children","ethcore_util::standard::result","",279,null],[11,"heap_size_of_children","collections::borrow","",72,null],[11,"heap_size_of_children","ethcore_util::standard","",449,null],[11,"heap_size_of_children","core::cell","",288,null],[11,"heap_size_of_children","","",286,null],[11,"heap_size_of_children","collections::vec","",46,null],[11,"heap_size_of_children","collections::vec_deque","",41,null],[11,"heap_size_of_children","collections::vec","",46,null],[11,"heap_size_of_children","std::collections::hash::set","",33,null],[11,"heap_size_of_children","std::collections::hash::map","",21,null],[11,"heap_size_of_children","core::marker","",314,null],[11,"heap_size_of_children","collections::linked_list","",53,null],[11,"heap_size_of_children","collections::btree::map","",326,null],[11,"heap_size_of_children","core::sync::atomic","",169,null],[11,"heap_size_of_children","","",180,null],[11,"heap_size_of_children","","",181,null],[11,"heap_size_of_children","std::net::ip","",107,null],[11,"heap_size_of_children","","",108,null],[8,"HeapSizeOf","ethcore_util::standard","",null,null],[10,"heap_size_of_children","","Measure the size of any heap-allocated structures that hang off this value, but not the\nspace taken up by the value itself (i.e. what size_of::&lt;T&gt; measures, more or less); that\nspace is handled by the implementation of HeapSizeOf for Box&lt;T&gt; below.",474,null],[11,"clone","itertools::adaptors","",475,null],[11,"new","","Creat a new `Interleave` iterator.",475,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"interleave"}}],[11,"next","","",475,null],[11,"clone","","",476,null],[11,"new","","Create a new `InterleaveShortest` iterator.",476,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"interleaveshortest"}}],[11,"next","","",476,null],[11,"size_hint","","",476,null],[11,"clone","","",477,null],[11,"new","","Iterator element type is `A`",477,{"inputs":[{"name":"i"}],"output":{"name":"putback"}}],[11,"with_value","","Create a `PutBack` along with the `value` to put back.",477,null],[11,"into_parts","","Split the `PutBack` into its parts.",477,null],[11,"put_back","","Put back a single value to the front of the iterator.",477,null],[11,"next","","",477,null],[11,"size_hint","","",477,null],[11,"new","","Iterator element type is `A`",478,{"inputs":[{"name":"i"}],"output":{"name":"putbackn"}}],[11,"put_back","","Puts x in front of the iterator.\nThe values are yielded in order.",478,null],[11,"next","","",478,null],[11,"size_hint","","",478,null],[11,"clone","","",478,null],[11,"clone","","",479,null],[11,"new","","Create a new cartesian product iterator",479,{"inputs":[{"name":"i"},{"name":"j"}],"output":{"name":"product"}}],[11,"next","","",479,null],[11,"size_hint","","",479,null],[11,"clone","","",480,null],[11,"new","","Create a new Batching iterator.",480,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"batching"}}],[11,"next","","",480,null],[11,"size_hint","","",480,null],[11,"clone","","",481,null],[11,"new","","Create a new `GroupBy` iterator.",481,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"groupby"}}],[11,"next","","",481,null],[11,"size_hint","","",481,null],[11,"clone","","",482,null],[11,"new","","Create a `Step` iterator.",482,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"step"}}],[11,"next","","",482,null],[11,"size_hint","","",482,null],[11,"clone","","",483,null],[11,"next","","",483,null],[11,"size_hint","","",483,null],[11,"clone","","",484,null],[11,"next","","",484,null],[11,"size_hint","","",484,null],[11,"clone","","",485,null],[11,"new","","Create a `MultiPeek` iterator.",485,{"inputs":[{"name":"i"}],"output":{"name":"multipeek"}}],[11,"peek","","Works exactly like *.next()* with the only difference that it doesn&#39;t\nadvance itself. *.peek()* can be called multiple times, to peek\nfurther ahead.",485,null],[11,"next","","",485,null],[11,"size_hint","","",485,null],[11,"clone","","",486,null],[11,"new","","Create a new `Coalesce`.",486,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"coalesce"}}],[11,"next","","",486,null],[11,"size_hint","","",486,null],[11,"clone","","",487,null],[11,"new","","Create a new `Dedup`.",487,{"inputs":[{"name":"i"}],"output":{"name":"dedup"}}],[11,"next","","",487,null],[11,"size_hint","","",487,null],[11,"clone","","",488,null],[11,"new","","Create a new `MendSlices`.",488,{"inputs":[{"name":"i"}],"output":{"name":"mendslices"}}],[11,"next","","",488,null],[11,"size_hint","","",488,null],[11,"new","","Create a new `TakeWhileRef` from a reference to clonable iterator.",489,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"takewhileref"}}],[11,"next","","",489,null],[11,"size_hint","","",489,null],[11,"clone","","",490,null],[11,"new","","Create a new `WhileSome&lt;I&gt;`.",490,{"inputs":[{"name":"i"}],"output":{"name":"whilesome"}}],[11,"next","","",490,null],[11,"size_hint","","",490,null],[11,"clone","","",491,null],[11,"new","","Create a new `Combinations` from a clonable iterator.",491,{"inputs":[{"name":"i"}],"output":{"name":"combinations"}}],[11,"next","","",491,null],[11,"size_hint","","",491,null],[11,"new","","Create a new `CombinationsN` from a clonable iterator.",492,{"inputs":[{"name":"i"},{"name":"usize"}],"output":{"name":"combinationsn"}}],[11,"next","","",492,null],[11,"clone","","",493,null],[11,"new","","Create a new `UniqueBy` iterator.",493,{"inputs":[{"name":"i"},{"name":"f"}],"output":{"name":"uniqueby"}}],[11,"next","","",493,null],[11,"size_hint","","",493,null],[11,"next","","",494,null],[11,"size_hint","","",494,null],[11,"clone","","",494,null],[11,"new","","Create a new `Flatten` iterator.",495,{"inputs":[{"name":"i"}],"output":{"name":"flatten"}}],[11,"next","","",495,null],[11,"next_back","","",495,null],[11,"clone","","",495,null],[11,"clone","itertools::format","",496,null],[11,"fmt","","",497,null],[11,"fmt","","",496,null],[11,"fmt","","",496,null],[11,"fmt","","",496,null],[11,"fmt","","",496,null],[11,"fmt","","",496,null],[11,"fmt","","",496,null],[11,"fmt","","",496,null],[11,"fmt","","",496,null],[11,"fmt","","",496,null],[11,"next","itertools::groupbylazy","",498,null],[11,"drop","","",499,null],[11,"next","","",499,null],[11,"next","","",500,null],[11,"drop","","",501,null],[11,"next","","",501,null],[11,"clone","itertools::intersperse","",502,null],[11,"new","","Create a new Intersperse iterator",502,null],[11,"next","","",502,null],[11,"size_hint","","",502,null],[11,"clone","itertools::islice","",503,null],[11,"new","","Create a new **ISlice**.",503,{"inputs":[{"name":"i"},{"name":"r"}],"output":{"name":"islice"}}],[11,"next","","",503,null],[11,"size_hint","","",503,null],[11,"clone","itertools::kmerge","",504,null],[11,"next","","",504,null],[11,"size_hint","","",504,null],[11,"fmt","itertools::linspace","",505,null],[11,"clone","","",505,null],[11,"next","","",505,null],[11,"size_hint","","",505,null],[11,"next_back","","",505,null],[11,"fmt","itertools::minmax","",506,null],[11,"eq","","",506,null],[11,"ne","","",506,null],[11,"into_option","","`into_option` creates an `Option` of type `(T, T)`. The returned `Option`\nhas variant `None` if and only if the `MinMaxResult` has variant\n`NoElements`. Otherwise variant `Some(x, y)` is returned where `x &lt;= y`.\nIf `MinMaxResult` has variant `OneElement(x)`, performing this operation\nwill make one clone of `x`.",506,null],[11,"clone","itertools::misc","",507,null],[11,"next","","",507,null],[11,"size_hint","","",507,null],[11,"next_back","","",507,null],[11,"start","ethcore_util::standard::ops","",273,null],[11,"end","","",274,null],[11,"start","","",272,null],[11,"end","","",272,null],[11,"clone","itertools::pad_tail","",508,null],[11,"new","","Create a new **PadUsing** iterator.",508,{"inputs":[{"name":"i"},{"name":"usize"},{"name":"f"}],"output":{"name":"padusing"}}],[11,"next","","",508,null],[11,"size_hint","","",508,null],[11,"next_back","","",508,null],[11,"new","itertools::rciter","Create a new RcIter.",509,{"inputs":[{"name":"i"}],"output":{"name":"rciter"}}],[11,"clone","","",509,null],[11,"next","","",509,null],[11,"size_hint","","",509,null],[11,"next_back","","",509,null],[11,"new","itertools::repeatn","Create a new **RepeatN** with **n** repetitions.",510,{"inputs":[{"name":"a"},{"name":"usize"}],"output":{"name":"repeatn"}}],[11,"next","","",510,null],[11,"size_hint","","",510,null],[11,"next_back","","",510,null],[11,"new","itertools::sources","Create a new `RepeatCall` from a closure.",511,{"inputs":[{"name":"f"}],"output":{"name":"repeatcall"}}],[11,"next","","",511,null],[11,"size_hint","","",511,null],[11,"next_back","","",511,null],[11,"clone","","",512,null],[11,"new","","Creates a new iterator with the specified closure as the &quot;iterator\nfunction&quot; and an initial state to eventually pass to the closure",512,{"inputs":[{"name":"st"},{"name":"f"}],"output":{"name":"unfold"}}],[11,"next","","",512,null],[11,"size_hint","","",512,null],[11,"from_ptr_len","itertools::stride","Create a Stride iterator from a raw pointer.",513,null],[11,"from_ptr_len","","Create a StrideMut iterator from a raw pointer.",514,null],[11,"from_slice","","Create Stride iterator from a slice and the element step count.",513,null],[11,"from_stride","","Create Stride iterator from an existing Stride iterator",513,{"inputs":[{"name":"stride"},{"name":"isize"}],"output":{"name":"stride"}}],[11,"swap_ends","","Swap the begin and end and reverse the stride,\nin effect reversing the iterator.",513,null],[11,"len","","Return the number of elements in the iterator.",513,null],[11,"get","","Return a reference to the element of a stride at the\ngiven index, or None if the index is out of bounds.",513,null],[11,"next","","",513,null],[11,"size_hint","","",513,null],[11,"next_back","","",513,null],[11,"index","","Return a reference to the element at a given index.",513,null],[11,"fmt","","",513,null],[11,"len","","",513,null],[11,"get_unchecked","","",513,null],[11,"from_slice","","Create Stride iterator from a slice and the element step count.",514,null],[11,"from_stride","","Create Stride iterator from an existing Stride iterator",514,{"inputs":[{"name":"stridemut"},{"name":"isize"}],"output":{"name":"stridemut"}}],[11,"swap_ends","","Swap the begin and end and reverse the stride,\nin effect reversing the iterator.",514,null],[11,"len","","Return the number of elements in the iterator.",514,null],[11,"get","","Return a reference to the element of a stride at the\ngiven index, or None if the index is out of bounds.",514,null],[11,"next","","",514,null],[11,"size_hint","","",514,null],[11,"next_back","","",514,null],[11,"index","","Return a reference to the element at a given index.",514,null],[11,"fmt","","",514,null],[11,"len","","",514,null],[11,"get_unchecked","","",514,null],[11,"clone","","",513,null],[11,"get_mut","","Return a mutable reference to the element of a stride at the\ngiven index, or None if the index is out of bounds.",514,null],[11,"index_mut","","Return a mutable reference to the element at a given index.",514,null],[11,"next","itertools::tee","",515,null],[11,"size_hint","","",515,null],[11,"clone","itertools::zip_eq","",516,null],[11,"next","","",516,null],[11,"size_hint","","",516,null],[11,"clone","itertools::zip_longest","",517,null],[11,"new","","Create a new `ZipLongest` iterator.",517,{"inputs":[{"name":"t"},{"name":"u"}],"output":{"name":"ziplongest"}}],[11,"next","","",517,null],[11,"size_hint","","",517,null],[11,"next_back","","",517,null],[11,"fmt","","",518,null],[11,"eq","","",518,null],[11,"ne","","",518,null],[11,"clone","","",518,null],[11,"clone","itertools::ziptuple","",519,null],[11,"new","","Create a new `Zip` from a tuple of iterators.",519,{"inputs":[{"name":"t"}],"output":{"name":"zip"}}],[11,"next","","",519,null],[11,"size_hint","","",519,null],[11,"next","","",519,null],[11,"size_hint","","",519,null],[11,"next","","",519,null],[11,"size_hint","","",519,null],[11,"next","","",519,null],[11,"size_hint","","",519,null],[11,"next","","",519,null],[11,"size_hint","","",519,null],[11,"next","","",519,null],[11,"size_hint","","",519,null],[11,"next","","",519,null],[11,"size_hint","","",519,null],[11,"next","","",519,null],[11,"size_hint","","",519,null],[11,"next","","",519,null],[11,"size_hint","","",519,null],[11,"clone","itertools::zipslices","",520,null],[11,"new","","Create a new `ZipSlices` from slices `a` and `b`.",520,null],[11,"from_slices","","Create a new `ZipSlices` from slices `a` and `b`.",520,{"inputs":[{"name":"t"},{"name":"u"}],"output":{"name":"zipslices"}}],[11,"next","","",520,null],[11,"size_hint","","",520,null],[11,"next_back","","",520,null],[11,"len","","",520,null],[11,"get_unchecked","","",520,null],[8,"Itertools","ethcore_util::standard","The trait `Itertools`: extra iterator adaptors and methods for iterators.",null,null],[11,"interleave","","Alternate elements from two iterators until both\nrun out.",521,null],[11,"interleave_shortest","","Alternate elements from two iterators until one of them runs out.",521,null],[11,"intersperse","","An iterator adaptor to insert a particular value\nbetween each element of the adapted iterator.",521,null],[11,"zip_longest","","Create an iterator which iterates over both this and the specified\niterator simultaneously, yielding pairs of two optional elements.",521,null],[11,"zip_eq","","Create an iterator which iterates over both this and the specified\niterator simultaneously, yielding pairs of elements.",521,null],[11,"batching","","A “meta iterator adaptor”. Its closure recives a reference to the iterator\nand may pick off as many elements as it likes, to produce the next iterator element.",521,null],[11,"group_by","","Group iterator elements. Consecutive elements that map to the same key (“runs”),\nare returned as the iterator elements of `GroupBy`.",521,null],[11,"group_by_lazy","","Return an iterable that can group iterator elements.\nConsecutive elements that map to the same key (“runs”), are assigned\nto the same group.",521,null],[11,"chunks_lazy","","Return an iterable that can chunk the iterator.",521,null],[11,"tee","","Split into an iterator pair that both yield all elements from\nthe original iterator.",521,null],[11,"slice","","Return a sliced iterator.",521,null],[11,"into_rc","","Return an iterator inside a `Rc&lt;RefCell&lt;_&gt;&gt;` wrapper.",521,null],[11,"step","","Return an iterator adaptor that steps `n` elements in the base iterator\nfor each iteration.",521,null],[11,"merge","","Return an iterator adaptor that merges the two base iterators in ascending order.\nIf both base iterators are sorted (ascending), the result is sorted.",521,null],[11,"merge_by","","Return an iterator adaptor that merges the two base iterators in order.\nThis is much like `.merge()` but allows for a custom ordering.",521,null],[11,"kmerge","","Return an iterator adaptor that flattens an iterator of iterators by\nmerging them in ascending order.",521,null],[11,"cartesian_product","","Return an iterator adaptor that iterates over the cartesian product of\nthe element sets of two iterators `self` and `J`.",521,null],[11,"multipeek","","Return an iterator adapter that allows peeking multiple values.",521,null],[11,"coalesce","","Return an iterator adaptor that uses the passed-in closure to\noptionally merge together consecutive elements.",521,null],[11,"dedup","","Remove duplicates from sections of consecutive identical elements.\nIf the iterator is sorted, all elements will be unique.",521,null],[11,"unique","","Return an iterator adaptor that filters out elements that have\nalready been produced once during the iteration. Duplicates\nare detected using hash and equality.",521,null],[11,"unique_by","","Return an iterator adaptor that filters out elements that have\nalready been produced once during the iteration.",521,null],[11,"mend_slices","","Return an iterator adaptor that joins together adjacent slices if possible.",521,null],[11,"take_while_ref","","Return an iterator adaptor that borrows from a `Clone`-able iterator\nto only pick off elements while the predicate `f` returns `true`.",521,null],[11,"while_some","","Return an iterator adaptor that filters `Option&lt;A&gt;` iterator elements\nand produces `A`. Stops on the first `None` encountered.",521,null],[11,"combinations","","Return an iterator adaptor that iterates over the combinations of\nthe elements from an iterator.",521,null],[11,"combinations_n","","Return an iterator adaptor that iterates over the `n`-length combinations of\nthe elements from an iterator.",521,null],[11,"pad_using","","Return an iterator adaptor that pads the sequence to a minimum length of\n`min` by filling missing elements using a closure `f`.",521,null],[11,"flatten","","Unravel a nested iterator.",521,null],[11,"map_fn","","Like regular `.map()`, specialized to using a simple function pointer instead,\nso that the resulting `Map` iterator value can be cloned.",521,null],[11,"find_position","","Find the position and value of the first element satisfying a predicate.",521,null],[11,"dropn","","Consume the first `n` elements of the iterator eagerly.",521,null],[11,"dropping","","Consume the first `n` elements from the iterator eagerly,\nand return the same iterator again.",521,null],[11,"dropping_back","","Consume the last `n` elements from the iterator eagerly,\nand return the same iterator again.",521,null],[11,"foreach","","Run the closure `f` eagerly on each element of the iterator.",521,null],[11,"collect_vec","","`.collect_vec()` is simply a type specialization of `.collect()`,\nfor convenience.",521,null],[11,"set_from","","Assign to each reference in `self` from the `from` iterator,\nstopping at the shortest of the two iterators.",521,null],[11,"join","","Combine all iterator elements into one String, seperated by `sep`.",521,null],[11,"format_default","","Format all iterator elements, separated by `sep`.",521,null],[11,"format","","Format all iterator elements, separated by `sep`.",521,null],[11,"fold_results","","Fold `Result` values from an iterator.",521,null],[11,"fold_options","","Fold `Option` values from an iterator.",521,null],[11,"fold1","","Accumulator of the elements in the iterator.",521,null],[11,"fold_while","","An iterator adaptor that applies a function, producing a single, final value.",521,null],[11,"is_empty_hint","","Tell if the iterator is empty or not according to its size hint.\nReturn `None` if the size hint does not tell, or return a `Some`\nvalue with the emptiness if it&#39;s possible to tell.",521,null],[11,"sorted","","Collect all iterator elements into a sorted vector in ascending order.",521,null],[11,"sorted_by","","Collect all iterator elements into a sorted vector.",521,null],[11,"sort_by","","**Deprecated:** renamed to `.sorted_by()`",521,null],[11,"partition_map","","Collect all iterator elements into one of two\npartitions. Unlike `Iterator::partition`, each partition may\nhave a distinct type.",521,null],[11,"minmax","","Return the minimum and maximum elements in the iterator.",521,null],[11,"minmax_by_key","","Return the minimum and maximum element of an iterator, as determined by\nthe specified function.",521,null],[11,"new","parking_lot::condvar","Creates a new condition variable which is ready to be waited on and\nnotified.",522,{"inputs":[],"output":{"name":"condvar"}}],[11,"notify_one","","Wakes up one blocked thread on this condvar.",522,null],[11,"notify_all","","Wakes up all blocked threads on this condvar.",522,null],[11,"wait","","Blocks the current thread until this condition variable receives a\nnotification.",522,null],[11,"wait_until","","Waits on this condition variable for a notification, timing out after\nthe specified time instant.",522,null],[11,"wait_for","","Waits on this condition variable for a notification, timing out after a\nspecified duration.",522,null],[11,"fmt","parking_lot::parking_lot","",523,null],[11,"eq","","",523,null],[11,"clone","","",523,null],[11,"fmt","","",524,null],[11,"eq","","",524,null],[11,"clone","","",524,null],[11,"clone","parking_lot::condvar","",525,null],[11,"eq","","",525,null],[11,"ne","","",525,null],[11,"fmt","","",525,null],[11,"timed_out","","Returns whether the wait was known to have timed out.",525,null],[11,"default","","",522,{"inputs":[],"output":{"name":"condvar"}}],[11,"new","parking_lot::mutex","Creates a new mutex in an unlocked state ready for use.",526,{"inputs":[{"name":"t"}],"output":{"name":"mutex"}}],[11,"into_inner","","Consumes this mutex, returning the underlying data.",526,null],[11,"lock","","Acquires a mutex, blocking the current thread until it is able to do so.",526,null],[11,"try_lock","","Attempts to acquire this lock.",526,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",526,null],[11,"default","","",526,{"inputs":[],"output":{"name":"mutex"}}],[11,"fmt","","",526,null],[11,"deref","","",527,null],[11,"deref_mut","","",527,null],[11,"drop","","",527,null],[11,"new","parking_lot::rwlock","Creates a new instance of an `RwLock&lt;T&gt;` which is unlocked.",528,{"inputs":[{"name":"t"}],"output":{"name":"rwlock"}}],[11,"into_inner","","Consumes this `RwLock`, returning the underlying data.",528,null],[11,"read","","Locks this rwlock with shared read access, blocking the current thread\nuntil it can be acquired.",528,null],[11,"try_read","","Attempts to acquire this rwlock with shared read access.",528,null],[11,"write","","Locks this rwlock with exclusive write access, blocking the current\nthread until it can be acquired.",528,null],[11,"try_write","","Attempts to lock this rwlock with exclusive write access.",528,null],[11,"get_mut","","Returns a mutable reference to the underlying data.",528,null],[11,"default","","",528,{"inputs":[],"output":{"name":"rwlock"}}],[11,"fmt","","",528,null],[11,"deref","","",529,null],[11,"drop","","",529,null],[11,"downgrade","","Atomically downgrades a write lock into a read lock without allowing any\nwriters to take exclusive access of the lock in the meantime.",530,null],[11,"deref","","",530,null],[11,"deref_mut","","",530,null],[11,"drop","","",530,null],[11,"poisoned","parking_lot::once","Returns whether the associated `Once` has been poisoned.",531,null],[11,"new","","Creates a new `Once` value.",532,{"inputs":[],"output":{"name":"once"}}],[11,"call_once","","Performs an initialization routine once and only once. The given closure\nwill be executed if this is the first time `call_once` has been called,\nand otherwise the routine will *not* be invoked.",532,null],[11,"call_once_force","","Performs the same function as `call_once` except ignores poisoning.",532,null],[11,"default","","",532,{"inputs":[],"output":{"name":"once"}}],[3,"Condvar","ethcore_util::standard","A Condition Variable",null,null],[3,"Mutex","","A mutual exclusion primitive useful for protecting shared data",null,null],[3,"MutexGuard","","An RAII implementation of a &quot;scoped lock&quot; of a mutex. When this structure is\ndropped (falls out of scope), the lock will be unlocked.",null,null],[3,"RwLock","","A reader-writer lock",null,null],[3,"RwLockReadGuard","","RAII structure used to release the shared read access of a lock when\ndropped.",null,null],[3,"RwLockWriteGuard","","RAII structure used to release the exclusive write access of a lock when\ndropped.",null,null],[0,"from_json","ethcore_util","Coversion from json.",null,null],[8,"FromJson","ethcore_util::from_json","Trait allowing conversion from a JSON value.",null,null],[10,"from_json","","Convert a JSON value to an instance of this type.",533,{"inputs":[{"name":"json"}],"output":{"name":"self"}}],[11,"from_json","bigint::uint","",534,{"inputs":[{"name":"json"}],"output":{"name":"self"}}],[0,"common","ethcore_util","Utils common types and macros global reexport.",null,null],[0,"numbers","","Utils number types.",null,null],[0,"error","","General error types for use in ethcore.",null,null],[3,"Mismatch","ethcore_util::error","Error indicating an expected value was not found.",null,null],[12,"expected","","Value expected.",535,null],[12,"found","","Value found.",535,null],[3,"OutOfBounds","","Error indicating value found is outside of a valid range.",null,null],[12,"min","","Minimum allowed value.",536,null],[12,"max","","Maximum allowed value.",536,null],[12,"found","","Value found.",536,null],[4,"BaseDataError","","Error in database subsystem.",null,null],[13,"NegativelyReferencedHash","","An entry was removed more times than inserted.",537,null],[13,"AlreadyExists","","A committed value was inserted more than once.",537,null],[4,"UtilError","","General error type which should be capable of representing all errors in ethcore.",null,null],[13,"Crypto","","Error concerning the crypto utility subsystem.",538,null],[13,"StdIo","","Error concerning the Rust standard library&#39;s IO subsystem.",538,null],[13,"FromHex","","Error concerning the hex conversion logic.",538,null],[13,"BaseData","","Error concerning the database abstraction logic.",538,null],[13,"Decoder","","Error concerning the RLP decoder.",538,null],[13,"SimpleString","","Miscellaneous error described by a string.",538,null],[13,"BadSize","","Error from a bad input size being given for the needed output.",538,null],[13,"Snappy","","Error from snappy.",538,null],[11,"fmt","","",537,null],[11,"fmt","","",537,null],[11,"fmt","","",538,null],[11,"fmt","","",538,null],[11,"eq","","",535,null],[11,"ne","","",535,null],[11,"fmt","","",535,null],[11,"fmt","","",535,null],[11,"clone","","",536,null],[11,"eq","","",536,null],[11,"ne","","",536,null],[11,"fmt","","",536,null],[11,"fmt","","",536,null],[11,"from","","",538,{"inputs":[{"name":"fromhexerror"}],"output":{"name":"utilerror"}}],[11,"from","","",538,{"inputs":[{"name":"basedataerror"}],"output":{"name":"utilerror"}}],[11,"from","","",538,{"inputs":[{"name":"error"}],"output":{"name":"utilerror"}}],[11,"from","","",538,{"inputs":[{"name":"cryptoerror"}],"output":{"name":"utilerror"}}],[11,"from","","",538,{"inputs":[{"name":"decodererror"}],"output":{"name":"utilerror"}}],[11,"from","","",538,{"inputs":[{"name":"string"}],"output":{"name":"utilerror"}}],[11,"from","","",538,{"inputs":[{"name":"invalidinput"}],"output":{"name":"utilerror"}}],[0,"hash","ethcore_util","General hash types, a fixed-size raw-data type used as the output of hash functions.",null,null],[3,"H32","ethcore_util::hash","Unformatted binary data of fixed length.",null,null],[12,"0","","",539,null],[3,"H64","","Unformatted binary data of fixed length.",null,null],[12,"0","","",540,null],[3,"H128","","Unformatted binary data of fixed length.",null,null],[12,"0","","",541,null],[3,"Address","","Unformatted binary data of fixed length.",null,null],[12,"0","","",542,null],[3,"H256","","Unformatted binary data of fixed length.",null,null],[12,"0","","",543,null],[3,"H264","","Unformatted binary data of fixed length.",null,null],[12,"0","","",544,null],[3,"H512","","Unformatted binary data of fixed length.",null,null],[12,"0","","",545,null],[3,"H520","","Unformatted binary data of fixed length.",null,null],[12,"0","","",546,null],[3,"H1024","","Unformatted binary data of fixed length.",null,null],[12,"0","","",547,null],[3,"H2048","","Unformatted binary data of fixed length.",null,null],[12,"0","","",548,null],[3,"PlainHasher","","Hasher that just takes 8 bytes of the provided value.\nMay only be used for keys which are 32 bytes.",null,null],[5,"clean_0x","","Return `s` without the `0x` at the beginning of it, if any.",null,{"inputs":[{"name":"str"}],"output":{"name":"str"}}],[5,"h256_from_hex","","Convert string `s` to an `H256`. Will panic if `s` is not 64 characters long or if any of\nthose characters are not 0-9, a-z or A-Z.",null,{"inputs":[{"name":"str"}],"output":{"name":"h256"}}],[5,"h256_from_u64","","Convert `n` to an `H256`, setting the rightmost 8 bytes.",null,{"inputs":[{"name":"u64"}],"output":{"name":"h256"}}],[5,"address_from_hex","","Convert string `s` to an `Address`. Will panic if `s` is not 40 characters long or if any of\nthose characters are not 0-9, a-z or A-Z.",null,{"inputs":[{"name":"str"}],"output":{"name":"address"}}],[5,"address_from_u64","","Convert `n` to an `Address`, setting the rightmost 8 bytes.",null,{"inputs":[{"name":"u64"}],"output":{"name":"address"}}],[6,"H256FastMap","","Specialized version of HashMap with H256 keys and fast hashing function.",null,null],[6,"H256FastSet","","Specialized version of HashSet with H256 keys and fast hashing function.",null,null],[8,"FixedHash","","Trait for a fixed-size byte array to be used as the output of hash functions.",null,null],[10,"new","","Create a new, zero-initialised, instance.",549,{"inputs":[],"output":{"name":"self"}}],[10,"zero","","Synonym for `new()`. Prefer to new as it&#39;s more readable.",549,{"inputs":[],"output":{"name":"self"}}],[10,"random","","Create a new, cryptographically random, instance.",549,{"inputs":[],"output":{"name":"self"}}],[10,"randomize","","Assign self have a cryptographically random value.",549,null],[10,"len","","Get the size of this object in bytes.",549,{"inputs":[],"output":{"name":"usize"}}],[10,"from_slice","","Convert a slice of bytes of length `len()` to an instance of this type.",549,null],[10,"clone_from_slice","","Assign self to be of the same value as a slice of bytes of length `len()`.",549,null],[10,"copy_to","","Copy the data of this object into some mutable slice of length `len()`.",549,null],[10,"shift_bloomed","","When interpreting self as a bloom output, augment (bit-wise OR) with the a bloomed version of `b`.",549,null],[11,"with_bloomed","","Same as `shift_bloomed` except that `self` is consumed and a new value returned.",549,null],[10,"bloom_part","","Bloom the current value using the bloom parameter `m`.",549,null],[10,"contains_bloomed","","Check to see whether this hash, interpreted as a bloom, contains the value `b` when bloomed.",549,null],[10,"contains","","Returns `true` if all bits set in `b` are also set in `self`.",549,null],[10,"is_zero","","Returns `true` if no bits are set.",549,null],[10,"low_u64","","Returns the lowest 8 bytes interpreted as a BigEndian integer.",549,null],[11,"from","","",543,{"inputs":[{"name":"u256"}],"output":{"name":"h256"}}],[11,"from","","",543,{"inputs":[{"name":"u256"}],"output":{"name":"h256"}}],[11,"from","bigint::uint","",534,{"inputs":[{"name":"h256"}],"output":{"name":"u256"}}],[11,"from","","",534,{"inputs":[{"name":"h256"}],"output":{"name":"u256"}}],[11,"from","ethcore_util::hash","",542,{"inputs":[{"name":"h256"}],"output":{"name":"address"}}],[11,"from","","",540,{"inputs":[{"name":"h256"}],"output":{"name":"h64"}}],[11,"from","","",543,{"inputs":[{"name":"address"}],"output":{"name":"h256"}}],[11,"from","","",543,{"inputs":[{"name":"address"}],"output":{"name":"h256"}}],[11,"from","","",539,null],[11,"deref","","",539,null],[11,"as_ref","","",539,null],[11,"deref_mut","","",539,null],[11,"new","","",539,{"inputs":[],"output":{"name":"h32"}}],[11,"zero","","",539,{"inputs":[],"output":{"name":"h32"}}],[11,"random","","",539,{"inputs":[],"output":{"name":"h32"}}],[11,"randomize","","",539,null],[11,"len","","",539,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",539,null],[11,"from_slice","","",539,null],[11,"copy_to","","",539,null],[11,"shift_bloomed","","",539,null],[11,"bloom_part","","",539,null],[11,"contains_bloomed","","",539,null],[11,"contains","","",539,null],[11,"is_zero","","",539,null],[11,"low_u64","","",539,null],[11,"from_str","","",539,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",539,null],[11,"fmt","","",539,null],[11,"clone","","",539,null],[11,"eq","","",539,null],[11,"cmp","","",539,null],[11,"partial_cmp","","",539,null],[11,"hash","","",539,null],[11,"index","","",539,null],[11,"index_mut","","",539,null],[11,"index","","",539,null],[11,"index_mut","","",539,null],[11,"index","","",539,null],[11,"index_mut","","",539,null],[11,"bitor","","",539,null],[11,"bitand","","",539,null],[11,"bitxor","","",539,null],[11,"hex","","Get a hex representation.",539,null],[11,"from_bloomed","","Construct new instance equal to the bloomed value of `b`.",539,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"default","","",539,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",539,{"inputs":[{"name":"u64"}],"output":{"name":"h32"}}],[11,"from","","",539,{"inputs":[{"name":"str"}],"output":{"name":"h32"}}],[11,"from","","",540,null],[11,"deref","","",540,null],[11,"as_ref","","",540,null],[11,"deref_mut","","",540,null],[11,"new","","",540,{"inputs":[],"output":{"name":"h64"}}],[11,"zero","","",540,{"inputs":[],"output":{"name":"h64"}}],[11,"random","","",540,{"inputs":[],"output":{"name":"h64"}}],[11,"randomize","","",540,null],[11,"len","","",540,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",540,null],[11,"from_slice","","",540,null],[11,"copy_to","","",540,null],[11,"shift_bloomed","","",540,null],[11,"bloom_part","","",540,null],[11,"contains_bloomed","","",540,null],[11,"contains","","",540,null],[11,"is_zero","","",540,null],[11,"low_u64","","",540,null],[11,"from_str","","",540,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",540,null],[11,"fmt","","",540,null],[11,"clone","","",540,null],[11,"eq","","",540,null],[11,"cmp","","",540,null],[11,"partial_cmp","","",540,null],[11,"hash","","",540,null],[11,"index","","",540,null],[11,"index_mut","","",540,null],[11,"index","","",540,null],[11,"index_mut","","",540,null],[11,"index","","",540,null],[11,"index_mut","","",540,null],[11,"bitor","","",540,null],[11,"bitand","","",540,null],[11,"bitxor","","",540,null],[11,"hex","","Get a hex representation.",540,null],[11,"from_bloomed","","Construct new instance equal to the bloomed value of `b`.",540,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"default","","",540,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",540,{"inputs":[{"name":"u64"}],"output":{"name":"h64"}}],[11,"from","","",540,{"inputs":[{"name":"str"}],"output":{"name":"h64"}}],[11,"from","","",541,null],[11,"deref","","",541,null],[11,"as_ref","","",541,null],[11,"deref_mut","","",541,null],[11,"new","","",541,{"inputs":[],"output":{"name":"h128"}}],[11,"zero","","",541,{"inputs":[],"output":{"name":"h128"}}],[11,"random","","",541,{"inputs":[],"output":{"name":"h128"}}],[11,"randomize","","",541,null],[11,"len","","",541,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",541,null],[11,"from_slice","","",541,null],[11,"copy_to","","",541,null],[11,"shift_bloomed","","",541,null],[11,"bloom_part","","",541,null],[11,"contains_bloomed","","",541,null],[11,"contains","","",541,null],[11,"is_zero","","",541,null],[11,"low_u64","","",541,null],[11,"from_str","","",541,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",541,null],[11,"fmt","","",541,null],[11,"clone","","",541,null],[11,"eq","","",541,null],[11,"cmp","","",541,null],[11,"partial_cmp","","",541,null],[11,"hash","","",541,null],[11,"index","","",541,null],[11,"index_mut","","",541,null],[11,"index","","",541,null],[11,"index_mut","","",541,null],[11,"index","","",541,null],[11,"index_mut","","",541,null],[11,"bitor","","",541,null],[11,"bitand","","",541,null],[11,"bitxor","","",541,null],[11,"hex","","Get a hex representation.",541,null],[11,"from_bloomed","","Construct new instance equal to the bloomed value of `b`.",541,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"default","","",541,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",541,{"inputs":[{"name":"u64"}],"output":{"name":"h128"}}],[11,"from","","",541,{"inputs":[{"name":"str"}],"output":{"name":"h128"}}],[11,"from","","",542,null],[11,"deref","","",542,null],[11,"as_ref","","",542,null],[11,"deref_mut","","",542,null],[11,"new","","",542,{"inputs":[],"output":{"name":"address"}}],[11,"zero","","",542,{"inputs":[],"output":{"name":"address"}}],[11,"random","","",542,{"inputs":[],"output":{"name":"address"}}],[11,"randomize","","",542,null],[11,"len","","",542,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",542,null],[11,"from_slice","","",542,null],[11,"copy_to","","",542,null],[11,"shift_bloomed","","",542,null],[11,"bloom_part","","",542,null],[11,"contains_bloomed","","",542,null],[11,"contains","","",542,null],[11,"is_zero","","",542,null],[11,"low_u64","","",542,null],[11,"from_str","","",542,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",542,null],[11,"fmt","","",542,null],[11,"clone","","",542,null],[11,"eq","","",542,null],[11,"cmp","","",542,null],[11,"partial_cmp","","",542,null],[11,"hash","","",542,null],[11,"index","","",542,null],[11,"index_mut","","",542,null],[11,"index","","",542,null],[11,"index_mut","","",542,null],[11,"index","","",542,null],[11,"index_mut","","",542,null],[11,"bitor","","",542,null],[11,"bitand","","",542,null],[11,"bitxor","","",542,null],[11,"hex","","Get a hex representation.",542,null],[11,"from_bloomed","","Construct new instance equal to the bloomed value of `b`.",542,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"default","","",542,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",542,{"inputs":[{"name":"u64"}],"output":{"name":"address"}}],[11,"from","","",542,{"inputs":[{"name":"str"}],"output":{"name":"address"}}],[11,"from","","",543,null],[11,"deref","","",543,null],[11,"as_ref","","",543,null],[11,"deref_mut","","",543,null],[11,"new","","",543,{"inputs":[],"output":{"name":"h256"}}],[11,"zero","","",543,{"inputs":[],"output":{"name":"h256"}}],[11,"random","","",543,{"inputs":[],"output":{"name":"h256"}}],[11,"randomize","","",543,null],[11,"len","","",543,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",543,null],[11,"from_slice","","",543,null],[11,"copy_to","","",543,null],[11,"shift_bloomed","","",543,null],[11,"bloom_part","","",543,null],[11,"contains_bloomed","","",543,null],[11,"contains","","",543,null],[11,"is_zero","","",543,null],[11,"low_u64","","",543,null],[11,"from_str","","",543,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",543,null],[11,"fmt","","",543,null],[11,"clone","","",543,null],[11,"eq","","",543,null],[11,"cmp","","",543,null],[11,"partial_cmp","","",543,null],[11,"hash","","",543,null],[11,"index","","",543,null],[11,"index_mut","","",543,null],[11,"index","","",543,null],[11,"index_mut","","",543,null],[11,"index","","",543,null],[11,"index_mut","","",543,null],[11,"bitor","","",543,null],[11,"bitand","","",543,null],[11,"bitxor","","",543,null],[11,"hex","","Get a hex representation.",543,null],[11,"from_bloomed","","Construct new instance equal to the bloomed value of `b`.",543,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"default","","",543,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",543,{"inputs":[{"name":"u64"}],"output":{"name":"h256"}}],[11,"from","","",543,{"inputs":[{"name":"str"}],"output":{"name":"h256"}}],[11,"from","","",544,null],[11,"deref","","",544,null],[11,"as_ref","","",544,null],[11,"deref_mut","","",544,null],[11,"new","","",544,{"inputs":[],"output":{"name":"h264"}}],[11,"zero","","",544,{"inputs":[],"output":{"name":"h264"}}],[11,"random","","",544,{"inputs":[],"output":{"name":"h264"}}],[11,"randomize","","",544,null],[11,"len","","",544,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",544,null],[11,"from_slice","","",544,null],[11,"copy_to","","",544,null],[11,"shift_bloomed","","",544,null],[11,"bloom_part","","",544,null],[11,"contains_bloomed","","",544,null],[11,"contains","","",544,null],[11,"is_zero","","",544,null],[11,"low_u64","","",544,null],[11,"from_str","","",544,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",544,null],[11,"fmt","","",544,null],[11,"clone","","",544,null],[11,"eq","","",544,null],[11,"cmp","","",544,null],[11,"partial_cmp","","",544,null],[11,"hash","","",544,null],[11,"index","","",544,null],[11,"index_mut","","",544,null],[11,"index","","",544,null],[11,"index_mut","","",544,null],[11,"index","","",544,null],[11,"index_mut","","",544,null],[11,"bitor","","",544,null],[11,"bitand","","",544,null],[11,"bitxor","","",544,null],[11,"hex","","Get a hex representation.",544,null],[11,"from_bloomed","","Construct new instance equal to the bloomed value of `b`.",544,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"default","","",544,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",544,{"inputs":[{"name":"u64"}],"output":{"name":"h264"}}],[11,"from","","",544,{"inputs":[{"name":"str"}],"output":{"name":"h264"}}],[11,"from","","",545,null],[11,"deref","","",545,null],[11,"as_ref","","",545,null],[11,"deref_mut","","",545,null],[11,"new","","",545,{"inputs":[],"output":{"name":"h512"}}],[11,"zero","","",545,{"inputs":[],"output":{"name":"h512"}}],[11,"random","","",545,{"inputs":[],"output":{"name":"h512"}}],[11,"randomize","","",545,null],[11,"len","","",545,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",545,null],[11,"from_slice","","",545,null],[11,"copy_to","","",545,null],[11,"shift_bloomed","","",545,null],[11,"bloom_part","","",545,null],[11,"contains_bloomed","","",545,null],[11,"contains","","",545,null],[11,"is_zero","","",545,null],[11,"low_u64","","",545,null],[11,"from_str","","",545,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",545,null],[11,"fmt","","",545,null],[11,"clone","","",545,null],[11,"eq","","",545,null],[11,"cmp","","",545,null],[11,"partial_cmp","","",545,null],[11,"hash","","",545,null],[11,"index","","",545,null],[11,"index_mut","","",545,null],[11,"index","","",545,null],[11,"index_mut","","",545,null],[11,"index","","",545,null],[11,"index_mut","","",545,null],[11,"bitor","","",545,null],[11,"bitand","","",545,null],[11,"bitxor","","",545,null],[11,"hex","","Get a hex representation.",545,null],[11,"from_bloomed","","Construct new instance equal to the bloomed value of `b`.",545,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"default","","",545,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",545,{"inputs":[{"name":"u64"}],"output":{"name":"h512"}}],[11,"from","","",545,{"inputs":[{"name":"str"}],"output":{"name":"h512"}}],[11,"from","","",546,null],[11,"deref","","",546,null],[11,"as_ref","","",546,null],[11,"deref_mut","","",546,null],[11,"new","","",546,{"inputs":[],"output":{"name":"h520"}}],[11,"zero","","",546,{"inputs":[],"output":{"name":"h520"}}],[11,"random","","",546,{"inputs":[],"output":{"name":"h520"}}],[11,"randomize","","",546,null],[11,"len","","",546,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",546,null],[11,"from_slice","","",546,null],[11,"copy_to","","",546,null],[11,"shift_bloomed","","",546,null],[11,"bloom_part","","",546,null],[11,"contains_bloomed","","",546,null],[11,"contains","","",546,null],[11,"is_zero","","",546,null],[11,"low_u64","","",546,null],[11,"from_str","","",546,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",546,null],[11,"fmt","","",546,null],[11,"clone","","",546,null],[11,"eq","","",546,null],[11,"cmp","","",546,null],[11,"partial_cmp","","",546,null],[11,"hash","","",546,null],[11,"index","","",546,null],[11,"index_mut","","",546,null],[11,"index","","",546,null],[11,"index_mut","","",546,null],[11,"index","","",546,null],[11,"index_mut","","",546,null],[11,"bitor","","",546,null],[11,"bitand","","",546,null],[11,"bitxor","","",546,null],[11,"hex","","Get a hex representation.",546,null],[11,"from_bloomed","","Construct new instance equal to the bloomed value of `b`.",546,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"default","","",546,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",546,{"inputs":[{"name":"u64"}],"output":{"name":"h520"}}],[11,"from","","",546,{"inputs":[{"name":"str"}],"output":{"name":"h520"}}],[11,"from","","",547,null],[11,"deref","","",547,null],[11,"as_ref","","",547,null],[11,"deref_mut","","",547,null],[11,"new","","",547,{"inputs":[],"output":{"name":"h1024"}}],[11,"zero","","",547,{"inputs":[],"output":{"name":"h1024"}}],[11,"random","","",547,{"inputs":[],"output":{"name":"h1024"}}],[11,"randomize","","",547,null],[11,"len","","",547,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",547,null],[11,"from_slice","","",547,null],[11,"copy_to","","",547,null],[11,"shift_bloomed","","",547,null],[11,"bloom_part","","",547,null],[11,"contains_bloomed","","",547,null],[11,"contains","","",547,null],[11,"is_zero","","",547,null],[11,"low_u64","","",547,null],[11,"from_str","","",547,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",547,null],[11,"fmt","","",547,null],[11,"clone","","",547,null],[11,"eq","","",547,null],[11,"cmp","","",547,null],[11,"partial_cmp","","",547,null],[11,"hash","","",547,null],[11,"index","","",547,null],[11,"index_mut","","",547,null],[11,"index","","",547,null],[11,"index_mut","","",547,null],[11,"index","","",547,null],[11,"index_mut","","",547,null],[11,"bitor","","",547,null],[11,"bitand","","",547,null],[11,"bitxor","","",547,null],[11,"hex","","Get a hex representation.",547,null],[11,"from_bloomed","","Construct new instance equal to the bloomed value of `b`.",547,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"default","","",547,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",547,{"inputs":[{"name":"u64"}],"output":{"name":"h1024"}}],[11,"from","","",547,{"inputs":[{"name":"str"}],"output":{"name":"h1024"}}],[11,"from","","",548,null],[11,"deref","","",548,null],[11,"as_ref","","",548,null],[11,"deref_mut","","",548,null],[11,"new","","",548,{"inputs":[],"output":{"name":"h2048"}}],[11,"zero","","",548,{"inputs":[],"output":{"name":"h2048"}}],[11,"random","","",548,{"inputs":[],"output":{"name":"h2048"}}],[11,"randomize","","",548,null],[11,"len","","",548,{"inputs":[],"output":{"name":"usize"}}],[11,"clone_from_slice","","",548,null],[11,"from_slice","","",548,null],[11,"copy_to","","",548,null],[11,"shift_bloomed","","",548,null],[11,"bloom_part","","",548,null],[11,"contains_bloomed","","",548,null],[11,"contains","","",548,null],[11,"is_zero","","",548,null],[11,"low_u64","","",548,null],[11,"from_str","","",548,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"fmt","","",548,null],[11,"fmt","","",548,null],[11,"clone","","",548,null],[11,"eq","","",548,null],[11,"cmp","","",548,null],[11,"partial_cmp","","",548,null],[11,"hash","","",548,null],[11,"index","","",548,null],[11,"index_mut","","",548,null],[11,"index","","",548,null],[11,"index_mut","","",548,null],[11,"index","","",548,null],[11,"index_mut","","",548,null],[11,"bitor","","",548,null],[11,"bitand","","",548,null],[11,"bitxor","","",548,null],[11,"hex","","Get a hex representation.",548,null],[11,"from_bloomed","","Construct new instance equal to the bloomed value of `b`.",548,{"inputs":[{"name":"t"}],"output":{"name":"self"}}],[11,"default","","",548,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",548,{"inputs":[{"name":"u64"}],"output":{"name":"h2048"}}],[11,"from","","",548,{"inputs":[{"name":"str"}],"output":{"name":"h2048"}}],[11,"default","","",550,{"inputs":[],"output":{"name":"plainhasher"}}],[11,"finish","","",550,null],[11,"write","","",550,null],[0,"bytes","ethcore_util","Unified interfaces for bytes operations on basic types",null,null],[3,"PrettySlice","ethcore_util::bytes","Slice pretty print helper",null,null],[4,"BytesRef","","A byte collection reference that can either be a slice or a vector",null,null],[13,"Flexible","","This is a reference to a vector",551,null],[13,"Fixed","","This is a reference to a slice",551,null],[6,"Bytes","","Vector of bytes",null,null],[8,"ToPretty","","Trait to allow a type to be pretty-printed in `format!`, where unoverridable\ndefaults cannot otherwise be avoided.",null,null],[10,"pretty","","Convert a type into a derivative form in order to make `format!` print it prettily.",552,null],[11,"to_hex","","Express the object as a hex string.",552,null],[8,"BytesConvertable","","Slice of bytes to underlying memory",null,null],[10,"as_slice","","Get the underlying byte-wise representation of the value.",553,null],[11,"to_bytes","","Get a copy of the underlying byte-wise representation.",553,null],[8,"Populatable","","Simple trait to allow for raw population of a Sized object from a byte slice.",null,null],[11,"populate_raw","","Copies a bunch of bytes `d` to `self`, overwriting as necessary.",554,null],[11,"copy_raw","","Copies a bunch of bytes `d` to `self`, overwriting as necessary.",554,null],[11,"populate_raw_from","","Copies the raw representation of an object `d` to `self`, overwriting as necessary.",554,null],[11,"copy_raw_from","","Copies the raw representation of an object `d` to `self`, overwriting as necessary.",554,null],[10,"as_slice_mut","","Get the raw slice for this object.",554,null],[11,"fmt","","",555,null],[11,"fmt","","",555,null],[11,"pretty","","",556,null],[11,"deref","","",551,null],[11,"deref_mut","","",551,null],[0,"rlp","ethcore_util","Rlp serialization module",null,null],[11,"new","elastic_array","",557,{"inputs":[],"output":{"name":"elasticarray1024"}}],[11,"push","","",557,null],[11,"pop","","",557,null],[11,"clear","","",557,null],[11,"append_slice","","",557,null],[11,"to_vec","","",557,null],[11,"insert_slice","","",557,null],[11,"eq","","",558,null],[11,"eq","","",558,null],[11,"hash","","",558,null],[11,"new","","",558,{"inputs":[],"output":{"name":"elasticarray2"}}],[11,"push","","",558,null],[11,"pop","","",558,null],[11,"clear","","",558,null],[11,"append_slice","","",558,null],[11,"to_vec","","",558,null],[11,"insert_slice","","",558,null],[11,"deref","","",558,null],[11,"borrow","","",558,null],[11,"deref_mut","","",558,null],[11,"eq","","",559,null],[11,"eq","","",559,null],[11,"hash","","",559,null],[11,"new","","",559,{"inputs":[],"output":{"name":"elasticarray4"}}],[11,"push","","",559,null],[11,"pop","","",559,null],[11,"clear","","",559,null],[11,"append_slice","","",559,null],[11,"to_vec","","",559,null],[11,"insert_slice","","",559,null],[11,"deref","","",559,null],[11,"borrow","","",559,null],[11,"deref_mut","","",559,null],[11,"eq","","",560,null],[11,"eq","","",560,null],[11,"hash","","",560,null],[11,"new","","",560,{"inputs":[],"output":{"name":"elasticarray8"}}],[11,"push","","",560,null],[11,"pop","","",560,null],[11,"clear","","",560,null],[11,"append_slice","","",560,null],[11,"to_vec","","",560,null],[11,"insert_slice","","",560,null],[11,"deref","","",560,null],[11,"borrow","","",560,null],[11,"deref_mut","","",560,null],[11,"eq","","",561,null],[11,"eq","","",561,null],[11,"hash","","",561,null],[11,"new","","",561,{"inputs":[],"output":{"name":"elasticarray16"}}],[11,"push","","",561,null],[11,"pop","","",561,null],[11,"clear","","",561,null],[11,"append_slice","","",561,null],[11,"to_vec","","",561,null],[11,"insert_slice","","",561,null],[11,"deref","","",561,null],[11,"borrow","","",561,null],[11,"deref_mut","","",561,null],[11,"eq","","",562,null],[11,"eq","","",562,null],[11,"hash","","",562,null],[11,"new","","",562,{"inputs":[],"output":{"name":"elasticarray32"}}],[11,"push","","",562,null],[11,"pop","","",562,null],[11,"clear","","",562,null],[11,"append_slice","","",562,null],[11,"to_vec","","",562,null],[11,"insert_slice","","",562,null],[11,"deref","","",562,null],[11,"borrow","","",562,null],[11,"deref_mut","","",562,null],[11,"eq","","",563,null],[11,"eq","","",563,null],[11,"hash","","",563,null],[11,"new","","",563,{"inputs":[],"output":{"name":"elasticarray64"}}],[11,"push","","",563,null],[11,"pop","","",563,null],[11,"clear","","",563,null],[11,"append_slice","","",563,null],[11,"to_vec","","",563,null],[11,"insert_slice","","",563,null],[11,"deref","","",563,null],[11,"borrow","","",563,null],[11,"deref_mut","","",563,null],[11,"eq","","",564,null],[11,"eq","","",564,null],[11,"hash","","",564,null],[11,"new","","",564,{"inputs":[],"output":{"name":"elasticarray128"}}],[11,"push","","",564,null],[11,"pop","","",564,null],[11,"clear","","",564,null],[11,"append_slice","","",564,null],[11,"to_vec","","",564,null],[11,"insert_slice","","",564,null],[11,"deref","","",564,null],[11,"borrow","","",564,null],[11,"deref_mut","","",564,null],[11,"eq","","",565,null],[11,"eq","","",565,null],[11,"hash","","",565,null],[11,"new","","",565,{"inputs":[],"output":{"name":"elasticarray256"}}],[11,"push","","",565,null],[11,"pop","","",565,null],[11,"clear","","",565,null],[11,"append_slice","","",565,null],[11,"to_vec","","",565,null],[11,"insert_slice","","",565,null],[11,"deref","","",565,null],[11,"borrow","","",565,null],[11,"deref_mut","","",565,null],[11,"eq","","",566,null],[11,"eq","","",566,null],[11,"hash","","",566,null],[11,"new","","",566,{"inputs":[],"output":{"name":"elasticarray512"}}],[11,"push","","",566,null],[11,"pop","","",566,null],[11,"clear","","",566,null],[11,"append_slice","","",566,null],[11,"to_vec","","",566,null],[11,"insert_slice","","",566,null],[11,"deref","","",566,null],[11,"borrow","","",566,null],[11,"deref_mut","","",566,null],[11,"eq","","",557,null],[11,"eq","","",557,null],[11,"hash","","",557,null],[11,"deref","","",557,null],[11,"borrow","","",557,null],[11,"deref_mut","","",557,null],[11,"eq","","",567,null],[11,"eq","","",567,null],[11,"hash","","",567,null],[11,"new","","",567,{"inputs":[],"output":{"name":"elasticarray2048"}}],[11,"push","","",567,null],[11,"pop","","",567,null],[11,"clear","","",567,null],[11,"append_slice","","",567,null],[11,"to_vec","","",567,null],[11,"insert_slice","","",567,null],[11,"deref","","",567,null],[11,"borrow","","",567,null],[11,"deref_mut","","",567,null],[3,"ElasticArray1024","ethcore_util::rlp","",null,null],[3,"UntrustedRlp","","Data-oriented view onto rlp-slice.",null,null],[3,"UntrustedRlpIterator","","Iterator over rlp-slice list elements.",null,null],[3,"PayloadInfo","","Stores basic information about item",null,null],[12,"header_len","","Header length in bytes",568,null],[12,"value_len","","Value length in bytes",568,null],[3,"Rlp","","Data-oriented view onto trusted rlp-slice.",null,null],[3,"RlpIterator","","Iterator over trusted rlp-slice list elements.",null,null],[3,"RlpStream","","Appendable rlp encoder.",null,null],[4,"DecoderError","","Error concerning the RLP decoder.",null,null],[13,"FromBytesError","","Couldn&#39;t convert given bytes to an instance of required type.",569,null],[13,"RlpIsTooBig","","Data has additional bytes at the end of the valid RLP fragment.",569,null],[13,"RlpIsTooShort","","Data has too few bytes for valid RLP.",569,null],[13,"RlpExpectedToBeList","","Expect an encoded list, RLP was something else.",569,null],[13,"RlpExpectedToBeData","","Expect encoded data, RLP was something else.",569,null],[13,"RlpIncorrectListLen","","Expected a different size list.",569,null],[13,"RlpDataLenWithZeroPrefix","","Data length number has a prefixed zero byte, invalid for numbers.",569,null],[13,"RlpListLenWithZeroPrefix","","List length number has a prefixed zero byte, invalid for numbers.",569,null],[13,"RlpInvalidIndirection","","Non-canonical (longer than necessary) representation used for data or list.",569,null],[13,"RlpInconsistentLengthAndData","","Declared length is inconsistent with data specified after.",569,null],[13,"Custom","","Custom rlp decoding error.",569,null],[4,"Prototype","","RLP prototype",null,null],[13,"Null","","Empty",570,null],[13,"Data","","Value",570,null],[13,"List","","List",570,null],[4,"RlpType","","Type of RLP indicating its origin database.",null,null],[13,"Blocks","","RLP used in blocks database.",571,null],[13,"Snapshot","","RLP used in snapshots.",571,null],[5,"decode","","Shortcut function to decode trusted rlp",null,null],[5,"encode","","Shortcut function to encode structure into rlp.",null,{"inputs":[{"name":"e"}],"output":{"name":"elasticarray1024"}}],[0,"rlptraits","","Common RLP traits",null,null],[8,"Decoder","ethcore_util::rlp::rlptraits","Type is able to decode RLP.",null,null],[10,"read_value","","Read a value from the RLP into a given type.",572,null],[10,"as_rlp","","Get underlying `UntrustedRLP` object.",572,null],[10,"as_raw","","Get underlying raw bytes slice.",572,null],[8,"Decodable","","RLP decodable trait",null,null],[10,"decode","","Decode a value from RLP bytes",573,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"RlpDecodable","","Internal helper trait. Implement `Decodable` for custom types.",null,null],[10,"decode","","Decode a value from RLP bytes",574,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[8,"View","","A view into RLP encoded data",null,null],[16,"Prototype","","RLP prototype type",575,null],[16,"PayloadInfo","","Payload info type",575,null],[16,"Data","","Data type",575,null],[16,"Item","","Item type",575,null],[16,"Iter","","Iterator type",575,null],[10,"new","","Creates a new instance of `Rlp` reader",575,null],[10,"as_raw","","The raw data of the RLP as slice.",575,null],[10,"prototype","","Get the prototype of the RLP.",575,null],[10,"payload_info","","Get payload info.",575,null],[10,"data","","Get underlieing data.",575,null],[10,"item_count","","Returns number of RLP items.",575,null],[10,"size","","Returns the number of bytes in the data, or zero if it isn&#39;t data.",575,null],[10,"at","","Get view onto RLP-slice at index.",575,null],[10,"is_null","","No value",575,null],[10,"is_empty","","Contains a zero-length string or zero-length list.",575,null],[10,"is_list","","List value",575,null],[10,"is_data","","String value",575,null],[10,"is_int","","Int value",575,null],[10,"iter","","Get iterator over rlp-slices",575,null],[10,"as_val","","Decode data into an object",575,null],[10,"val_at","","Decode data at given list index into an object",575,null],[8,"Encoder","","Raw RLP encoder",null,null],[10,"emit_value","","Write a value represented as bytes",576,null],[10,"emit_raw","","Write raw preencoded data to the output",576,null],[8,"ByteEncodable","","Primitive data type encodable to RLP",null,null],[10,"to_bytes","","Serialize this object to given byte container",577,null],[10,"bytes_len","","Get size of serialised data in bytes",577,null],[8,"Encodable","","Structure encodable to RLP. Implement this trait for",null,null],[10,"rlp_append","","Append a value to the stream",578,null],[11,"rlp_bytes","","Get rlp-encoded bytes for this instance",578,null],[11,"rlp_sha3","","Get the hash or RLP encoded representation",578,null],[8,"RlpEncodable","","Encodable wrapper trait required to handle special case of encoding a &amp;[u8] as string and not as list",null,null],[10,"rlp_append","","Append a value to the stream",579,null],[8,"Stream","","RLP encoding stream",null,null],[10,"new","","Initializes instance of empty `Stream`.",580,{"inputs":[],"output":{"name":"self"}}],[10,"new_list","","Initializes the `Stream` as a list.",580,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[10,"append","","Apends value to the end of stream, chainable.",580,null],[10,"begin_list","","Declare appending the list of given size, chainable.",580,null],[10,"append_empty_data","","Apends null to the end of stream, chainable.",580,null],[10,"append_raw","","Appends raw (pre-serialised) RLP data. Use with caution. Chainable.",580,null],[10,"clear","","Clear the output stream so far.",580,null],[10,"is_finished","","Returns true if stream doesnt expect any more items.",580,null],[10,"as_raw","","Get raw encoded bytes",580,null],[10,"out","","Streams out encoded bytes.",580,null],[8,"Compressible","","Trait for compressing and decompressing RLP by replacement of common terms.",null,null],[16,"DataType","","Indicates the origin of RLP to be compressed.",581,null],[10,"compress","","Compress given RLP type using appropriate methods.",581,null],[10,"decompress","","Decompress given RLP type using appropriate methods.",581,null],[11,"eq","ethcore_util::rlp","",569,null],[11,"ne","","",569,null],[11,"fmt","","",569,null],[11,"description","","",569,null],[11,"fmt","","",569,null],[11,"from","","",569,{"inputs":[{"name":"frombyteserror"}],"output":{"name":"decodererror"}}],[11,"from","","",582,{"inputs":[{"name":"untrustedrlp"}],"output":{"name":"rlp"}}],[11,"fmt","","",582,null],[11,"fmt","","",582,null],[11,"new","","Create a new instance of `Rlp`",582,null],[11,"as_raw","","",582,null],[11,"prototype","","",582,null],[11,"payload_info","","",582,null],[11,"data","","",582,null],[11,"item_count","","",582,null],[11,"size","","",582,null],[11,"at","","",582,null],[11,"is_null","","",582,null],[11,"is_empty","","",582,null],[11,"is_list","","",582,null],[11,"is_data","","",582,null],[11,"is_int","","",582,null],[11,"iter","","",582,null],[11,"as_val","","",582,null],[11,"val_at","","",582,null],[11,"as_val","","Decode into an object",582,null],[11,"val_at","","Decode list item at given index into an object",582,null],[11,"next","","",583,null],[11,"fmt","","",570,null],[11,"total","","Total size of the RLP.",568,null],[11,"from","","Create a new object from the given bytes RLP. The bytes",568,null],[11,"fmt","","",584,null],[11,"clone","","",584,null],[11,"fmt","","",584,null],[11,"new","","",584,null],[11,"as_raw","","",584,null],[11,"prototype","","",584,null],[11,"payload_info","","",584,null],[11,"data","","",584,null],[11,"item_count","","",584,null],[11,"size","","",584,null],[11,"at","","",584,null],[11,"is_null","","",584,null],[11,"is_empty","","",584,null],[11,"is_list","","",584,null],[11,"is_data","","",584,null],[11,"is_int","","",584,null],[11,"iter","","",584,null],[11,"as_val","","",584,null],[11,"val_at","","",584,null],[11,"next","","",585,null],[11,"decode","collections::vec","",46,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"decode","ethcore_util::standard::option","",259,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"decode","collections::vec","",46,{"inputs":[{"name":"d"}],"output":{"name":"result"}}],[11,"default","ethcore_util::rlp","",586,{"inputs":[],"output":{"name":"self"}}],[11,"new","","",586,{"inputs":[],"output":{"name":"self"}}],[11,"new_list","","",586,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"append","","",586,null],[11,"begin_list","","",586,null],[11,"append_empty_data","","",586,null],[11,"append_raw","","",586,null],[11,"clear","","",586,null],[11,"is_finished","","",586,null],[11,"as_raw","","",586,null],[11,"out","","",586,null],[11,"drain","","Drain the object and return the underlying ElasticArray.",586,null],[11,"rlp_append","collections::vec","",46,null],[11,"rlp_append","","",46,null],[11,"rlp_append","ethcore_util::standard::option","",259,null],[11,"compress","ethcore_util::rlp","",584,null],[11,"decompress","","",584,null],[17,"NULL_RLP","","The RLP encoded empty data (used to mean &quot;null value&quot;).",null,null],[17,"EMPTY_LIST_RLP","","The RLP encoded empty list.",null,null],[17,"SHA3_NULL_RLP","","The SHA3 of the RLP encoding of empty data.",null,null],[17,"SHA3_EMPTY_LIST_RLP","","The SHA3 of the RLP encoding of empty list.",null,null],[0,"misc","ethcore_util","Diff misc.",null,null],[4,"Filth","ethcore_util::misc","Boolean type for clean/dirty status.",null,null],[13,"Clean","","Data has not been changed.",587,null],[13,"Dirty","","Data has been changed.",587,null],[5,"now","","Generate a timestamp representing now (UTC) in RFC3339 format.",null,{"inputs":[],"output":{"name":"str"}}],[5,"short_now","","Generate a timstamp string representing now (UTC).",null,{"inputs":[],"output":{"name":"str"}}],[5,"sha","","Generate a SHA string",null,{"inputs":[],"output":{"name":"str"}}],[5,"short_sha","","Generate a short SHA string",null,{"inputs":[],"output":{"name":"str"}}],[5,"commit_date","","Generate the commit date string",null,{"inputs":[],"output":{"name":"str"}}],[5,"target","","Generate the target triple string",null,{"inputs":[],"output":{"name":"str"}}],[5,"semver","","Generate a semver string",null,{"inputs":[],"output":{"name":"str"}}],[5,"rustc_version","","Returns compiler version.",null,{"inputs":[],"output":{"name":"str"}}],[5,"contents","","Read the whole contents of a file `name`.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[5,"version","","Get the standard version string for this software.",null,{"inputs":[],"output":{"name":"string"}}],[5,"version_data","","Get the standard version data for this software.",null,{"inputs":[],"output":{"name":"bytes"}}],[11,"clone","","",587,null],[11,"eq","","",587,null],[0,"vector","ethcore_util","Vector extensions.",null,null],[8,"SharedPrefix","ethcore_util::vector","Returns len of prefix shared with elem",null,null],[10,"shared_prefix_len","","Get common prefix length",588,null],[0,"sha3","ethcore_util","Wrapper around tiny-keccak crate.",null,null],[17,"SHA3_EMPTY","ethcore_util::sha3","Get the SHA3 (i.e. Keccak) hash of the empty bytes string.",null,null],[8,"Hashable","","Types implementing this trait are sha3able.",null,null],[10,"sha3","","Calculate SHA3 of this object.",589,null],[11,"sha3_into","","Calculate SHA3 of this object and place result into dest.",589,null],[0,"hashdb","ethcore_util","Database of byte-slices keyed to their Keccak hash.",null,null],[8,"HashDB","ethcore_util::hashdb","Trait modelling datastore keyed by a 32-byte Keccak hash.",null,null],[10,"keys","","Get the keys in the database together with number of underlying references.",590,null],[10,"get","","Look up a given hash into the bytes that hash to it, returning None if the\nhash is not known.",590,null],[10,"contains","","Check for the existance of a hash-key.",590,null],[10,"insert","","Insert a datum item into the DB and return the datum&#39;s hash for a later lookup. Insertions\nare counted and the equivalent number of `remove()`s must be performed before the data\nis considered dead.",590,null],[10,"emplace","","Like `insert()` , except you provide the key and the data is all moved.",590,null],[10,"remove","","Remove a datum previously inserted. Insertions can be &quot;owed&quot; such that the same number of `insert()`s may\nhappen without the data being eventually being inserted into the DB.",590,null],[11,"insert_aux","","Insert auxiliary data into hashdb.",590,null],[11,"get_aux","","Get auxiliary data from hashdb.",590,null],[11,"remove_aux","","Removes auxiliary data from hashdb.",590,null],[8,"AsHashDB","","Upcast trait.",null,null],[10,"as_hashdb","","Perform upcast to HashDB for anything that derives from HashDB.",591,null],[10,"as_hashdb_mut","","Perform mutable upcast to HashDB for anything that derives from HashDB.",591,null],[0,"memorydb","ethcore_util","Reference-counted memory-based `HashDB` implementation.",null,null],[3,"MemoryDB","ethcore_util::memorydb","Reference-counted memory-based `HashDB` implementation.",null,null],[11,"eq","","",592,null],[11,"ne","","",592,null],[11,"clone","","",592,null],[11,"default","","",592,{"inputs":[],"output":{"name":"memorydb"}}],[11,"new","","Create a new instance of the memory DB.",592,{"inputs":[],"output":{"name":"memorydb"}}],[11,"clear","","Clear all data from the database.",592,null],[11,"purge","","Purge all zero-referenced data from the database.",592,null],[11,"drain","","Return the internal map of hashes to data, clearing the current state.",592,null],[11,"drain_aux","","Return the internal map of auxiliary data, clearing the current state.",592,null],[11,"raw","","Grab the raw information associated with a key. Returns None if the key\ndoesn&#39;t exist.",592,null],[11,"denote","","Denote than an existing value has the given key. Used when a key gets removed without\na prior insert and thus has a negative reference with no value.",592,null],[11,"mem_used","","Returns the size of allocated heap memory",592,null],[11,"remove_and_purge","","Remove an element and delete it from storage if reference count reaches zero.",592,null],[11,"get","","",592,null],[11,"keys","","",592,null],[11,"contains","","",592,null],[11,"insert","","",592,null],[11,"emplace","","",592,null],[11,"remove","","",592,null],[11,"insert_aux","","",592,null],[11,"get_aux","","",592,null],[11,"remove_aux","","",592,null],[0,"migration","ethcore_util","DB Migration module.",null,null],[3,"Config","ethcore_util::migration","Migration config.",null,null],[12,"batch_size","","Defines how many elements should be migrated at once.",593,null],[12,"compaction_profile","","Database compaction profile.",593,null],[3,"Batch","","A batch of key-value pairs to be written into the database.",null,null],[3,"Manager","","Manages database migration.",null,null],[3,"Progress","","Prints a dot every `max` ticks",null,null],[4,"Error","","Migration error.",null,null],[13,"CannotAddMigration","","Error returned when it is impossible to add new migration rules.",594,null],[13,"MigrationImpossible","","Error returned when migration from specific version can not be performed.",594,null],[13,"Io","","Io Error.",594,null],[13,"Custom","","Custom error.",594,null],[8,"Migration","","A generalized migration from the given db to a destination db.",null,null],[10,"columns","","Number of columns in database after the migration.",595,null],[10,"version","","Version of the database after the migration.",595,null],[10,"migrate","","Migrate a source to a destination.",595,null],[8,"SimpleMigration","","A simple migration over key-value pairs.",null,null],[10,"columns","","Number of columns in database after the migration.",596,null],[10,"version","","Version of database after the migration.",596,null],[10,"simple_migrate","","Should migrate existing object to new database.\nReturns `None` if the object does not exist in new version of database.",596,null],[11,"clone","","",593,null],[11,"default","","",593,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Make a new batch with the given config.",597,{"inputs":[{"name":"config"},{"name":"option"}],"output":{"name":"self"}}],[11,"insert","","Insert a value into the batch, committing if necessary.",597,null],[11,"commit","","Commit all the items in the batch to the given database.",597,null],[11,"fmt","","",594,null],[11,"from","","",594,{"inputs":[{"name":"error"}],"output":{"name":"self"}}],[11,"new","","Creates new migration manager with given configuration.",598,{"inputs":[{"name":"config"}],"output":{"name":"self"}}],[11,"add_migration","","Adds new migration rules.",598,null],[11,"execute","","Performs migration in order, starting with a source path, migrating between two temporary databases,\nand producing a path where the final migration lives.",598,null],[11,"is_needed","","Returns true if migration is needed.",598,null],[11,"default","","",599,{"inputs":[],"output":{"name":"self"}}],[11,"tick","","Tick progress meter.",599,null],[0,"overlaydb","ethcore_util","Disk-backed `HashDB` implementation.",null,null],[3,"OverlayDB","ethcore_util::overlaydb","Implementation of the `HashDB` trait for a disk-backed database with a memory overlay.",null,null],[11,"clone","","",600,null],[11,"new","","Create a new instance of OverlayDB given a `backing` database.",600,{"inputs":[{"name":"arc"},{"name":"option"}],"output":{"name":"overlaydb"}}],[11,"commit_to_batch","","Commit all operations to given batch.",600,null],[11,"revert","","Revert all operations on this object (i.e. `insert()`s and `remove()`s) since the\nlast `commit()`.",600,null],[11,"commit_refs","","Get the number of references that would be committed.",600,null],[11,"keys","","",600,null],[11,"get","","",600,null],[11,"contains","","",600,null],[11,"insert","","",600,null],[11,"emplace","","",600,null],[11,"remove","","",600,null],[0,"journaldb","ethcore_util","`JournalDB` interface and implementation.",null,null],[4,"Algorithm","ethcore_util::journaldb","A journal database algorithm.",null,null],[13,"Archive","","Keep all keys forever.",601,null],[13,"EarlyMerge","","Ancient and recent history maintained separately; recent history lasts for particular\nnumber of blocks.",601,null],[13,"OverlayRecent","","Ancient and recent history maintained separately; recent history lasts for particular\nnumber of blocks.",601,null],[13,"RefCounted","","Ancient and recent history maintained separately; recent history lasts for particular\nnumber of blocks.",601,null],[5,"new","","Create a new `JournalDB` trait object.",null,{"inputs":[{"name":"arc"},{"name":"algorithm"},{"name":"option"}],"output":{"name":"box"}}],[0,"traits","","Export the journaldb module.\nDisk-backed `HashDB` implementation.",null,null],[8,"JournalDB","ethcore_util::journaldb::traits","A `HashDB` which can manage a short-term journal potentially containing many forks of mutually\nexclusive actions.",null,null],[10,"boxed_clone","","Return a copy of ourself, in a box.",602,null],[10,"mem_used","","Returns heap memory size used",602,null],[10,"is_empty","","Check if this database has any commits",602,null],[10,"latest_era","","Get the latest era in the DB. None if there isn&#39;t yet any data in there.",602,null],[10,"commit","","Commit all recent insert operations and canonical historical commits&#39; removals from the\nold era to the backing database, reverting any non-canonical historical commit&#39;s inserts.",602,null],[10,"inject","","Commit all queued insert and delete operations without affecting any journalling -- this requires that all insertions\nand deletions are indeed canonical and will likely lead to an invalid database if that assumption is violated.",602,null],[10,"state","","State data query",602,null],[11,"is_pruned","","Whether this database is pruned.",602,null],[10,"backing","","Get backing database.",602,null],[11,"clone","ethcore_util::journaldb","",601,null],[11,"eq","","",601,null],[11,"fmt","","",601,null],[11,"default","","",601,{"inputs":[],"output":{"name":"algorithm"}}],[11,"from_str","","",601,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"as_str","","Returns static str describing journal database algorithm.",601,null],[11,"as_internal_name_str","","Returns static str describing journal database algorithm.",601,null],[11,"is_stable","","Returns true if pruning strategy is stable",601,null],[11,"all_types","","Returns all algorithm types.",601,{"inputs":[],"output":{"name":"vec"}}],[11,"fmt","","",601,null],[0,"kvdb","ethcore_util","Key-Value store abstraction with `RocksDB` backend.",null,null],[3,"DBTransaction","ethcore_util::kvdb","Write transaction. Batches a sequence of put/delete operations for efficiency.",null,null],[3,"CompactionProfile","","Compaction profile for the database settings",null,null],[12,"initial_file_size","","L0-L1 target file size",603,null],[12,"file_size_multiplier","","L2-LN target file size multiplier",603,null],[12,"write_rate_limit","","rate limiter for background flushes and compactions, bytes/sec, if any",603,null],[3,"DatabaseConfig","","Database configuration",null,null],[12,"max_open_files","","Max number of open files.",604,null],[12,"cache_size","","Cache-size",604,null],[12,"compaction","","Compaction profile",604,null],[12,"columns","","Set number of columns",604,null],[12,"wal","","Should we keep WAL enabled?",604,null],[3,"DatabaseIterator","","Database iterator for flushed data only",null,null],[3,"Database","","Key-Value database.",null,null],[11,"new","","Create new transaction.",605,{"inputs":[{"name":"database"}],"output":{"name":"dbtransaction"}}],[11,"put","","Insert a key-value pair in the transaction. Any existing value value will be overwritten upon write.",605,null],[11,"put_vec","","Insert a key-value pair in the transaction. Any existing value value will be overwritten upon write.",605,null],[11,"put_compressed","","Insert a key-value pair in the transaction. Any existing value value will be overwritten upon write.\nValue will be RLP-compressed on  flush",605,null],[11,"delete","","Delete value by key.",605,null],[11,"clone","","",603,null],[11,"default","","Default profile suitable for most storage",603,{"inputs":[],"output":{"name":"compactionprofile"}}],[11,"hdd","","Slow hdd compaction profile",603,{"inputs":[],"output":{"name":"compactionprofile"}}],[11,"clone","","",604,null],[11,"with_columns","","Create new `DatabaseConfig` with default parameters and specified set of columns.",604,{"inputs":[{"name":"option"}],"output":{"name":"self"}}],[11,"default","","",604,{"inputs":[],"output":{"name":"databaseconfig"}}],[11,"next","","",606,null],[11,"open_default","","Open database with default settings.",607,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"open","","Open database file. Creates if it does not exist.",607,{"inputs":[{"name":"databaseconfig"},{"name":"str"}],"output":{"name":"result"}}],[11,"transaction","","Creates new transaction for this database.",607,null],[11,"write_buffered","","Commit transaction to database.",607,null],[11,"flush","","Commit buffered changes to database.",607,null],[11,"write","","Commit transaction to database.",607,null],[11,"get","","Get value by key.",607,null],[11,"get_by_prefix","","Get value by partial key. Prefix size should match configured prefix size.",607,null],[11,"is_empty","","Check if there is anything in the database.",607,null],[11,"iter","","Get database iterator.",607,null],[0,"crypto","ethcore_util","Ethcore crypto.",null,null],[3,"KeyPair","ethcore_util::crypto","secp256k1 Key pair",null,null],[4,"CryptoError","","Crypto error",null,null],[13,"InvalidSecret","","Invalid secret key",608,null],[13,"InvalidPublic","","Invalid public key",608,null],[13,"InvalidSignature","","Invalid EC signature",608,null],[13,"InvalidMessage","","Invalid AES message",608,null],[13,"Io","","IO Error",608,null],[0,"ec","","EC functions",null,null],[5,"recover","ethcore_util::crypto::ec","Recovers Public key from signed message hash.",null,{"inputs":[{"name":"signature"},{"name":"h256"}],"output":{"name":"result"}}],[5,"sign","","Returns siganture of message hash.",null,{"inputs":[{"name":"secret"},{"name":"h256"}],"output":{"name":"result"}}],[5,"verify","","Verify signature.",null,{"inputs":[{"name":"public"},{"name":"signature"},{"name":"h256"}],"output":{"name":"result"}}],[5,"is_low","","Check if this is a &quot;low&quot; signature.",null,{"inputs":[{"name":"signature"}],"output":{"name":"bool"}}],[5,"is_low_s","","Check if this is a &quot;low&quot; signature.",null,{"inputs":[{"name":"u256"}],"output":{"name":"bool"}}],[5,"is_valid","","Check if each component of the signature is in range.",null,{"inputs":[{"name":"signature"}],"output":{"name":"bool"}}],[0,"ecdh","ethcore_util::crypto","ECDH functions",null,null],[5,"agree","ethcore_util::crypto::ecdh","Agree on a shared secret",null,{"inputs":[{"name":"secret"},{"name":"public"}],"output":{"name":"result"}}],[0,"ecies","ethcore_util::crypto","ECIES function",null,null],[5,"encrypt","ethcore_util::crypto::ecies","Encrypt a message with a public key",null,null],[5,"decrypt","","Decrypt a message with a secret key",null,null],[0,"aes","ethcore_util::crypto","AES encryption",null,null],[5,"encrypt","ethcore_util::crypto::aes","Encrypt a message",null,null],[5,"decrypt","","Decrypt a message",null,null],[6,"Secret","ethcore_util::crypto","Secret key for secp256k1 EC operations. 256 bit generic &quot;hash&quot; data.",null,null],[6,"Public","","Public key for secp256k1 EC operations. 512 bit generic &quot;hash&quot; data.",null,null],[6,"Signature","","Signature for secp256k1 EC operations; encodes two 256-bit curve points\nand a third sign bit. 520 bit generic &quot;hash&quot; data.",null,null],[11,"sign_schnorr","secp256k1","Create a Schnorr signature",609,null],[11,"verify_schnorr","","Verify a Schnorr signature",609,null],[11,"recover_schnorr","","Retrieves the public key for which `sig` is a valid signature for `msg`.\nRequires a verify-capable context.",609,null],[11,"new","","Creates a new Secp256k1 context",609,{"inputs":[],"output":{"name":"secp256k1"}}],[11,"with_caps","","Creates a new Secp256k1 context with the specified capabilities",609,{"inputs":[{"name":"contextflag"}],"output":{"name":"secp256k1"}}],[11,"without_caps","","Creates a new Secp256k1 context with no capabilities (just de/serialization)",609,{"inputs":[],"output":{"name":"secp256k1"}}],[11,"randomize","","(Re)randomizes the Secp256k1 context for cheap sidechannel resistence;\nsee comment in libsecp256k1 commit d2275795f by Gregory Maxwell",609,null],[11,"generate_keypair","","Generates a random keypair. Convenience function for `key::SecretKey::new`\nand `key::PublicKey::from_secret_key`; call those functions directly for\nbatch key generation. Requires a signing-capable context.",609,null],[11,"sign","","Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\nRequires a signing-capable context.",609,null],[11,"sign_recoverable","","Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\nRequires a signing-capable context.",609,null],[11,"recover","","Determines the public key for which `sig` is a valid signature for\n`msg`. Requires a verify-capable context.",609,null],[11,"verify","","Checks that `sig` is a valid ECDSA signature for `msg` using the public\nkey `pubkey`. Returns `Ok(true)` on success. Note that this function cannot\nbe used for Bitcoin consensus checking since there may exist signatures\nwhich OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a\nverify-capable context.",609,null],[11,"fmt","secp256k1::ecdh","",610,null],[11,"eq","","",610,null],[11,"ne","","",610,null],[11,"clone","","",610,null],[11,"new","","Creates a new shared secret from a pubkey and secret key",610,{"inputs":[{"name":"secp256k1"},{"name":"publickey"},{"name":"secretkey"}],"output":{"name":"sharedsecret"}}],[11,"new_raw","","Creates a new unhashed shared secret from a pubkey and secret key",610,{"inputs":[{"name":"secp256k1"},{"name":"publickey"},{"name":"secretkey"}],"output":{"name":"sharedsecret"}}],[11,"as_ptr","","Obtains a raw pointer suitable for use with FFI functions",610,null],[11,"from","","",610,{"inputs":[{"name":"sharedsecret"}],"output":{"name":"sharedsecret"}}],[11,"index","","",610,null],[11,"index","","",610,null],[11,"index","","",610,null],[11,"index","","",610,null],[11,"fmt","secp256k1::ffi","",611,null],[11,"clone","","",611,null],[11,"as_ptr","","Converts the object to a raw pointer for FFI interfacing",612,null],[11,"as_mut_ptr","","Converts the object to a mutable raw pointer for FFI interfacing",612,null],[11,"len","","Returns the length of the object as an array",612,null],[11,"is_empty","","Returns whether the object as an array is empty",612,null],[11,"eq","","",612,null],[11,"clone","","",612,null],[11,"index","","",612,null],[11,"index","","",612,null],[11,"index","","",612,null],[11,"index","","",612,null],[11,"index","","",612,null],[11,"fmt","","",612,null],[11,"new","","Create a new (zeroed) public key usable for the FFI interface",612,{"inputs":[],"output":{"name":"publickey"}}],[11,"blank","","Create a new (uninitialized) public key usable for the FFI interface",612,{"inputs":[],"output":{"name":"publickey"}}],[11,"hash","","",612,null],[11,"as_ptr","","Converts the object to a raw pointer for FFI interfacing",613,null],[11,"as_mut_ptr","","Converts the object to a mutable raw pointer for FFI interfacing",613,null],[11,"len","","Returns the length of the object as an array",613,null],[11,"is_empty","","Returns whether the object as an array is empty",613,null],[11,"eq","","",613,null],[11,"clone","","",613,null],[11,"index","","",613,null],[11,"index","","",613,null],[11,"index","","",613,null],[11,"index","","",613,null],[11,"index","","",613,null],[11,"fmt","","",613,null],[11,"as_ptr","","Converts the object to a raw pointer for FFI interfacing",614,null],[11,"as_mut_ptr","","Converts the object to a mutable raw pointer for FFI interfacing",614,null],[11,"len","","Returns the length of the object as an array",614,null],[11,"is_empty","","Returns whether the object as an array is empty",614,null],[11,"eq","","",614,null],[11,"clone","","",614,null],[11,"index","","",614,null],[11,"index","","",614,null],[11,"index","","",614,null],[11,"index","","",614,null],[11,"index","","",614,null],[11,"fmt","","",614,null],[11,"new","","Create a new (zeroed) signature usable for the FFI interface",613,{"inputs":[],"output":{"name":"signature"}}],[11,"blank","","Create a new (uninitialized) signature usable for the FFI interface",613,{"inputs":[],"output":{"name":"signature"}}],[11,"new","","Create a new (zeroed) signature usable for the FFI interface",614,{"inputs":[],"output":{"name":"recoverablesignature"}}],[11,"blank","","Create a new (uninitialized) signature usable for the FFI interface",614,{"inputs":[],"output":{"name":"recoverablesignature"}}],[11,"as_ptr","","Converts the object to a raw pointer for FFI interfacing",615,null],[11,"as_mut_ptr","","Converts the object to a mutable raw pointer for FFI interfacing",615,null],[11,"len","","Returns the length of the object as an array",615,null],[11,"is_empty","","Returns whether the object as an array is empty",615,null],[11,"eq","","",615,null],[11,"clone","","",615,null],[11,"index","","",615,null],[11,"index","","",615,null],[11,"index","","",615,null],[11,"index","","",615,null],[11,"index","","",615,null],[11,"fmt","","",615,null],[11,"new","","Create a new (zeroed) signature usable for the FFI interface",615,{"inputs":[],"output":{"name":"sharedsecret"}}],[11,"blank","","Create a new (uninitialized) signature usable for the FFI interface",615,{"inputs":[],"output":{"name":"sharedsecret"}}],[11,"as_ptr","secp256k1::key","Converts the object to a raw pointer for FFI interfacing",616,null],[11,"as_mut_ptr","","Converts the object to a mutable raw pointer for FFI interfacing",616,null],[11,"len","","Returns the length of the object as an array",616,null],[11,"is_empty","","Returns whether the object as an array is empty",616,null],[11,"eq","","",616,null],[11,"clone","","",616,null],[11,"index","","",616,null],[11,"index","","",616,null],[11,"index","","",616,null],[11,"index","","",616,null],[11,"index","","",616,null],[11,"fmt","","",616,null],[11,"hash","","",617,null],[11,"fmt","","",617,null],[11,"eq","","",617,null],[11,"ne","","",617,null],[11,"clone","","",617,null],[11,"new","","Creates a new random secret key",616,{"inputs":[{"name":"secp256k1"},{"name":"r"}],"output":{"name":"secretkey"}}],[11,"from_slice","","Converts a `SECRET_KEY_SIZE`-byte slice to a secret key",616,null],[11,"add_assign","","Adds one secret key to another, modulo the curve order",616,null],[11,"new","","Creates a new zeroed out public key",617,{"inputs":[],"output":{"name":"publickey"}}],[11,"is_valid","","Determines whether a pubkey is valid",617,null],[11,"as_ptr","","Obtains a raw pointer suitable for use with FFI functions",617,null],[11,"from_secret_key","","Creates a new public key from a secret key.",617,{"inputs":[{"name":"secp256k1"},{"name":"secretkey"}],"output":{"name":"result"}}],[11,"from_slice","","Creates a public key directly from a slice",617,null],[11,"serialize_vec","","Serialize the key as a byte-encoded pair of values. In compressed form\nthe y-coordinate is represented by only a single bit, as x determines\nit up to one bit.",617,null],[11,"add_exp_assign","","Adds the pk corresponding to `other` to the pk `self` in place",617,null],[11,"from","","",617,{"inputs":[{"name":"publickey"}],"output":{"name":"publickey"}}],[11,"as_ptr","secp256k1::schnorr","Converts the object to a raw pointer for FFI interfacing",618,null],[11,"as_mut_ptr","","Converts the object to a mutable raw pointer for FFI interfacing",618,null],[11,"len","","Returns the length of the object as an array",618,null],[11,"is_empty","","Returns whether the object as an array is empty",618,null],[11,"eq","","",618,null],[11,"clone","","",618,null],[11,"index","","",618,null],[11,"index","","",618,null],[11,"index","","",618,null],[11,"index","","",618,null],[11,"index","","",618,null],[11,"fmt","","",618,null],[11,"deserialize","","Deserializes a signature from a 64-byte vector",618,null],[11,"serialize","","Serializes a signature to a 64-byte vector",618,null],[11,"fmt","secp256k1","",619,null],[11,"eq","","",619,null],[11,"ne","","",619,null],[11,"clone","","",619,null],[11,"fmt","","",620,null],[11,"eq","","",620,null],[11,"ne","","",620,null],[11,"clone","","",620,null],[11,"fmt","","",621,null],[11,"eq","","",621,null],[11,"ne","","",621,null],[11,"clone","","",621,null],[11,"from_i32","","Allows library users to create valid recovery IDs from i32.",619,{"inputs":[{"name":"i32"}],"output":{"name":"result"}}],[11,"to_i32","","Allows library users to convert recovery IDs to i32.",619,null],[11,"from_der","","Converts a DER-encoded byte slice to a signature",620,null],[11,"from_der_lax","","Converts a &quot;lax DER&quot;-encoded byte slice to a signature. This is basically\nonly useful for validating signatures in the Bitcoin blockchain from before\n2016. It should never be used in new applications. This library does not\nsupport serializing to this &quot;format&quot;",620,null],[11,"normalize_s","","Normalizes a signature to a &quot;low S&quot; form. In ECDSA, signatures are\nof the form (r, s) where r and s are numbers lying in some finite\nfield. The verification equation will pass for (r, s) iff it passes\nfor (r, -s), so it is possible to ``modify&#39;&#39; signatures in transit\nby flipping the sign of s. This does not constitute a forgery since\nthe signed message still cannot be changed, but for some applications,\nchanging even the signature itself can be a problem. Such applications\nrequire a &quot;strong signature&quot;. It is believed that ECDSA is a strong\nsignature except for this ambiguity in the sign of s, so to accomodate\nthese applications libsecp256k1 will only accept signatures for which\ns is in the lower half of the field range. This eliminates the\nambiguity.",620,null],[11,"as_ptr","","Obtains a raw pointer suitable for use with FFI functions",620,null],[11,"as_mut_ptr","","Obtains a raw mutable pointer suitable for use with FFI functions",620,null],[11,"serialize_der","","Serializes the signature in DER format",620,null],[11,"from","","",620,{"inputs":[{"name":"signature"}],"output":{"name":"signature"}}],[11,"from_compact","","Converts a compact-encoded byte slice to a signature. This\nrepresentation is nonstandard and defined by the libsecp256k1\nlibrary.",621,null],[11,"as_ptr","","Obtains a raw pointer suitable for use with FFI functions",621,null],[11,"serialize_compact","","Serializes the recoverable signature in compact format",621,null],[11,"to_standard","","Converts a recoverable signature to a non-recoverable one (this is needed\nfor verification",621,null],[11,"from","","",621,{"inputs":[{"name":"recoverablesignature"}],"output":{"name":"recoverablesignature"}}],[11,"index","","",620,null],[11,"index","","",620,null],[11,"index","","",620,null],[11,"index","","",620,null],[11,"as_ptr","","Converts the object to a raw pointer for FFI interfacing",622,null],[11,"as_mut_ptr","","Converts the object to a mutable raw pointer for FFI interfacing",622,null],[11,"len","","Returns the length of the object as an array",622,null],[11,"is_empty","","Returns whether the object as an array is empty",622,null],[11,"eq","","",622,null],[11,"clone","","",622,null],[11,"index","","",622,null],[11,"index","","",622,null],[11,"index","","",622,null],[11,"index","","",622,null],[11,"index","","",622,null],[11,"fmt","","",622,null],[11,"from_slice","","Converts a `MESSAGE_SIZE`-byte slice to a message object",622,null],[11,"fmt","","",623,null],[11,"clone","","",623,null],[11,"eq","","",623,null],[11,"fmt","","",623,null],[11,"cause","","",623,null],[11,"description","","",623,null],[11,"fmt","","",624,null],[11,"clone","","",624,null],[11,"eq","","",624,null],[11,"fmt","","",624,null],[11,"clone","","",609,null],[11,"eq","","",609,null],[11,"fmt","","",609,null],[11,"drop","","",609,null],[11,"from_rsv","ethcore_util::crypto","Create a new signature from the R, S and V componenets.",625,{"inputs":[{"name":"h256"},{"name":"h256"},{"name":"u8"}],"output":{"name":"signature"}}],[11,"to_rsv","","Convert transaction to R, S and V components.",625,null],[11,"fmt","","",608,null],[11,"fmt","","",608,null],[11,"from","","",608,{"inputs":[{"name":"error"}],"output":{"name":"cryptoerror"}}],[11,"from","","",608,{"inputs":[{"name":"error"}],"output":{"name":"cryptoerror"}}],[11,"eq","","",626,null],[11,"ne","","",626,null],[11,"fmt","","",626,null],[11,"from_secret","","Create a pair from secret key",626,{"inputs":[{"name":"secret"}],"output":{"name":"result"}}],[11,"create","","Create a new random key pair",626,{"inputs":[],"output":{"name":"result"}}],[11,"public","","Returns public key",626,null],[11,"secret","","Returns private key",626,null],[11,"address","","Returns address.",626,null],[11,"sign","","Sign a message with our secret key.",626,null],[0,"triehash","ethcore_util","Generetes trie root.",null,null],[5,"ordered_trie_root","ethcore_util::triehash","Generates a trie root hash for a vector of values",null,{"inputs":[{"name":"vec"}],"output":{"name":"h256"}}],[5,"trie_root","","Generates a trie root hash for a vector of key-values",null,{"inputs":[{"name":"vec"}],"output":{"name":"h256"}}],[5,"sec_trie_root","","Generates a key-hashed (secure) trie root hash for a vector of key-values.",null,{"inputs":[{"name":"vec"}],"output":{"name":"h256"}}],[0,"trie","ethcore_util","Trie interface and implementation.",null,null],[3,"FatDB","ethcore_util::trie","A `Trie` implementation which hashes keys and uses a generic `HashDB` backing database.\nAdditionaly it stores inserted hash-key mappings for later retrieval.",null,null],[3,"FatDBIterator","","Itarator over inserted pairs of key values.",null,null],[3,"FatDBMut","","A mutable `Trie` implementation which hashes keys and uses a generic `HashDB` backing database.\nAdditionaly it stores inserted hash-key mappings for later retrieval.",null,null],[3,"TrieFactory","","Trie factory.",null,null],[4,"TrieError","","Trie Errors.",null,null],[13,"InvalidStateRoot","","Attempted to create a trie with a state root not in the DB.",627,null],[13,"IncompleteDatabase","","Trie item not found in the database,",627,null],[4,"TrieSpec","","Trie types",null,null],[13,"Generic","","Generic trie.",628,null],[13,"Secure","","Secure trie.",628,null],[13,"Fat","","Secure trie with fat database.",628,null],[0,"standardmap","","Export the standardmap module.\nKey-value datastore with a modified Merkle tree.",null,null],[3,"StandardMap","ethcore_util::trie::standardmap","Standard test map for profiling tries.",null,null],[12,"alphabet","","The alphabet to use for keys.",629,null],[12,"min_key","","Minimum size of key.",629,null],[12,"journal_key","","Delta size of key.",629,null],[12,"value_mode","","Mode of value generation.",629,null],[12,"count","","Number of keys.",629,null],[4,"Alphabet","","Alphabet to use when creating words for insertion into tries.",null,null],[13,"All","","All values are allowed in each bytes of the key.",630,null],[13,"Low","","Only a 6 values (&#39;a&#39; - &#39;f&#39;) are chosen to compose the key.",630,null],[13,"Mid","","Quite a few values (around 32) are chosen to compose the key.",630,null],[13,"Custom","","A set of bytes given is used to compose the key.",630,null],[4,"ValueMode","","Means of determining the value.",null,null],[13,"Mirror","","Same as the key.",631,null],[13,"Random","","Randomly (50:50) 1 or 32 byte randomly string.",631,null],[13,"Index","","RLP-encoded index.",631,null],[11,"make","","Create the standard map (set of keys and values) for the object&#39;s fields.",629,null],[11,"make_with","","Create the standard map (set of keys and values) for the object&#39;s fields, using the given seed.",629,null],[0,"journal","ethcore_util::trie","Export the journal module.",null,null],[3,"Score","ethcore_util::trie::journal","How many insertions and removals were done in an `apply` operation.",null,null],[12,"inserts","","Number of insertions.",632,null],[12,"removes","","Number of removals.",632,null],[3,"Journal","","A journal of operations on the backing database.",null,null],[11,"fmt","","",633,null],[11,"default","","",633,{"inputs":[],"output":{"name":"self"}}],[11,"new","","Create a new, empty, object.",633,{"inputs":[],"output":{"name":"journal"}}],[11,"new_node","","Given the RLP that encodes a node, append a reference to that node `out` and leave `journal`\nsuch that the reference is valid, once applied.",633,null],[11,"delete_node_sha3","","Given the RLP that encodes a now-unused node, leave `journal` in such a state that it is noted.",633,null],[11,"delete_node","","Register an RLP-encoded node for deletion (given a slice), if it needs to be deleted.",633,null],[11,"apply","","Apply this journal to the HashDB `db` and return the number of insertions and removals done.",633,null],[0,"node","ethcore_util::trie","Export the node module.",null,null],[4,"Node","ethcore_util::trie::node","Type of node in the trie and essential information thereof.",null,null],[13,"Empty","","Null trie node; could be an empty root or an empty branch entry.",634,null],[13,"Leaf","","Leaf node; has key slice and value. Value may not be empty.",634,null],[13,"Extension","","Extension node; has key slice and node data. Data may not be null.",634,null],[13,"Branch","","Branch node; has array of 16 child nodes (each possibly null) and an optional immediate node data.",634,null],[11,"fmt","","",634,null],[11,"eq","","",634,null],[11,"ne","","",634,null],[11,"clone","","",634,null],[11,"decoded","","Decode the `node_rlp` and return the Node.",634,null],[11,"encoded","","Encode the node into RLP.",634,null],[11,"encoded_and_added","","Encode the node, adding it to `journal` if necessary and return the RLP valid for\ninsertion into a parent node.",634,null],[0,"triedb","ethcore_util::trie","Export the triedb module.",null,null],[3,"TrieDB","ethcore_util::trie::triedb","A `Trie` implementation using a generic `HashDB` backing database.",null,null],[12,"hash_count","","The number of hashes performed so far in operations on this trie.",635,null],[3,"TrieDBIterator","","Iterator for going through all values in the trie.",null,null],[11,"new","","Create a new trie with the backing database `db` and `root`\nReturns an error if `root` does not exist",635,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"result"}}],[11,"db","","Get the backing database.",635,null],[11,"keys","","Determine all the keys in the backing database that belong to the trie.",635,null],[11,"to_map","","Convert a vector of hashes to a hashmap of hash to occurrences.",635,{"inputs":[{"name":"vec"}],"output":{"name":"hashmap"}}],[11,"db_items_remaining","","Determine occurrences of items in the backing database which are not related to this\ntrie.",635,null],[11,"clone","","",636,null],[11,"new","","Create a new iterator.",636,{"inputs":[{"name":"triedb"}],"output":{"name":"triedbiterator"}}],[11,"next","","",636,null],[11,"iter","","Get all keys/values stored in the trie.",635,null],[11,"iter","","",635,null],[11,"root","","",635,null],[11,"get","","",635,null],[11,"fmt","","",635,null],[0,"triedbmut","ethcore_util::trie","Export the triedbmut module.\nIn-memory trie representation.",null,null],[3,"TrieDBMut","ethcore_util::trie::triedbmut","A `Trie` implementation using a generic `HashDB` backing database.",null,null],[12,"hash_count","","The number of hash operations this trie has performed.\nNote that none are performed until changes are committed.",637,null],[11,"new","","Create a new trie with backing database `db` and empty `root`.",637,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"self"}}],[11,"from_existing","","Create a new trie with the backing database `db` and `root.\nReturns an error if `root` does not exist.",637,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"result"}}],[11,"db","","Get the backing database.",637,null],[11,"db_mut","","Get the backing database mutably.",637,null],[11,"commit","","Commit the in-memory changes to disk, freeing their storage and\nupdating the state root.",637,null],[11,"root","","",637,null],[11,"is_empty","","",637,null],[11,"get","","",637,null],[11,"insert","","",637,null],[11,"remove","","",637,null],[11,"drop","","",637,null],[0,"sectriedb","ethcore_util::trie","Export the sectriedb module.",null,null],[3,"SecTrieDB","ethcore_util::trie::sectriedb","A `Trie` implementation which hashes keys and uses a generic `HashDB` backing database.",null,null],[11,"new","","Create a new trie with the backing database `db` and empty `root`",638,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"result"}}],[11,"raw","","Get a reference to the underlying raw `TrieDB` struct.",638,null],[11,"raw_mut","","Get a mutable reference to the underlying raw `TrieDB` struct.",638,null],[11,"iter","","",638,null],[11,"root","","",638,null],[11,"contains","","",638,null],[11,"get","","",638,null],[0,"sectriedbmut","ethcore_util::trie","Export the sectriedbmut module.",null,null],[3,"SecTrieDBMut","ethcore_util::trie::sectriedbmut","A mutable `Trie` implementation which hashes keys and uses a generic `HashDB` backing database.",null,null],[11,"new","","Create a new trie with the backing database `db` and empty `root`\nInitialise to the state entailed by the genesis block.\nThis guarantees the trie is built correctly.",639,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"self"}}],[11,"from_existing","","Create a new trie with the backing database `db` and `root`.",639,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"result"}}],[11,"db","","Get the backing database.",639,null],[11,"db_mut","","Get the backing database.",639,null],[11,"root","","",639,null],[11,"is_empty","","",639,null],[11,"contains","","",639,null],[11,"get","","",639,null],[11,"insert","","",639,null],[11,"remove","","",639,null],[11,"new","ethcore_util::trie","Create a new trie with the backing database `db` and empty `root`\nInitialise to the state entailed by the genesis block.\nThis guarantees the trie is built correctly.",640,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"result"}}],[11,"db","","Get the backing database.",640,null],[11,"iter","","Iterator over all key / vlaues in the trie.",640,null],[11,"iter","","",640,null],[11,"root","","",640,null],[11,"contains","","",640,null],[11,"get","","",640,null],[11,"new","","Creates new iterator.",641,{"inputs":[{"name":"triedb"}],"output":{"name":"self"}}],[11,"next","","",641,null],[11,"new","","Create a new trie with the backing database `db` and empty `root`\nInitialise to the state entailed by the genesis block.\nThis guarantees the trie is built correctly.",642,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"self"}}],[11,"from_existing","","Create a new trie with the backing database `db` and `root`.",642,{"inputs":[{"name":"hashdb"},{"name":"h256"}],"output":{"name":"result"}}],[11,"db","","Get the backing database.",642,null],[11,"db_mut","","Get the backing database.",642,null],[11,"root","","",642,null],[11,"is_empty","","",642,null],[11,"contains","","",642,null],[11,"get","","",642,null],[11,"insert","","",642,null],[11,"remove","","",642,null],[6,"TrieItem","","Trie-Item type.",null,null],[6,"Result","","Trie result type. Boxed to avoid copying around extra space for `H256`s on successful queries.",null,null],[8,"Trie","","A key-value datastore implemented as a database-backed modified Merkle tree.",null,null],[10,"root","","Return the root of the trie.",643,null],[11,"is_empty","","Is the trie empty?",643,null],[11,"contains","","Does the trie contain a given key?",643,null],[10,"get","","What is the value of the given key in this trie?",643,null],[10,"iter","","Returns an iterator over elements of trie.",643,null],[8,"TrieMut","","A key-value datastore implemented as a database-backed modified Merkle tree.",null,null],[10,"root","","Return the root of the trie.",644,null],[10,"is_empty","","Is the trie empty?",644,null],[11,"contains","","Does the trie contain a given key?",644,null],[10,"get","","What is the value of the given key in this trie?",644,null],[10,"insert","","Insert a `key`/`value` pair into the trie. An `empty` value is equivalent to removing\n`key` from the trie.",644,null],[10,"remove","","Remove a `key` from the trie. Equivalent to making it equal to the empty\nvalue.",644,null],[11,"clone","","",627,null],[11,"eq","","",627,null],[11,"ne","","",627,null],[11,"fmt","","",627,null],[11,"fmt","","",627,null],[11,"clone","","",628,null],[11,"eq","","",628,null],[11,"fmt","","",628,null],[11,"default","","",628,{"inputs":[],"output":{"name":"triespec"}}],[11,"clone","","",645,null],[11,"default","","",645,{"inputs":[],"output":{"name":"triefactory"}}],[11,"new","","Creates new factory.",645,{"inputs":[{"name":"triespec"}],"output":{"name":"self"}}],[11,"readonly","","Create new immutable instance of Trie.",645,null],[11,"create","","Create new mutable instance of Trie.",645,null],[11,"from_existing","","Create new mutable instance of trie and check for errors.",645,null],[0,"nibbleslice","ethcore_util","Nibble-orientated view onto byte-slice, allowing nibble-precision offsets.",null,null],[3,"NibbleSlice","ethcore_util::nibbleslice","Nibble-orientated view onto byte-slice, allowing nibble-precision offsets.",null,null],[3,"NibbleSliceIterator","","Iterator type for a nibble slice.",null,null],[11,"cmp","","",646,null],[11,"clone","","",646,null],[11,"next","","",647,null],[11,"new","","Create a new nibble slice with the given byte-slice.",646,null],[11,"new_offset","","Create a new nibble slice with the given byte-slice with a nibble offset.",646,null],[11,"new_composed","","Create a composed nibble slice; one followed by the other.",646,{"inputs":[{"name":"nibbleslice"},{"name":"nibbleslice"}],"output":{"name":"self"}}],[11,"iter","","Get an iterator for the series of nibbles.",646,null],[11,"from_encoded","","Create a new nibble slice from the given HPE encoded data (e.g. output of `encoded()`).",646,null],[11,"is_empty","","Is this an empty slice?",646,null],[11,"len","","Get the length (in nibbles, naturally) of this slice.",646,null],[11,"at","","Get the nibble at position `i`.",646,null],[11,"mid","","Return object which represents a view on to this slice (further) offset by `i` nibbles.",646,null],[11,"starts_with","","Do we start with the same nibbles as the whole of `them`?",646,null],[11,"common_prefix","","How many of the same nibbles at the beginning do we match with `them`?",646,null],[11,"encoded","","Encode while nibble slice in prefixed hex notation, noting whether it `is_leaf`.",646,null],[11,"encoded_leftmost","","Encode only the leftmost `n` bytes of the nibble slice in prefixed hex notation,\nnoting whether it `is_leaf`.",646,null],[11,"eq","","",646,null],[11,"partial_cmp","","",646,null],[11,"fmt","","",646,null],[0,"nibblevec","ethcore_util","An owning, nibble-oriented byte vector.",null,null],[3,"NibbleVec","ethcore_util::nibblevec","Owning, nibble-oriented byte vector. Counterpart to `NibbleSlice`.",null,null],[11,"fmt","","",648,null],[11,"cmp","","",648,null],[11,"partial_cmp","","",648,null],[11,"lt","","",648,null],[11,"le","","",648,null],[11,"gt","","",648,null],[11,"ge","","",648,null],[11,"eq","","",648,null],[11,"ne","","",648,null],[11,"default","","",648,{"inputs":[],"output":{"name":"nibblevec"}}],[11,"new","","Make a new `NibbleVec`",648,{"inputs":[],"output":{"name":"self"}}],[11,"with_capacity","","Make a `NibbleVec` with capacity for `n` nibbles.",648,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"len","","Length of the `NibbleVec`",648,null],[11,"is_empty","","Retrurns true if `NibbleVec` has zero length",648,null],[11,"capacity","","Capacity of the `NibbleVec`.",648,null],[11,"at","","Try to get the nibble at the given offset.",648,null],[11,"push","","Push a nibble onto the `NibbleVec`. Ignores the high 4 bits.",648,null],[11,"pop","","Try to pop a nibble off the `NibbleVec`. Fails if len == 0.",648,null],[11,"as_nibbleslice","","Try to treat this `NibbleVec` as a `NibbleSlice`. Works only if len is even.",648,null],[11,"inner","","Get the underlying byte slice.",648,null],[11,"from","","",648,{"inputs":[{"name":"nibbleslice"}],"output":{"name":"self"}}],[11,"heap_size_of_children","ethcore_util::hash","",539,null],[11,"heap_size_of_children","","",540,null],[11,"heap_size_of_children","","",541,null],[11,"heap_size_of_children","","",542,null],[11,"heap_size_of_children","","",543,null],[11,"heap_size_of_children","","",544,null],[11,"heap_size_of_children","","",545,null],[11,"heap_size_of_children","","",546,null],[11,"heap_size_of_children","","",547,null],[11,"heap_size_of_children","","",548,null],[0,"semantic_version","ethcore_util","Semantic version formatting and comparing.",null,null],[3,"SemanticVersion","ethcore_util::semantic_version","A version value with strict meaning. Use `as_u32` to convert to a simple integer.",null,null],[12,"major","","Major version - API/feature removals &amp; breaking changes.",649,null],[12,"minor","","Minor version - API/feature additions.",649,null],[12,"tiny","","Tiny version - bug fixes.",649,null],[11,"new","","Create a new object.",649,{"inputs":[{"name":"u8"},{"name":"u8"},{"name":"u8"}],"output":{"name":"semanticversion"}}],[11,"as_u32","","Convert to a `u32` representation.",649,null],[0,"log","ethcore_util","Common log helper functions",null,null],[11,"normal","ansi_term","Return a Style with the foreground colour set to this colour.",650,null],[11,"paint","","Paints the given text with this colour, returning an ANSI string.\nThis is a short-cut so you don&#39;t have to use Blue.normal() just\nto get blue text.",650,null],[11,"bold","","Returns a Style with the bold property set.",650,null],[11,"dimmed","","Returns a Style with the dimmed property set.",650,null],[11,"italic","","Returns a Style with the italic property set.",650,null],[11,"underline","","Returns a Style with the underline property set.",650,null],[11,"blink","","Returns a Style with the blink property set.",650,null],[11,"reverse","","Returns a Style with the reverse property set.",650,null],[11,"hidden","","Returns a Style with the hidden property set.",650,null],[11,"on","","Returns a Style with the background colour property set.",650,null],[11,"clone","","",651,null],[11,"fmt","","",651,null],[11,"eq","","",651,null],[11,"ne","","",651,null],[11,"fmt","","",651,null],[11,"from","","",651,{"inputs":[{"name":"s"}],"output":{"name":"ansistring"}}],[11,"deref","","",651,null],[11,"fmt","","",650,null],[11,"clone","","",650,null],[11,"eq","","",650,null],[11,"ne","","",650,null],[11,"fmt","","",652,null],[11,"clone","","",652,null],[11,"eq","","",652,null],[11,"ne","","",652,null],[11,"new","","Creates a new Style with no differences.",652,{"inputs":[],"output":{"name":"style"}}],[11,"paint","","Paints the given text with this colour, returning an ANSI string.",652,null],[11,"bold","","Returns a Style with the bold property set.",652,null],[11,"dimmed","","Returns a Style with the dimmed property set.",652,null],[11,"italic","","Returns a Style with the italic property set.",652,null],[11,"underline","","Returns a Style with the underline property set.",652,null],[11,"blink","","Returns a Style with the blink property set.",652,null],[11,"reverse","","Returns a Style with the reverse property set.",652,null],[11,"hidden","","Returns a Style with the hidden property set.",652,null],[11,"on","","Returns a Style with the background colour property set.",652,null],[11,"default","","",652,{"inputs":[],"output":{"name":"style"}}],[11,"fmt","","",653,null],[4,"Colour","ethcore_util::log","A colour is one specific type of ANSI escape code, and can refer\nto either the foreground or background colour.",null,null],[13,"Black","","Colour #0 (foreground code `30`, background code `40`).",650,null],[13,"Red","","Colour #1 (foreground code `31`, background code `41`).",650,null],[13,"Green","","Colour #2 (foreground code `32`, background code `42`).",650,null],[13,"Yellow","","Colour #3 (foreground code `33`, background code `43`).",650,null],[13,"Blue","","Colour #4 (foreground code `34`, background code `44`).",650,null],[13,"Purple","","Colour #5 (foreground code `35`, background code `45`).",650,null],[13,"Cyan","","Colour #6 (foreground code `36`, background code `46`).",650,null],[13,"White","","Colour #7 (foreground code `37`, background code `47`).",650,null],[13,"Fixed","","A colour number from 0 to 255, for use in 256-colour terminal\nenvironments.",650,null],[3,"Style","","A style is a collection of properties that can format a string\nusing ANSI escape codes.",null,null],[3,"RotatingLogger","","Logger implementation that keeps up to `LOG_SIZE` log elements.",null,null],[5,"init_log","","Intialize log with default settings",null,{"inputs":[],"output":null}],[11,"new","","Creates new `RotatingLogger` with given levels.\nIt does not enforce levels - it&#39;s just read only.",654,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"append","","Append new log entry",654,null],[11,"levels","","Return levels",654,null],[11,"logs","","Return logs",654,null],[0,"path","ethcore_util","Path utilities",null,null],[5,"config_path","ethcore_util::path","Get the config path for application `name`.\n`name` should be capitalized, e.g. `&quot;Ethereum&quot;`, `&quot;Parity&quot;`.",null,{"inputs":[{"name":"str"}],"output":{"name":"pathbuf"}}],[5,"config_path_with","","Get the specific folder inside a config path.",null,{"inputs":[{"name":"str"},{"name":"str"}],"output":{"name":"pathbuf"}}],[5,"restrict_permissions_owner","","Restricts the permissions of given path only to the owner.",null,{"inputs":[{"name":"path"}],"output":{"name":"result"}}],[0,"ethereum","","Default ethereum paths",null,null],[5,"default","ethcore_util::path::ethereum","Default path for ethereum installation on Mac Os",null,{"inputs":[],"output":{"name":"pathbuf"}}],[5,"with_default","","Get the specific folder inside default ethereum installation",null,{"inputs":[{"name":"str"}],"output":{"name":"pathbuf"}}],[5,"with_testnet","","Get the specific folder inside default ethereum installation configured for testnet",null,{"inputs":[{"name":"str"}],"output":{"name":"pathbuf"}}],[0,"snappy","ethcore_util","Snappy compression bindings.",null,null],[3,"InvalidInput","ethcore_util::snappy","Attempted to decompress an uncompressed buffer.",null,null],[5,"max_compressed_len","","The maximum compressed length given a size.",null,{"inputs":[{"name":"usize"}],"output":{"name":"usize"}}],[5,"decompressed_len","","How large the given data will be when decompressed.",null,null],[5,"compress","","Compress a buffer using snappy.",null,null],[5,"compress_into","","Compress a buffer using snappy, writing the result into\nthe given output buffer, growing it if necessary.\nOtherwise, returns the length of the compressed data.",null,null],[5,"decompress","","Decompress a buffer using snappy. Will return an error if the buffer is not snappy-compressed.",null,null],[5,"decompress_into","","Decompress a buffer using snappy, writing the result into\nthe given output buffer, growing it if necessary.\nWill error if the input buffer is not snappy-compressed.\nOtherwise, returns the length of the decompressed data.",null,null],[5,"validate_compressed_buffer","","Validate a compressed buffer. True if valid, false if not.",null,null],[11,"fmt","","",655,null],[11,"fmt","","",655,null],[11,"new","ethcore_util","Create an instance with given name.",656,{"inputs":[{"name":"str"}],"output":{"name":"perftimer"}}],[11,"stop","","Stop the timer and print elapsed time on trace level with `perf` target.",656,null],[11,"drop","","",656,null],[14,"xjson!","","",null,null],[14,"vec_into!","","",null,null],[14,"hash_map!","","",null,null],[14,"hash_map_into!","","",null,null],[14,"map!","","",null,null],[14,"map_into!","","",null,null],[14,"flush!","","",null,null],[14,"flushln!","","",null,null]],"paths":[[3,"Box"],[3,"ParseBoolError"],[3,"Utf8Error"],[3,"ParseIntError"],[3,"TryFromIntError"],[3,"ParseFloatError"],[3,"FromUtf8Error"],[3,"FromUtf16Error"],[4,"ParseError"],[3,"DecodeUtf16Error"],[8,"StdError"],[3,"EscapeDefault"],[4,"LocalKeyState"],[3,"LocalKey"],[3,"Key"],[3,"Key"],[3,"ScopedKey"],[3,"KeyInner"],[3,"Builder"],[3,"Thread"],[3,"JoinHandle"],[3,"HashMap"],[3,"Iter"],[3,"Keys"],[3,"Values"],[3,"IterMut"],[3,"IntoIter"],[3,"ValuesMut"],[3,"Drain"],[4,"Entry"],[3,"OccupiedEntry"],[3,"VacantEntry"],[3,"RandomState"],[3,"HashSet"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Intersection"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Union"],[3,"VecDeque"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Drain"],[3,"Vec"],[3,"BinaryHeap"],[3,"Iter"],[3,"IntoIter"],[3,"Drain"],[3,"Iter"],[3,"IntoIter"],[3,"LinkedList"],[3,"IterMut"],[3,"FrontPlace"],[3,"BackPlace"],[3,"Vars"],[3,"VarsOs"],[4,"VarError"],[3,"SplitPaths"],[3,"JoinPathsError"],[3,"Args"],[3,"ArgsOs"],[3,"CString"],[3,"CStr"],[3,"NulError"],[3,"FromBytesWithNulError"],[3,"IntoStringError"],[3,"Error"],[3,"OsString"],[3,"OsStr"],[4,"Cow"],[3,"String"],[3,"Metadata"],[3,"OpenOptions"],[3,"Permissions"],[3,"FileType"],[3,"File"],[3,"ReadDir"],[3,"DirEntry"],[3,"DirBuilder"],[3,"BufReader"],[3,"IntoInnerError"],[3,"BufWriter"],[3,"LineWriter"],[3,"Cursor"],[4,"ErrorKind"],[3,"Empty"],[3,"Repeat"],[3,"Sink"],[3,"Stdin"],[3,"StdinLock"],[3,"Stdout"],[3,"StdoutLock"],[3,"Stderr"],[3,"StderrLock"],[4,"SeekFrom"],[3,"Chain"],[3,"Take"],[3,"Bytes"],[4,"CharsError"],[3,"Chars"],[3,"Split"],[3,"Lines"],[4,"IpAddr"],[4,"Ipv6MulticastScope"],[3,"Ipv4Addr"],[3,"Ipv6Addr"],[4,"SocketAddr"],[3,"SocketAddrV4"],[3,"SocketAddrV6"],[3,"TcpStream"],[3,"TcpListener"],[3,"Incoming"],[3,"UdpSocket"],[3,"AddrParseError"],[4,"Shutdown"],[3,"LookupHost"],[3,"stat"],[3,"Command"],[3,"ExitStatus"],[3,"Stdio"],[3,"ChildStdin"],[3,"ChildStdout"],[3,"ChildStderr"],[3,"SocketAddr"],[3,"UnixStream"],[3,"UnixListener"],[3,"Incoming"],[3,"UnixDatagram"],[3,"AssertUnwindSafe"],[3,"AssertRecoverSafe"],[4,"Prefix"],[3,"PrefixComponent"],[4,"Component"],[3,"Components"],[3,"Iter"],[3,"PathBuf"],[3,"Path"],[3,"StripPrefixError"],[3,"Display"],[3,"Output"],[3,"Child"],[3,"Select"],[3,"Handle"],[3,"SendError"],[3,"RecvError"],[4,"TryRecvError"],[4,"TrySendError"],[3,"Sender"],[3,"SyncSender"],[3,"Receiver"],[3,"Iter"],[3,"IntoIter"],[3,"Barrier"],[3,"BarrierWaitResult"],[3,"WaitTimeoutResult"],[3,"Condvar"],[3,"StaticCondvar"],[3,"Mutex"],[3,"StaticMutex"],[3,"MutexGuard"],[3,"Once"],[3,"OnceState"],[3,"RwLock"],[3,"StaticRwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"AtomicBool"],[3,"AtomicPtr"],[4,"Ordering"],[3,"AtomicI8"],[3,"AtomicU8"],[3,"AtomicI16"],[3,"AtomicU16"],[3,"AtomicI32"],[3,"AtomicU32"],[3,"AtomicI64"],[3,"AtomicU64"],[3,"AtomicIsize"],[3,"AtomicUsize"],[3,"Duration"],[3,"Instant"],[3,"SystemTime"],[3,"SystemTimeError"],[3,"PoisonError"],[4,"TryLockError"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"rlimit"],[3,"rusage"],[3,"in_addr"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ipv6_mreq"],[3,"hostent"],[3,"iovec"],[3,"pollfd"],[3,"winsize"],[3,"sockaddr"],[3,"sockaddr_in"],[3,"sockaddr_in6"],[3,"sockaddr_un"],[3,"sockaddr_storage"],[3,"addrinfo"],[3,"sockaddr_nl"],[3,"sockaddr_ll"],[3,"fd_set"],[3,"tm"],[3,"sched_param"],[3,"Dl_info"],[3,"epoll_event"],[3,"utsname"],[3,"lconv"],[3,"dirent"],[3,"dirent64"],[3,"rlimit64"],[3,"glob_t"],[3,"ifaddrs"],[3,"pthread_mutex_t"],[3,"pthread_rwlock_t"],[3,"pthread_mutexattr_t"],[3,"pthread_cond_t"],[3,"passwd"],[3,"statvfs"],[3,"dqblk"],[3,"signalfd_siginfo"],[3,"fsid_t"],[3,"mq_attr"],[3,"cpu_set_t"],[3,"sigaction"],[3,"stack_t"],[3,"siginfo_t"],[3,"glob64_t"],[3,"ucred"],[3,"statfs"],[3,"msghdr"],[3,"termios"],[3,"flock"],[3,"ipc_perm"],[3,"shmid_ds"],[3,"sigset_t"],[3,"stat"],[3,"stat64"],[3,"pthread_attr_t"],[3,"_libc_fpxreg"],[3,"_libc_xmmreg"],[3,"_libc_fpstate"],[3,"mcontext_t"],[3,"ucontext_t"],[3,"PanicInfo"],[3,"Location"],[3,"ExchangeHeapSingleton"],[3,"IntermediateBox"],[3,"Drain"],[3,"SipHasher"],[3,"BuildHasherDefault"],[4,"Option"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Rc"],[3,"Weak"],[3,"Unique"],[3,"Shared"],[3,"IntoIter"],[3,"Drain"],[3,"Slice"],[3,"TraitObject"],[3,"RangeFull"],[3,"Range"],[3,"RangeFrom"],[3,"RangeTo"],[4,"RangeInclusive"],[3,"RangeToInclusive"],[8,"Any"],[3,"TypeId"],[4,"Result"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"ToLowercase"],[3,"ToUppercase"],[3,"DecodeUtf16"],[3,"Cell"],[4,"BorrowState"],[3,"RefCell"],[3,"Ref"],[3,"RefMut"],[3,"UnsafeCell"],[3,"StepBy"],[3,"Repeat"],[3,"Empty"],[3,"Once"],[3,"Rev"],[3,"Cloned"],[3,"Cycle"],[3,"Chain"],[3,"Zip"],[3,"Map"],[3,"Filter"],[3,"FilterMap"],[3,"Enumerate"],[3,"Peekable"],[3,"SkipWhile"],[3,"TakeWhile"],[3,"Skip"],[3,"Take"],[3,"Scan"],[3,"FlatMap"],[3,"Fuse"],[3,"Inspect"],[3,"PhantomData"],[3,"EncodeUtf16"],[4,"SearchStep"],[3,"CharSearcher"],[3,"CharSliceSearcher"],[3,"CharPredicateSearcher"],[3,"StrSearcher"],[4,"Ordering"],[8,"Read"],[8,"Seek"],[8,"Write"],[8,"BufRead"],[3,"BTreeMap"],[3,"Iter"],[3,"IterMut"],[3,"IntoIter"],[3,"Keys"],[3,"Values"],[3,"Range"],[3,"ValuesMut"],[3,"RangeMut"],[4,"Entry"],[3,"VacantEntry"],[3,"OccupiedEntry"],[3,"BTreeSet"],[3,"Iter"],[3,"IntoIter"],[3,"Range"],[3,"Difference"],[3,"SymmetricDifference"],[3,"Intersection"],[3,"Union"],[3,"EnumSet"],[3,"Iter"],[4,"Bound"],[3,"Wrapping"],[4,"FpCategory"],[3,"NonZero"],[3,"EscapeUnicode"],[3,"EscapeDefault"],[3,"EncodeUtf8"],[3,"EncodeUtf16"],[3,"Iter"],[3,"IterMut"],[3,"Split"],[3,"SplitMut"],[3,"SplitN"],[3,"RSplitN"],[3,"SplitNMut"],[3,"RSplitNMut"],[3,"Windows"],[3,"Chunks"],[3,"ChunksMut"],[3,"Chars"],[3,"CharIndices"],[3,"Bytes"],[3,"Split"],[3,"RSplit"],[3,"SplitTerminator"],[3,"RSplitTerminator"],[3,"SplitN"],[3,"RSplitN"],[3,"MatchIndices"],[3,"RMatchIndices"],[3,"Matches"],[3,"RMatches"],[3,"Lines"],[3,"LinesAny"],[3,"CharRange"],[4,"Alignment"],[3,"DebugStruct"],[3,"DebugTuple"],[3,"DebugSet"],[3,"DebugList"],[3,"DebugMap"],[3,"Error"],[3,"Arguments"],[3,"Formatter"],[8,"FromStr"],[8,"Pattern"],[8,"Searcher"],[8,"ReverseSearcher"],[3,"Utf16Encoder"],[3,"SplitWhitespace"],[8,"Debug"],[8,"Write"],[8,"LowerHex"],[8,"Binary"],[8,"Pointer"],[8,"LowerExp"],[8,"UpperHex"],[8,"Octal"],[8,"UpperExp"],[8,"Display"],[8,"PartialEq"],[8,"Ord"],[8,"PartialOrd"],[8,"Drop"],[8,"Add"],[8,"Sub"],[8,"Mul"],[8,"Div"],[8,"Rem"],[8,"Neg"],[8,"Not"],[8,"BitAnd"],[8,"BitOr"],[8,"BitXor"],[8,"Shl"],[8,"Shr"],[8,"AddAssign"],[8,"SubAssign"],[8,"MulAssign"],[8,"DivAssign"],[8,"RemAssign"],[8,"BitAndAssign"],[8,"BitOrAssign"],[8,"BitXorAssign"],[8,"ShlAssign"],[8,"ShrAssign"],[8,"Index"],[8,"IndexMut"],[8,"Deref"],[8,"DerefMut"],[8,"Fn"],[8,"FnMut"],[8,"FnOnce"],[8,"Place"],[8,"Placer"],[8,"InPlace"],[8,"Boxed"],[8,"BoxPlace"],[8,"SliceConcatExt"],[8,"Hash"],[8,"Hasher"],[3,"Arc"],[3,"Weak"],[3,"RawVec"],[4,"Json"],[4,"CharacterSet"],[4,"Newline"],[3,"Config"],[4,"FromBase64Error"],[4,"FromHexError"],[4,"ErrorCode"],[4,"ParserError"],[4,"DecoderError"],[4,"EncoderError"],[3,"Encoder"],[4,"JsonEvent"],[4,"StackElement"],[3,"Stack"],[3,"Parser"],[3,"Builder"],[3,"Decoder"],[3,"PrettyJson"],[3,"AsJson"],[3,"AsPrettyJson"],[8,"FromBase64"],[8,"FromHex"],[8,"HeapSizeOf"],[3,"Interleave"],[3,"InterleaveShortest"],[3,"PutBack"],[3,"PutBackN"],[3,"Product"],[3,"Batching"],[3,"GroupBy"],[3,"Step"],[3,"Merge"],[3,"MergeBy"],[3,"MultiPeek"],[3,"Coalesce"],[3,"Dedup"],[3,"MendSlices"],[3,"TakeWhileRef"],[3,"WhileSome"],[3,"Combinations"],[3,"CombinationsN"],[3,"UniqueBy"],[3,"Unique"],[3,"Flatten"],[3,"FormatDefault"],[3,"Format"],[3,"Groups"],[3,"Group"],[3,"Chunks"],[3,"Chunk"],[3,"Intersperse"],[3,"ISlice"],[3,"KMerge"],[3,"Linspace"],[4,"MinMaxResult"],[3,"FlatTuples"],[3,"PadUsing"],[3,"RcIter"],[3,"RepeatN"],[3,"RepeatCall"],[3,"Unfold"],[3,"Stride"],[3,"StrideMut"],[3,"Tee"],[3,"ZipEq"],[3,"ZipLongest"],[4,"EitherOrBoth"],[3,"Zip"],[3,"ZipSlices"],[8,"Itertools"],[3,"Condvar"],[4,"UnparkResult"],[4,"RequeueOp"],[3,"WaitTimeoutResult"],[3,"Mutex"],[3,"MutexGuard"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"OnceState"],[3,"Once"],[8,"FromJson"],[3,"U256"],[3,"Mismatch"],[3,"OutOfBounds"],[4,"BaseDataError"],[4,"UtilError"],[3,"H32"],[3,"H64"],[3,"H128"],[3,"Address"],[3,"H256"],[3,"H264"],[3,"H512"],[3,"H520"],[3,"H1024"],[3,"H2048"],[8,"FixedHash"],[3,"PlainHasher"],[4,"BytesRef"],[8,"ToPretty"],[8,"BytesConvertable"],[8,"Populatable"],[3,"PrettySlice"],[6,"Bytes"],[3,"ElasticArray1024"],[3,"ElasticArray2"],[3,"ElasticArray4"],[3,"ElasticArray8"],[3,"ElasticArray16"],[3,"ElasticArray32"],[3,"ElasticArray64"],[3,"ElasticArray128"],[3,"ElasticArray256"],[3,"ElasticArray512"],[3,"ElasticArray2048"],[3,"PayloadInfo"],[4,"DecoderError"],[4,"Prototype"],[4,"RlpType"],[8,"Decoder"],[8,"Decodable"],[8,"RlpDecodable"],[8,"View"],[8,"Encoder"],[8,"ByteEncodable"],[8,"Encodable"],[8,"RlpEncodable"],[8,"Stream"],[8,"Compressible"],[3,"Rlp"],[3,"RlpIterator"],[3,"UntrustedRlp"],[3,"UntrustedRlpIterator"],[3,"RlpStream"],[4,"Filth"],[8,"SharedPrefix"],[8,"Hashable"],[8,"HashDB"],[8,"AsHashDB"],[3,"MemoryDB"],[3,"Config"],[4,"Error"],[8,"Migration"],[8,"SimpleMigration"],[3,"Batch"],[3,"Manager"],[3,"Progress"],[3,"OverlayDB"],[4,"Algorithm"],[8,"JournalDB"],[3,"CompactionProfile"],[3,"DatabaseConfig"],[3,"DBTransaction"],[3,"DatabaseIterator"],[3,"Database"],[4,"CryptoError"],[3,"Secp256k1"],[3,"SharedSecret"],[3,"Context"],[3,"PublicKey"],[3,"Signature"],[3,"RecoverableSignature"],[3,"SharedSecret"],[3,"SecretKey"],[3,"PublicKey"],[3,"Signature"],[3,"RecoveryId"],[3,"Signature"],[3,"RecoverableSignature"],[3,"Message"],[4,"Error"],[4,"ContextFlag"],[6,"Signature"],[3,"KeyPair"],[4,"TrieError"],[4,"TrieSpec"],[3,"StandardMap"],[4,"Alphabet"],[4,"ValueMode"],[3,"Score"],[3,"Journal"],[4,"Node"],[3,"TrieDB"],[3,"TrieDBIterator"],[3,"TrieDBMut"],[3,"SecTrieDB"],[3,"SecTrieDBMut"],[3,"FatDB"],[3,"FatDBIterator"],[3,"FatDBMut"],[8,"Trie"],[8,"TrieMut"],[3,"TrieFactory"],[3,"NibbleSlice"],[3,"NibbleSliceIterator"],[3,"NibbleVec"],[3,"SemanticVersion"],[4,"Colour"],[3,"ANSIString"],[3,"Style"],[3,"ANSIStrings"],[3,"RotatingLogger"],[3,"InvalidInput"],[3,"PerfTimer"]]};
searchIndex["ethkey"] = {"doc":"","items":[[3,"Brain","ethkey","Simple brainwallet.",null,null],[3,"KeyPair","","secp256k1 key pair",null,null],[3,"Secret","","",null,null],[3,"Public","","",null,null],[3,"Address","","",null,null],[3,"Message","","",null,null],[3,"Prefix","","Tries to find keypair with address starting with given prefix.",null,null],[3,"Random","","Randomly generates new keypair.",null,null],[3,"Signature","","",null,null],[4,"Error","","Crypto error",null,null],[13,"InvalidSecret","","Invalid secret key",0,null],[13,"InvalidPublic","","Invalid public key",0,null],[13,"InvalidAddress","","Invalid address",0,null],[13,"InvalidSignature","","Invalid EC signature",0,null],[13,"InvalidMessage","","Invalid AES message",0,null],[13,"Io","","IO Error",0,null],[13,"Custom","","Custom",0,null],[5,"public_to_address","","",null,{"inputs":[{"name":"public"}],"output":{"name":"address"}}],[5,"sign","","",null,{"inputs":[{"name":"secret"},{"name":"message"}],"output":{"name":"result"}}],[5,"verify_public","","",null,{"inputs":[{"name":"public"},{"name":"signature"},{"name":"message"}],"output":{"name":"result"}}],[5,"verify_address","","",null,{"inputs":[{"name":"address"},{"name":"signature"},{"name":"message"}],"output":{"name":"result"}}],[5,"recover","","",null,{"inputs":[{"name":"signature"},{"name":"message"}],"output":{"name":"result"}}],[11,"new","","",1,{"inputs":[{"name":"string"}],"output":{"name":"self"}}],[11,"generate","","",1,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"from","","",0,{"inputs":[{"name":"error"}],"output":{"name":"error"}}],[11,"fmt","","",2,null],[11,"from_secret","","Create a pair from secret key",2,{"inputs":[{"name":"secret"}],"output":{"name":"result"}}],[11,"from_keypair","","",2,{"inputs":[{"name":"secretkey"},{"name":"publickey"}],"output":{"name":"self"}}],[11,"secret","","",2,null],[11,"public","","",2,null],[11,"address","","",2,null],[11,"new","","",3,{"inputs":[{"name":"vec"},{"name":"usize"}],"output":{"name":"self"}}],[11,"generate","","",3,null],[11,"fmt","","",4,null],[11,"fmt","","",4,null],[11,"from_str","","",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",4,null],[11,"partial_cmp","","",4,null],[11,"cmp","","",4,null],[11,"clone","","",4,null],[11,"default","","",4,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",4,null],[11,"into","","",4,null],[11,"hash","","",4,null],[11,"deref","","",4,null],[11,"deref_mut","","",4,null],[11,"fmt","","",5,null],[11,"fmt","","",5,null],[11,"from_str","","",5,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",5,null],[11,"partial_cmp","","",5,null],[11,"cmp","","",5,null],[11,"clone","","",5,null],[11,"default","","",5,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",5,null],[11,"into","","",5,null],[11,"hash","","",5,null],[11,"deref","","",5,null],[11,"deref_mut","","",5,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"from_str","","",6,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",6,null],[11,"partial_cmp","","",6,null],[11,"cmp","","",6,null],[11,"clone","","",6,null],[11,"default","","",6,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",6,null],[11,"into","","",6,null],[11,"hash","","",6,null],[11,"deref","","",6,null],[11,"deref_mut","","",6,null],[11,"fmt","","",7,null],[11,"fmt","","",7,null],[11,"from_str","","",7,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"eq","","",7,null],[11,"partial_cmp","","",7,null],[11,"cmp","","",7,null],[11,"clone","","",7,null],[11,"default","","",7,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",7,null],[11,"into","","",7,null],[11,"hash","","",7,null],[11,"deref","","",7,null],[11,"deref_mut","","",7,null],[11,"generate","","",8,null],[11,"r","","Get a slice into the &#39;r&#39; portion of the data.",9,null],[11,"s","","Get a slice into the &#39;s&#39; portion of the data.",9,null],[11,"v","","Get the recovery byte.",9,null],[11,"eq","","",9,null],[11,"fmt","","",9,null],[11,"fmt","","",9,null],[11,"from_str","","",9,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"default","","",9,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",9,null],[11,"into","","",9,null],[11,"deref","","",9,null],[11,"deref_mut","","",9,null],[8,"Generator","","Generates new keypair.",null,null],[10,"generate","","Should be called to generate new keypair.",10,null],[11,"sign_schnorr","secp256k1","Create a Schnorr signature",11,null],[11,"verify_schnorr","","Verify a Schnorr signature",11,null],[11,"recover_schnorr","","Retrieves the public key for which `sig` is a valid signature for `msg`.\nRequires a verify-capable context.",11,null],[11,"new","","Creates a new Secp256k1 context",11,{"inputs":[],"output":{"name":"secp256k1"}}],[11,"with_caps","","Creates a new Secp256k1 context with the specified capabilities",11,{"inputs":[{"name":"contextflag"}],"output":{"name":"secp256k1"}}],[11,"without_caps","","Creates a new Secp256k1 context with no capabilities (just de/serialization)",11,{"inputs":[],"output":{"name":"secp256k1"}}],[11,"randomize","","(Re)randomizes the Secp256k1 context for cheap sidechannel resistence;\nsee comment in libsecp256k1 commit d2275795f by Gregory Maxwell",11,null],[11,"generate_keypair","","Generates a random keypair. Convenience function for `key::SecretKey::new`\nand `key::PublicKey::from_secret_key`; call those functions directly for\nbatch key generation. Requires a signing-capable context.",11,null],[11,"sign","","Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\nRequires a signing-capable context.",11,null],[11,"sign_recoverable","","Constructs a signature for `msg` using the secret key `sk` and RFC6979 nonce\nRequires a signing-capable context.",11,null],[11,"recover","","Determines the public key for which `sig` is a valid signature for\n`msg`. Requires a verify-capable context.",11,null],[11,"verify","","Checks that `sig` is a valid ECDSA signature for `msg` using the public\nkey `pubkey`. Returns `Ok(true)` on success. Note that this function cannot\nbe used for Bitcoin consensus checking since there may exist signatures\nwhich OpenSSL would verify but not libsecp256k1, or vice-versa. Requires a\nverify-capable context.",11,null],[11,"fmt","secp256k1::ecdh","",12,null],[11,"eq","","",12,null],[11,"ne","","",12,null],[11,"clone","","",12,null],[11,"new","","Creates a new shared secret from a pubkey and secret key",12,{"inputs":[{"name":"secp256k1"},{"name":"publickey"},{"name":"secretkey"}],"output":{"name":"sharedsecret"}}],[11,"new_raw","","Creates a new unhashed shared secret from a pubkey and secret key",12,{"inputs":[{"name":"secp256k1"},{"name":"publickey"},{"name":"secretkey"}],"output":{"name":"sharedsecret"}}],[11,"as_ptr","","Obtains a raw pointer suitable for use with FFI functions",12,null],[11,"from","","",12,{"inputs":[{"name":"sharedsecret"}],"output":{"name":"sharedsecret"}}],[11,"index","","",12,null],[11,"index","","",12,null],[11,"index","","",12,null],[11,"index","","",12,null],[11,"fmt","secp256k1::ffi","",13,null],[11,"clone","","",13,null],[11,"as_ptr","","Converts the object to a raw pointer for FFI interfacing",14,null],[11,"as_mut_ptr","","Converts the object to a mutable raw pointer for FFI interfacing",14,null],[11,"len","","Returns the length of the object as an array",14,null],[11,"is_empty","","Returns whether the object as an array is empty",14,null],[11,"eq","","",14,null],[11,"clone","","",14,null],[11,"index","","",14,null],[11,"index","","",14,null],[11,"index","","",14,null],[11,"index","","",14,null],[11,"index","","",14,null],[11,"fmt","","",14,null],[11,"new","","Create a new (zeroed) public key usable for the FFI interface",14,{"inputs":[],"output":{"name":"publickey"}}],[11,"blank","","Create a new (uninitialized) public key usable for the FFI interface",14,{"inputs":[],"output":{"name":"publickey"}}],[11,"hash","","",14,null],[11,"as_ptr","","Converts the object to a raw pointer for FFI interfacing",15,null],[11,"as_mut_ptr","","Converts the object to a mutable raw pointer for FFI interfacing",15,null],[11,"len","","Returns the length of the object as an array",15,null],[11,"is_empty","","Returns whether the object as an array is empty",15,null],[11,"eq","","",15,null],[11,"clone","","",15,null],[11,"index","","",15,null],[11,"index","","",15,null],[11,"index","","",15,null],[11,"index","","",15,null],[11,"index","","",15,null],[11,"fmt","","",15,null],[11,"as_ptr","","Converts the object to a raw pointer for FFI interfacing",16,null],[11,"as_mut_ptr","","Converts the object to a mutable raw pointer for FFI interfacing",16,null],[11,"len","","Returns the length of the object as an array",16,null],[11,"is_empty","","Returns whether the object as an array is empty",16,null],[11,"eq","","",16,null],[11,"clone","","",16,null],[11,"index","","",16,null],[11,"index","","",16,null],[11,"index","","",16,null],[11,"index","","",16,null],[11,"index","","",16,null],[11,"fmt","","",16,null],[11,"new","","Create a new (zeroed) signature usable for the FFI interface",15,{"inputs":[],"output":{"name":"signature"}}],[11,"blank","","Create a new (uninitialized) signature usable for the FFI interface",15,{"inputs":[],"output":{"name":"signature"}}],[11,"new","","Create a new (zeroed) signature usable for the FFI interface",16,{"inputs":[],"output":{"name":"recoverablesignature"}}],[11,"blank","","Create a new (uninitialized) signature usable for the FFI interface",16,{"inputs":[],"output":{"name":"recoverablesignature"}}],[11,"as_ptr","","Converts the object to a raw pointer for FFI interfacing",17,null],[11,"as_mut_ptr","","Converts the object to a mutable raw pointer for FFI interfacing",17,null],[11,"len","","Returns the length of the object as an array",17,null],[11,"is_empty","","Returns whether the object as an array is empty",17,null],[11,"eq","","",17,null],[11,"clone","","",17,null],[11,"index","","",17,null],[11,"index","","",17,null],[11,"index","","",17,null],[11,"index","","",17,null],[11,"index","","",17,null],[11,"fmt","","",17,null],[11,"new","","Create a new (zeroed) signature usable for the FFI interface",17,{"inputs":[],"output":{"name":"sharedsecret"}}],[11,"blank","","Create a new (uninitialized) signature usable for the FFI interface",17,{"inputs":[],"output":{"name":"sharedsecret"}}],[11,"as_ptr","secp256k1::key","Converts the object to a raw pointer for FFI interfacing",18,null],[11,"as_mut_ptr","","Converts the object to a mutable raw pointer for FFI interfacing",18,null],[11,"len","","Returns the length of the object as an array",18,null],[11,"is_empty","","Returns whether the object as an array is empty",18,null],[11,"eq","","",18,null],[11,"clone","","",18,null],[11,"index","","",18,null],[11,"index","","",18,null],[11,"index","","",18,null],[11,"index","","",18,null],[11,"index","","",18,null],[11,"fmt","","",18,null],[11,"hash","","",19,null],[11,"fmt","","",19,null],[11,"eq","","",19,null],[11,"ne","","",19,null],[11,"clone","","",19,null],[11,"new","","Creates a new random secret key",18,{"inputs":[{"name":"secp256k1"},{"name":"r"}],"output":{"name":"secretkey"}}],[11,"from_slice","","Converts a `SECRET_KEY_SIZE`-byte slice to a secret key",18,null],[11,"add_assign","","Adds one secret key to another, modulo the curve order",18,null],[11,"new","","Creates a new zeroed out public key",19,{"inputs":[],"output":{"name":"publickey"}}],[11,"is_valid","","Determines whether a pubkey is valid",19,null],[11,"as_ptr","","Obtains a raw pointer suitable for use with FFI functions",19,null],[11,"from_secret_key","","Creates a new public key from a secret key.",19,{"inputs":[{"name":"secp256k1"},{"name":"secretkey"}],"output":{"name":"result"}}],[11,"from_slice","","Creates a public key directly from a slice",19,null],[11,"serialize_vec","","Serialize the key as a byte-encoded pair of values. In compressed form\nthe y-coordinate is represented by only a single bit, as x determines\nit up to one bit.",19,null],[11,"add_exp_assign","","Adds the pk corresponding to `other` to the pk `self` in place",19,null],[11,"from","","",19,{"inputs":[{"name":"publickey"}],"output":{"name":"publickey"}}],[11,"as_ptr","secp256k1::schnorr","Converts the object to a raw pointer for FFI interfacing",20,null],[11,"as_mut_ptr","","Converts the object to a mutable raw pointer for FFI interfacing",20,null],[11,"len","","Returns the length of the object as an array",20,null],[11,"is_empty","","Returns whether the object as an array is empty",20,null],[11,"eq","","",20,null],[11,"clone","","",20,null],[11,"index","","",20,null],[11,"index","","",20,null],[11,"index","","",20,null],[11,"index","","",20,null],[11,"index","","",20,null],[11,"fmt","","",20,null],[11,"deserialize","","Deserializes a signature from a 64-byte vector",20,null],[11,"serialize","","Serializes a signature to a 64-byte vector",20,null],[11,"fmt","secp256k1","",21,null],[11,"eq","","",21,null],[11,"ne","","",21,null],[11,"clone","","",21,null],[11,"fmt","","",22,null],[11,"eq","","",22,null],[11,"ne","","",22,null],[11,"clone","","",22,null],[11,"fmt","","",23,null],[11,"eq","","",23,null],[11,"ne","","",23,null],[11,"clone","","",23,null],[11,"from_i32","","Allows library users to create valid recovery IDs from i32.",21,{"inputs":[{"name":"i32"}],"output":{"name":"result"}}],[11,"to_i32","","Allows library users to convert recovery IDs to i32.",21,null],[11,"from_der","","Converts a DER-encoded byte slice to a signature",22,null],[11,"from_der_lax","","Converts a &quot;lax DER&quot;-encoded byte slice to a signature. This is basically\nonly useful for validating signatures in the Bitcoin blockchain from before\n2016. It should never be used in new applications. This library does not\nsupport serializing to this &quot;format&quot;",22,null],[11,"normalize_s","","Normalizes a signature to a &quot;low S&quot; form. In ECDSA, signatures are\nof the form (r, s) where r and s are numbers lying in some finite\nfield. The verification equation will pass for (r, s) iff it passes\nfor (r, -s), so it is possible to ``modify&#39;&#39; signatures in transit\nby flipping the sign of s. This does not constitute a forgery since\nthe signed message still cannot be changed, but for some applications,\nchanging even the signature itself can be a problem. Such applications\nrequire a &quot;strong signature&quot;. It is believed that ECDSA is a strong\nsignature except for this ambiguity in the sign of s, so to accomodate\nthese applications libsecp256k1 will only accept signatures for which\ns is in the lower half of the field range. This eliminates the\nambiguity.",22,null],[11,"as_ptr","","Obtains a raw pointer suitable for use with FFI functions",22,null],[11,"as_mut_ptr","","Obtains a raw mutable pointer suitable for use with FFI functions",22,null],[11,"serialize_der","","Serializes the signature in DER format",22,null],[11,"from","","",22,{"inputs":[{"name":"signature"}],"output":{"name":"signature"}}],[11,"from_compact","","Converts a compact-encoded byte slice to a signature. This\nrepresentation is nonstandard and defined by the libsecp256k1\nlibrary.",23,null],[11,"as_ptr","","Obtains a raw pointer suitable for use with FFI functions",23,null],[11,"serialize_compact","","Serializes the recoverable signature in compact format",23,null],[11,"to_standard","","Converts a recoverable signature to a non-recoverable one (this is needed\nfor verification",23,null],[11,"from","","",23,{"inputs":[{"name":"recoverablesignature"}],"output":{"name":"recoverablesignature"}}],[11,"index","","",22,null],[11,"index","","",22,null],[11,"index","","",22,null],[11,"index","","",22,null],[11,"as_ptr","","Converts the object to a raw pointer for FFI interfacing",24,null],[11,"as_mut_ptr","","Converts the object to a mutable raw pointer for FFI interfacing",24,null],[11,"len","","Returns the length of the object as an array",24,null],[11,"is_empty","","Returns whether the object as an array is empty",24,null],[11,"eq","","",24,null],[11,"clone","","",24,null],[11,"index","","",24,null],[11,"index","","",24,null],[11,"index","","",24,null],[11,"index","","",24,null],[11,"index","","",24,null],[11,"fmt","","",24,null],[11,"from_slice","","Converts a `MESSAGE_SIZE`-byte slice to a message object",24,null],[11,"fmt","","",25,null],[11,"clone","","",25,null],[11,"eq","","",25,null],[11,"fmt","","",25,null],[11,"cause","","",25,null],[11,"description","","",25,null],[11,"fmt","","",26,null],[11,"clone","","",26,null],[11,"eq","","",26,null],[11,"fmt","","",26,null],[11,"clone","","",11,null],[11,"eq","","",11,null],[11,"fmt","","",11,null],[11,"drop","","",11,null]],"paths":[[4,"Error"],[3,"Brain"],[3,"KeyPair"],[3,"Prefix"],[3,"Address"],[3,"Secret"],[3,"Message"],[3,"Public"],[3,"Random"],[3,"Signature"],[8,"Generator"],[3,"Secp256k1"],[3,"SharedSecret"],[3,"Context"],[3,"PublicKey"],[3,"Signature"],[3,"RecoverableSignature"],[3,"SharedSecret"],[3,"SecretKey"],[3,"PublicKey"],[3,"Signature"],[3,"RecoveryId"],[3,"Signature"],[3,"RecoverableSignature"],[3,"Message"],[4,"Error"],[4,"ContextFlag"]]};
searchIndex["ethash"] = {"doc":"Ethash implementation\nSee https://github.com/ethereum/wiki/wiki/Ethash","items":[[3,"ProofOfWork","ethash","Computation result",null,null],[12,"value","","Difficulty boundary",0,null],[12,"mix_hash","","Mix",0,null],[3,"SeedHashCompute","","",null,null],[3,"EthashManager","","Light/Full cache manager.",null,null],[5,"quick_get_difficulty","","Difficulty quick check for POW preverification",null,{"inputs":[{"name":"h256"},{"name":"u64"},{"name":"h256"}],"output":{"name":"h256"}}],[11,"new","","",1,{"inputs":[],"output":{"name":"seedhashcompute"}}],[11,"get_seedhash","","",1,null],[11,"resume_compute_seedhash","","",1,{"inputs":[{"name":"h256"},{"name":"u64"},{"name":"u64"}],"output":{"name":"h256"}}],[6,"H256","","",null,null],[17,"ETHASH_EPOCH_LENGTH","","",null,null],[11,"new","","Create a new new instance of ethash manager",2,{"inputs":[],"output":{"name":"ethashmanager"}}],[11,"compute_light","","Calculate the light client data\n`block_number` - Block number to check\n`light` - The light client handler\n`header_hash` - The header hash to pack into the mix\n`nonce` - The nonce to pack into the mix",2,null]],"paths":[[3,"ProofOfWork"],[3,"SeedHashCompute"],[3,"EthashManager"]]};
searchIndex["bigint"] = {"doc":"","items":[[0,"uint","bigint","Big unsigned integer types",null,null],[3,"U512","bigint::uint","Little-endian large integer type",null,null],[12,"0","","",0,null],[3,"U256","","Little-endian large integer type",null,null],[12,"0","","",1,null],[3,"U128","","Little-endian large integer type",null,null],[12,"0","","",2,null],[4,"FromDecStrErr","","Conversion from decimal string error",null,null],[13,"InvalidCharacter","","Char not from range 0-9",3,null],[13,"InvalidLength","","Value does not fit into type",3,null],[8,"Uint","","Large, fixed-length unsigned integer type.",null,null],[10,"zero","","Returns new instance equalling zero.",4,{"inputs":[],"output":{"name":"self"}}],[10,"one","","Returns new instance equalling one.",4,{"inputs":[],"output":{"name":"self"}}],[10,"max_value","","Returns the largest value that can be represented by this integer type.",4,{"inputs":[],"output":{"name":"self"}}],[10,"from_dec_str","","Convert from a decimal string.",4,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[10,"low_u32","","Conversion to u32",4,null],[10,"low_u64","","Conversion to u64",4,null],[10,"as_u32","","Conversion to u32 with overflow checking",4,null],[10,"as_u64","","Conversion to u64 with overflow checking",4,null],[10,"bits","","Return the least number of bits needed to represent the number",4,null],[10,"bit","","Return if specific bit is set",4,null],[10,"byte","","Return single byte",4,null],[10,"to_big_endian","","Convert U256 to the sequence of bytes with a big endian",4,null],[10,"exp10","","Create `Uint(10**n)`",4,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[10,"pow","","Return eponentation `self**other`. Panic on overflow.",4,null],[10,"overflowing_pow","","Return wrapped eponentation `self**other` and flag if there was an overflow",4,null],[10,"overflowing_add","","Add this `Uint` to other returning result and possible overflow",4,null],[10,"overflowing_sub","","Subtract another `Uint` from this returning result and possible overflow",4,null],[10,"overflowing_mul","","Multiple this `Uint` with other returning result and possible overflow",4,null],[10,"overflowing_div","","Divide this `Uint` by other returning result and possible overflow",4,null],[10,"overflowing_rem","","Returns reminder of division of this `Uint` by other and possible overflow",4,null],[10,"overflowing_neg","","Returns negation of this `Uint` and overflow (always true)",4,null],[10,"is_zero","","Returns",4,null],[11,"eq","","",3,null],[11,"fmt","","",3,null],[11,"hash","","",0,null],[11,"eq","","",0,null],[11,"ne","","",0,null],[11,"clone","","",0,null],[11,"from_dec_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"low_u32","","",0,null],[11,"low_u64","","",0,null],[11,"as_u32","","Conversion to u32 with overflow checking",0,null],[11,"as_u64","","Conversion to u64 with overflow checking",0,null],[11,"is_zero","","",0,null],[11,"bits","","Return the least number of bits needed to represent the number",0,null],[11,"bit","","",0,null],[11,"byte","","",0,null],[11,"to_big_endian","","",0,null],[11,"exp10","","",0,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"zero","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"one","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"max_value","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"pow","","Fast exponentation by squaring\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring",0,null],[11,"overflowing_pow","","Fast exponentation by squaring\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring",0,null],[11,"overflowing_add","","Optimized instructions",0,null],[11,"overflowing_sub","","",0,null],[11,"overflowing_mul","","",0,null],[11,"overflowing_div","","",0,null],[11,"overflowing_rem","","",0,null],[11,"overflowing_neg","","",0,null],[11,"default","","",0,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",0,{"inputs":[{"name":"u64"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"u8"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"u16"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"u32"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"usize"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"i64"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"i8"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"i16"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"i32"}],"output":{"name":"u512"}}],[11,"from","","",0,{"inputs":[{"name":"isize"}],"output":{"name":"u512"}}],[11,"from","","",0,null],[11,"from_str","","",0,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"add","","",0,null],[11,"sub","","",0,null],[11,"mul","","",0,null],[11,"div","","",0,null],[11,"rem","","",0,null],[11,"bitand","","",0,null],[11,"bitxor","","",0,null],[11,"bitor","","",0,null],[11,"not","","",0,null],[11,"shl","","",0,null],[11,"shr","","",0,null],[11,"cmp","","",0,null],[11,"partial_cmp","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"fmt","","",0,null],[11,"hash","","",1,null],[11,"eq","","",1,null],[11,"ne","","",1,null],[11,"clone","","",1,null],[11,"from_dec_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"low_u32","","",1,null],[11,"low_u64","","",1,null],[11,"as_u32","","Conversion to u32 with overflow checking",1,null],[11,"as_u64","","Conversion to u64 with overflow checking",1,null],[11,"is_zero","","",1,null],[11,"bits","","Return the least number of bits needed to represent the number",1,null],[11,"bit","","",1,null],[11,"byte","","",1,null],[11,"to_big_endian","","",1,null],[11,"exp10","","",1,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"zero","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"one","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"max_value","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"pow","","Fast exponentation by squaring\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring",1,null],[11,"overflowing_pow","","Fast exponentation by squaring\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring",1,null],[11,"overflowing_add","","Optimized instructions",1,null],[11,"overflowing_sub","","",1,null],[11,"overflowing_mul","","",1,null],[11,"overflowing_div","","",1,null],[11,"overflowing_rem","","",1,null],[11,"overflowing_neg","","",1,null],[11,"default","","",1,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",1,{"inputs":[{"name":"u64"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"u8"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"u16"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"u32"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"usize"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"i64"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"i8"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"i16"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"i32"}],"output":{"name":"u256"}}],[11,"from","","",1,{"inputs":[{"name":"isize"}],"output":{"name":"u256"}}],[11,"from","","",1,null],[11,"from_str","","",1,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"add","","",1,null],[11,"sub","","",1,null],[11,"mul","","",1,null],[11,"div","","",1,null],[11,"rem","","",1,null],[11,"bitand","","",1,null],[11,"bitxor","","",1,null],[11,"bitor","","",1,null],[11,"not","","",1,null],[11,"shl","","",1,null],[11,"shr","","",1,null],[11,"cmp","","",1,null],[11,"partial_cmp","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"fmt","","",1,null],[11,"hash","","",2,null],[11,"eq","","",2,null],[11,"ne","","",2,null],[11,"clone","","",2,null],[11,"from_dec_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"low_u32","","",2,null],[11,"low_u64","","",2,null],[11,"as_u32","","Conversion to u32 with overflow checking",2,null],[11,"as_u64","","Conversion to u64 with overflow checking",2,null],[11,"is_zero","","",2,null],[11,"bits","","Return the least number of bits needed to represent the number",2,null],[11,"bit","","",2,null],[11,"byte","","",2,null],[11,"to_big_endian","","",2,null],[11,"exp10","","",2,{"inputs":[{"name":"usize"}],"output":{"name":"self"}}],[11,"zero","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"one","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"max_value","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"pow","","Fast exponentation by squaring\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring",2,null],[11,"overflowing_pow","","Fast exponentation by squaring\nhttps://en.wikipedia.org/wiki/Exponentiation_by_squaring",2,null],[11,"overflowing_add","","Optimized instructions",2,null],[11,"overflowing_sub","","",2,null],[11,"overflowing_mul","","",2,null],[11,"overflowing_div","","",2,null],[11,"overflowing_rem","","",2,null],[11,"overflowing_neg","","",2,null],[11,"default","","",2,{"inputs":[],"output":{"name":"self"}}],[11,"from","","",2,{"inputs":[{"name":"u64"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"u8"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"u16"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"u32"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"usize"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"i64"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"i8"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"i16"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"i32"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"isize"}],"output":{"name":"u128"}}],[11,"from","","",2,null],[11,"from_str","","",2,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"add","","",2,null],[11,"sub","","",2,null],[11,"mul","","",2,null],[11,"div","","",2,null],[11,"rem","","",2,null],[11,"bitand","","",2,null],[11,"bitxor","","",2,null],[11,"bitor","","",2,null],[11,"not","","",2,null],[11,"shl","","",2,null],[11,"shr","","",2,null],[11,"cmp","","",2,null],[11,"partial_cmp","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"fmt","","",2,null],[11,"full_mul","","Multiplies two 256-bit integers to produce full 512-bit integer\nNo overflow possible",1,null],[11,"from","","",0,{"inputs":[{"name":"u256"}],"output":{"name":"u512"}}],[11,"from","","",1,{"inputs":[{"name":"u512"}],"output":{"name":"u256"}}],[11,"from","","",0,{"inputs":[{"name":"u256"}],"output":{"name":"u512"}}],[11,"from","","",1,{"inputs":[{"name":"u512"}],"output":{"name":"u256"}}],[11,"from","","",2,{"inputs":[{"name":"u256"}],"output":{"name":"u128"}}],[11,"from","","",2,{"inputs":[{"name":"u512"}],"output":{"name":"u128"}}],[11,"from","","",0,{"inputs":[{"name":"u128"}],"output":{"name":"u512"}}],[11,"from","","",1,{"inputs":[{"name":"u128"}],"output":{"name":"u256"}}],[11,"heap_size_of_children","","",2,null],[11,"heap_size_of_children","","",1,null]],"paths":[[3,"U512"],[3,"U256"],[3,"U128"],[4,"FromDecStrErr"],[8,"Uint"]]};
initSearch(searchIndex);
